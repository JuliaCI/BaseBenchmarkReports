cset: moving following pidspec: 15376
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.334875978 seconds)
loading group "string"... done (took 0.596879763 seconds)
loading group "linalg"... done (took 7.300870329 seconds)
loading group "parallel"... done (took 0.167012221 seconds)
loading group "find"... done (took 1.172655771 seconds)
loading group "tuple"... done (took 2.048478795 seconds)
loading group "dates"... done (took 1.305382866 seconds)
loading group "micro"... done (took 0.243222557 seconds)
loading group "io"... done (took 0.988945966 seconds)
loading group "scalar"... done (took 40.336492504 seconds)
loading group "sparse"... done (took 12.910643794 seconds)
loading group "broadcast"... done (took 1.006860424 seconds)
loading group "union"... done (took 14.090424679 seconds)
loading group "simd"... done (took 4.666238133 seconds)
loading group "random"... done (took 9.407152127 seconds)
loading group "problem"... done (took 1.988837888 seconds)
loading group "array"... done (took 22.386865819 seconds)
loading group "misc"... done (took 2.009309699 seconds)
loading group "sort"... done (took 3.407154083 seconds)
loading group "collection"... done (took 19.171838424 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.554900234 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144262095 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120372638 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142923084 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186350872 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13463295 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144678058 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086821161 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.904079275 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163296243 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14179648 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519005404 seconds)
done (took 4.990700912 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.199105833 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090979787 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09860305 seconds)
  done (took 0.881754129 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067132248 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130881207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080950739 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068457089 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067787156 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.08266045 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067748784 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06617752 seconds)
  done (took 1.261799731 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076262489 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069985603 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085963607 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06836714 seconds)
  done (took 0.998948267 seconds)
done (took 4.114836104 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.934728495 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.254175091 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192354599 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465540885 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153059957 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.189985353 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66925355 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31923703 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21487431 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102998704 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106118758 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39099988 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108591478 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672467493 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076242254 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108680183 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159627123 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.421742586 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08265224 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084331176 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104818765 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143834907 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10279622 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078500383 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169843261 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072511639 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.152239059 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095771133 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069692777 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.249562572 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191031917 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688459787 seconds)
  done (took 10.567682222 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102083023 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120280404 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070110421 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141553848 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120538826 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072387978 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072900878 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084651659 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094079502 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163343093 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117584062 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12384773 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067691629 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070932903 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102976797 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230822968 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.096238025 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102145375 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074109074 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076902955 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125209668 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.0981362 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082438283 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094931421 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15232661 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193648818 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099322156 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113094565 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070474744 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099006296 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130959644 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131163872 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069490605 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084755548 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158205493 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097093062 seconds)
  done (took 4.616156904 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107120521 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176899458 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093597231 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156564917 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086707263 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131403075 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067525928 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101306902 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253536565 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.095997488 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.491204558 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13045993 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125879484 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106200068 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068575783 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088070943 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068921911 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.614671493 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.112313051 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139228708 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103025898 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075710388 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086979812 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359410602 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070007272 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066534837 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08629249 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060104165 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148195602 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069117082 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.264779273 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109054377 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070235971 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120781313 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.181815999 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111754167 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125932785 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068226282 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066965923 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172186404 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092521358 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067175789 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107437394 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120060959 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.106549561 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084481524 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069013639 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18473208 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067329947 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100940148 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94309907 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166786562 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079317945 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067235004 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296373577 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102677241 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068601597 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065894631 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082711077 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066008133 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259683113 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163443104 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068387044 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084315558 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067735452 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084900079 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37180113 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068846392 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064563265 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085456353 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078766402 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.709861388 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073883802 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082824432 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075543133 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089788823 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087186667 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067604778 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08662145 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068397969 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081495227 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070985097 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102367877 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212726758 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069392872 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067566499 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082765688 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087478325 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113370302 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071623744 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083592711 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115189433 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071040666 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068899906 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.122652214 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068338356 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104162105 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085438539 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115604057 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082993723 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.122210863 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06931586 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114278609 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073547823 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116319855 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097272167 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074489961 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157142651 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066118541 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083003655 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069324669 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082731187 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070601246 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069918985 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100639533 seconds)
  done (took 21.312966578 seconds)
done (took 38.300487204 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.309712606 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093986891 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092785121 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076830721 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094836985 seconds)
  done (took 1.444696536 seconds)
done (took 2.188290039 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149575516 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103231139 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081033799 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098932829 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081748579 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104054101 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11648875 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082359606 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117795948 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065349656 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113540911 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065118673 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079423586 seconds)
  done (took 2.034927618 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084718807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084914588 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085813807 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082096513 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078850847 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083223963 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079836748 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105746262 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080276475 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08782577 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065749938 seconds)
  done (took 1.65774249 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083444963 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084080143 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086268579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081143413 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079832755 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081569389 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079777594 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101953098 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080423188 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089192718 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065670066 seconds)
  done (took 1.656308458 seconds)
done (took 6.084394572 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080840493 seconds)
  done (took 0.817451671 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.733415571 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.78216861 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08568594 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137237214 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222837355 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.158869354 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.45143826 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113867858 seconds)
  done (took 10.632306117 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.116436844 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089621147 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069543728 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086818233 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073954792 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087830482 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070723502 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070364853 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088678335 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073219687 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087376941 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071216724 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084686004 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069497312 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087091326 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072648133 seconds)
  done (took 2.108423307 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105758883 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105272879 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091562368 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077615114 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090171233 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074022678 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093125539 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076037145 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088113233 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073662886 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092552682 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075416907 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089910173 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.0669849 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091401492 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079045076 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088450163 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076683201 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092118086 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077775033 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092666494 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06645806 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088539163 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076422517 seconds)
  done (took 2.884739471 seconds)
done (took 17.184408014 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.134696236 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078041337 seconds)
  done (took 0.955885057 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085220641 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099531516 seconds)
  done (took 0.934878207 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085400754 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082349865 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091171854 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094740152 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083509169 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067831023 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103269668 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068038871 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082458514 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067600241 seconds)
  done (took 1.575361221 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071150169 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095149252 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072623026 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098356396 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075127475 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081369518 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07549413 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085152491 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080198822 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079681317 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072576313 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100396403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071902702 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100635596 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090115607 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07076679 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088351233 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069427626 seconds)
  done (took 2.229477589 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068778617 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068231882 seconds)
  done (took 0.88884214 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069675926 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065260195 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083251234 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068273069 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080396782 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064754894 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079793944 seconds)
  done (took 1.262790532 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412892269 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110200562 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264974016 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072486399 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107095448 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.296201268 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067326131 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071820662 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089117646 seconds)
  done (took 2.283413807 seconds)
done (took 10.879219748 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082235726 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08715978 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112141179 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.434632214 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107140849 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067758366 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144576394 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.212733696 seconds)
done (took 2.001135787 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128683617 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.630223247 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.413708842 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215180644 seconds)
  done (took 2.015244759 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.388937733 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092333758 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074472923 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068224624 seconds)
  done (took 1.383139709 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068368386 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071603809 seconds)
  done (took 0.899140364 seconds)
done (took 5.183047295 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069256277 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068270344 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081636929 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068406477 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065853029 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081110114 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098589124 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084330071 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067162405 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084330399 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068681244 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067501405 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084494717 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066214656 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065136228 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080448451 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067473822 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06475775 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080224023 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067624181 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080509539 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067288177 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065783147 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080740186 seconds)
  done (took 2.572331621 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087917834 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084006108 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073665285 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08967307 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071653931 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.092569912 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073064215 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067758855 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088702629 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069905359 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086655735 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072368115 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085482607 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072996118 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085567822 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072874115 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089188163 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06807827 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070081013 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088145171 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073135814 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083879476 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072558757 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088751637 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072406766 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087167653 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069650296 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084060188 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073700584 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087106312 seconds)
  done (took 3.140699851 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073360213 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065042332 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081452091 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072514854 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065543392 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082348748 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065355073 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081715505 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065690437 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065611204 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08256767 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065088964 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065948707 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082046938 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066736494 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084597328 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082235128 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065670213 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080517534 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066656057 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084731385 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064963795 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064929916 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081220002 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0647631 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064402941 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081425343 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065475683 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081033226 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065424709 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068307777 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085073881 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065128161 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072023706 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08509661 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065398732 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069286074 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080739481 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065642478 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.0806695 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065462786 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064946468 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080937471 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072215739 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065018989 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082986562 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065014902 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082550513 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066150052 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06850623 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080934904 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064821898 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083096693 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066193349 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069512618 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080612983 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066547783 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064834119 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082106833 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064948836 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080696873 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065335053 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068435578 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081367046 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080223058 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087329255 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06506803 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06676098 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082710362 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067904309 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067220348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095484253 seconds)
  done (took 6.025313907 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119871866 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094704876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083521104 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067478258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081676058 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066131502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068822542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08128892 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067757025 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087749193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06648848 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082760023 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067675946 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080769688 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081320813 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068107295 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087556052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063854671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065557398 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085026445 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06660296 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085527563 seconds)
  done (took 2.4863893 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.191782539 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089022697 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111896314 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090921174 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086414416 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075653739 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087537713 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072458106 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07210919 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085970077 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07050487 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087850054 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06966484 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086283478 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069942152 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086934471 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072504461 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086570761 seconds)
  done (took 2.361804411 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080832127 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067898641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106759058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067955168 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085504534 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070073438 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089350776 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076424982 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086708511 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068393552 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092383772 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07109652 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.195235586 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067769428 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070164289 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083835863 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070508835 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08415553 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076531309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088389402 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073249976 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09314763 seconds)
  done (took 2.634294217 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08401492 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069531797 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102795397 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086372471 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064001076 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066628408 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090093312 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067663203 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09030304 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069432466 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083862732 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068243608 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072264299 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083558976 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073168236 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084287603 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070760816 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083782947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069592988 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064285771 seconds)
  done (took 2.314127475 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090377835 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085829394 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069501445 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09433664 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070197853 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085934591 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077804145 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085369301 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069890924 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110187439 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069420756 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085654292 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078465448 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090371726 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069850635 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094521597 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078111115 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094690519 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085148308 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069678694 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110506234 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069687872 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094463784 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069947572 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085348582 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070250264 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085387224 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075205937 seconds)
  done (took 3.090328452 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069617386 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068174843 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081412267 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066183802 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065411434 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081337692 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065474018 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065520747 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083811013 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065760937 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083932171 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068271371 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068596992 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083698633 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067789783 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067865508 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083730885 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065290091 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065022815 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081285554 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067916878 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083148515 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068442843 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065382445 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081707227 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068379464 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065902307 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08168174 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067976332 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065575421 seconds)
  done (took 2.940281435 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079906466 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092543507 seconds)
  done (took 0.948276269 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066433079 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08311079 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081815918 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072273509 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089235992 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06930227 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093690868 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072833464 seconds)
  done (took 1.402818728 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084460753 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079779494 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086323249 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.096826504 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080612198 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085497035 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15931989 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085284539 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075742553 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083131051 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082694487 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066885081 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091541566 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0684366 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090654613 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075258067 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082366851 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074473008 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070951652 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082541763 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070004381 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096211822 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07158362 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081810998 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070534235 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076784709 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097019272 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069345602 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088491154 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076199842 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089975265 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06328937 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068079098 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085038489 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066051639 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094750007 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084476963 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088037093 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077790011 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085547618 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079230528 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.08011313 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073295281 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075054847 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095196331 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069095006 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084813752 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063639553 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082246378 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071034394 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063758077 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084804572 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063736568 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091681809 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072353768 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078505549 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083830546 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069836075 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087216779 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072372818 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091127665 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070417776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070817672 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084594187 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07510868 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089007774 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078303266 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079917806 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062351439 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066311775 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094912204 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091952244 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091234041 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069338601 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08607283 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065837916 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071648802 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085907581 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074143024 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090983267 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069220362 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091140082 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075517124 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085631116 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071272755 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077114974 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082876064 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070782709 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082752962 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084865668 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083517454 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066589047 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065881096 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096177098 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072033717 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084292732 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06628151 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092375681 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0630566 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069458126 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085127154 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069681558 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095944855 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074350914 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090219765 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077548351 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092927917 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068478143 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071852299 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082518153 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069167909 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084191936 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075724855 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062682174 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088069517 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069085964 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086028128 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077218042 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082816078 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068365863 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076892366 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090953218 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06755355 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081801832 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072374659 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084584537 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072394344 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076637795 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083635581 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064413437 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079854882 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071526633 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0678383 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088951899 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073978094 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088320673 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063360573 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082789775 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073035837 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095294012 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06886019 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069554506 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091190386 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069815823 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084413997 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07528232 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071374881 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084714834 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074894303 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086105319 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063433833 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088778039 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070876134 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066888069 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089021651 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072321411 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087274219 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068820848 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066595582 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090785889 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069742811 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084408246 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068218678 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083948999 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079253079 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070213846 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080682787 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065746703 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093018267 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066182616 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067861542 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083802566 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071683279 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085802402 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066800038 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084431825 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070107059 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079390537 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090825253 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069844003 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090379868 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079491442 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085094686 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072076105 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084959538 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069513525 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069915973 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09532178 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073990609 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090288669 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070668805 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081444135 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075486549 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075798898 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085542517 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066825363 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085568608 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072121837 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.090225053 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07310764 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069557 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084170464 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070205022 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088379772 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071225965 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068366747 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085098739 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073380985 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085577854 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075042619 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086983086 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079173237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088918663 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064139961 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07173611 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084160556 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075668674 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.08086824 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066921851 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067164921 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086576557 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068139964 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088872457 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06317621 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075934263 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093144036 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068683602 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084932304 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068753986 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091896889 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069980933 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072409937 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088253393 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0749292 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095511346 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067803951 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088247465 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080040797 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068768957 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07993896 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073841296 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08424074 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067811683 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067807095 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083717965 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071726056 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093422747 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075395609 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079355325 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071470205 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066626016 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084207157 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064787612 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089911587 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071946071 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069136594 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092393033 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069092478 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08555717 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073153907 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08495404 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070271274 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069774513 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088531076 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069769823 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087915629 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068465931 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087795573 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067547861 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066206742 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087212054 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069403167 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068470152 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091134874 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067770879 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085396509 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070595656 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086188947 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070066364 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069640815 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084845007 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072848494 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085806825 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068839593 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071555879 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080892148 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075801791 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08511586 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076802237 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068604445 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082658427 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073656551 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088848087 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074433754 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085909354 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069741777 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069436737 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085784089 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071437913 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092732728 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066738709 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096184762 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077205454 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085894178 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071401558 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068342353 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087218256 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067441105 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085895979 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069325032 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068990087 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085945863 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07328118 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088302387 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068908237 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069838125 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086585523 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068564981 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086281752 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063149832 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068069442 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084879211 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068279307 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096683895 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069100512 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084887716 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068221594 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069793116 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084880757 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064842461 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093200854 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078205878 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086127134 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076487317 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067232385 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087172411 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079662408 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083036148 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06743237 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083587216 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066340387 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075874306 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086677374 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078216895 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085621493 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068386666 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066448552 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086606442 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068184074 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080120904 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066986276 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07280688 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08489455 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06896044 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085720547 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072358686 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06986278 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096740871 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068095503 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087368438 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068935686 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082725832 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068483168 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067644447 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088727597 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069277441 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066609623 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083630039 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068342882 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08660956 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070598017 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068095625 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087749213 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075999647 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085017143 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07216828 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08897218 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06346962 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070877447 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085562994 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069017178 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085450004 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073202144 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071474413 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086645224 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077878504 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085686279 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06983976 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086130702 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066511336 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068264915 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085985583 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068563377 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08497252 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070539355 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076549502 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083611464 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071846783 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085477204 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06925889 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093029703 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070178952 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072998721 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093078978 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069046929 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088244908 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07735092 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088959152 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072553212 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087015402 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070854237 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074700497 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084880708 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076156767 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086297024 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070466258 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070410953 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084284404 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069133492 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086184077 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067889041 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075054541 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087436487 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068420608 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08512652 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067380835 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069467855 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090718787 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077174777 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088460128 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072329053 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081204626 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066314569 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069160009 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083805377 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07028653 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089844053 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074774661 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070660228 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086332329 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067790304 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095987629 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075287379 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089891611 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067154707 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072314462 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087673956 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071085932 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087101923 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069382906 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069645836 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089756357 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071397515 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085437012 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076543909 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088950156 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069668903 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070846244 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087070873 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068988795 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06380836 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069951718 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07089026 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091599582 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071927904 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08623868 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080010973 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066433245 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086613064 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072274732 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085074979 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073084901 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.0809726 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070264866 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070096126 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088118387 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064009086 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085223117 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066762328 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070294097 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086212794 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063872176 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097031506 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07864135 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089465735 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067837884 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067084053 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081356151 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064329053 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084519002 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069702743 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070889227 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096719873 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068219366 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085431333 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064463786 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068584557 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088860883 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072118762 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083277073 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064646185 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067984954 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089353338 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074655101 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08441839 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069031187 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071329534 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088360971 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066974387 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089586574 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066477327 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089623531 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082340807 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068918999 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086972029 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074512161 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093956126 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070137319 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081082027 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070019717 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071339657 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086985006 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06983261 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087580766 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085125671 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089975719 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068064343 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084501459 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071303609 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068210775 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.094624084 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070088647 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086646875 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074273268 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070217915 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094919846 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070945475 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09486267 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071364415 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089629976 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068569796 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086559807 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066991631 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067000381 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087646037 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069960765 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090748679 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077008696 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085022619 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081171546 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095608786 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071119232 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065888372 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086272296 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069002241 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064237436 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087867733 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067402365 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085163072 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067665229 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067395869 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087198931 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074519614 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087651029 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069828577 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067851811 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081037507 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070531143 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089008428 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071045845 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065724577 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086934175 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070476516 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09084007 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072834649 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084062991 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070690097 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071534687 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087423732 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064650553 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093118403 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068310397 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071641085 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086063888 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069716025 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087717248 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072435641 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073609771 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088410331 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07165724 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095014731 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072065696 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083653764 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06653049 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074174873 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085403973 seconds)
  done (took 47.258993306 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111247104 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083879629 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064802557 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082044961 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077312574 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083450492 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064378908 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064782551 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083268063 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068167952 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082184865 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064160897 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091247529 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088621981 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094971448 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08632284 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065292284 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064872164 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083176303 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066362826 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091893029 seconds)
  done (took 2.478271835 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.090290124 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103840895 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079753048 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101938237 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092244161 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080124874 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097876017 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080051258 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10074174 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094876971 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082995226 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09755148 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076591216 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093872403 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075996986 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095913153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101179018 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075142657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.098115584 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079501758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095199901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079519463 seconds)
  done (took 2.787379532 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070555991 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069074698 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088103204 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064177104 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067993466 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082033706 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072611525 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084618145 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07265098 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067094593 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08578331 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06822871 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087864501 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.075504073 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068319586 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084053291 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134708075 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072444055 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086940803 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070164486 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064490705 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088972996 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065247078 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082546003 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068106656 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071924793 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087147699 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066745997 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086286473 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067616001 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068998758 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084377093 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070981563 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068455917 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085884782 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067641313 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085718259 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069050488 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063663793 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08473927 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069858712 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08320145 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069766347 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070525419 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084956757 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066349977 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069694272 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086200006 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06374736 seconds)
  done (took 4.556786923 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089065977 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142576836 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089669466 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124533884 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084241853 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094819663 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073209494 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125235334 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085085566 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067341851 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105623126 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083133028 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087541472 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073687421 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093732151 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068598632 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087796986 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067981775 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090911639 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068106602 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091202097 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076144405 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10165286 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082375627 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090740871 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067099086 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086271309 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073920304 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100499189 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090527188 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073899365 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092020747 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084906609 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091922762 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068550775 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089717045 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085630744 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087422523 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071387742 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084614447 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071230396 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091276936 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076359843 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10397785 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069950075 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092432244 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069105547 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084264767 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083036451 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089555604 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077353852 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102516335 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071901624 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088410406 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073844345 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103112311 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087011331 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068362455 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071232112 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100634816 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084219652 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072646847 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100902569 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071679043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094535537 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083941101 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092971695 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072650855 seconds)
  done (took 6.795828223 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078866637 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092746922 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083967364 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10231065 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093587535 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076152612 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093103885 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075449246 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093487226 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080219047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093932524 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118078542 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07008556 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095957861 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075227255 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094490267 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07534596 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094943582 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093121931 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076093766 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093571281 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084727636 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094224298 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102685353 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10550771 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088640469 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075373656 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094745509 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103308954 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076069482 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106261366 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075798007 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093905555 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102830497 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087136969 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09360842 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068292741 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094122143 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075788657 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094217056 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070755835 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102656159 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093190815 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071103014 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093093886 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076027611 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102052569 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106440034 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078434427 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098316028 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075538428 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10250993 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09294153 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075592542 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101997722 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128167827 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084216368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102017682 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093532319 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084565779 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102282209 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109019189 seconds)
  done (took 6.444468665 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092160451 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096952117 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100245304 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064894027 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066875296 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092333378 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066693681 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08626359 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078858929 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096733241 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080669497 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091009023 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075908571 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09871046 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091626079 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076580344 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091139192 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072555542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096760098 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072803274 seconds)
  done (took 2.520033205 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079675265 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105231051 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070746565 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094001139 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072280201 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07506956 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090857433 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072461249 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088669709 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07292769 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098628902 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080581516 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08820578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075702526 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098400439 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075228601 seconds)
  done (took 2.173212271 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081994955 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098739947 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084110829 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088658383 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067420837 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084507488 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069374002 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064384247 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084407448 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083954445 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088817496 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07099197 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088055816 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067549562 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06589197 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092332711 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065297625 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08622001 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069947081 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.102608597 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080148836 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08653668 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069817006 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090106932 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069320464 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094175099 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069562465 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067388028 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086915647 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070234938 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088743867 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077327542 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085310129 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068563032 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085765983 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066682853 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068940795 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088214675 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072087216 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087006587 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067733499 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.08606627 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069029004 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070311668 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084066114 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070306017 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083036293 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075836289 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066655307 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087829231 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068380751 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089793653 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070189292 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097798523 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073338751 seconds)
  done (took 5.17649655 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084593763 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071863827 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083947278 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067783275 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091382396 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071759479 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071893754 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089747406 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071011617 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086323992 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070976451 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090410885 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071400538 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07233678 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089478269 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072231064 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082974665 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071335121 seconds)
  done (took 2.250518064 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07630781 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06879072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096800548 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069463604 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087778891 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072022432 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064928526 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086884262 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067958122 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087416193 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070235358 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07094329 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086948985 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07209805 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087757668 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069759496 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070663562 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087070715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069974384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083700085 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07250641 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066629524 seconds)
  done (took 2.52720832 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07625326 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096235404 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167755427 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110297511 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085268594 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101652946 seconds)
  done (took 1.479040395 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094933744 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102862946 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070669192 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109002663 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077973118 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089569641 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071104637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08910104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080421837 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104382327 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071005741 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100374945 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098739597 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082475624 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095779139 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07620521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090712314 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070524483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089318771 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108243044 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071874878 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098853936 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071276148 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089702345 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071827953 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098664873 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098195299 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084879671 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089762203 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080755174 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096589138 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070852715 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098982955 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103115207 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073311795 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098353093 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071471615 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108489718 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095188694 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080314237 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091383459 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077895776 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098606881 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076162867 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098777045 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08938174 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077246196 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089692916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071810645 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11544879 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095991486 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080409396 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096239332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079815341 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09934925 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115460774 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103420968 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080000111 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095425492 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104504429 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079765084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096175463 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079680339 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103652499 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096067252 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07984438 seconds)
  done (took 6.737676507 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085867492 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107866374 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072325954 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105282652 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09853839 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071418256 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08942967 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071806048 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089710703 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071383697 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13241366 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071485299 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099133311 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098124045 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071666625 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090149713 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071964867 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098332865 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071225471 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115901516 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089857051 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079149339 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098662068 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098301159 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085212268 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097312405 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070676161 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090965285 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0710015 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090775895 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094934996 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072143321 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098561497 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070853896 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098999499 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071591974 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090903841 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077347405 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090392037 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076913842 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09938561 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107908201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072011616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090661305 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10353564 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071734381 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090098806 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07096 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089432514 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071598876 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104296639 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084529778 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103990905 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098112982 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071322397 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090935656 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072214263 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090158264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071355759 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096840286 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099261948 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071471378 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115522587 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071139282 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090881171 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098393456 seconds)
  done (took 6.643583847 seconds)
done (took 130.505300949 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204851486 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18633885 seconds)
  done (took 1.230321592 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072421273 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118573262 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081251577 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130316609 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088885073 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102616735 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121040187 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08308954 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069095929 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08880836 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069462979 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08975385 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134508623 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069408438 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089277453 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071273649 seconds)
  done (took 2.325749603 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107684783 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202212002 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111623508 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067543763 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101922402 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081546781 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087617728 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081352245 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094486544 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068058244 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100116871 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078943087 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067522454 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097459535 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09316396 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082074063 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068397939 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10098168 seconds)
  done (took 2.543633821 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110425578 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146152276 seconds)
  done (took 1.103727654 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204746482 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124613586 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208426508 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.439072071 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.227605349 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.281136452 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176589496 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177578285 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.157295691 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172000299 seconds)
  done (took 3.012732948 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10391514 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175129188 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.320720573 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141456849 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090375972 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118872581 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142252619 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.111729629 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086132429 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103826709 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102966099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079570718 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120171656 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077926753 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097081879 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079352421 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124774391 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076588627 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099321855 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078125126 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121470312 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06892061 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09784278 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076584781 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100654621 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081456325 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087799613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069293988 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097560338 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077954421 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101442667 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116857301 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081190659 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133606043 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104916624 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137064337 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080058851 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095077251 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077228183 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095049374 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080273638 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099904367 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106859809 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080748089 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068755397 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100345201 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068401184 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087460058 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083346812 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100163953 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083085365 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10088376 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134824496 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099977907 seconds)
  done (took 6.375046383 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.768651057 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.136800802 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074238951 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.833007943 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11756369 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085841032 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.757381759 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096692981 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235522524 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766167886 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114482834 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079492355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.21043278 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.222454509 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.941244021 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29491895 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.65330629 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10759017 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112167346 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.138379405 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165581526 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161539912 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153532559 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.403292651 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098488788 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074364612 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141337502 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101627889 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144397721 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086935546 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098277455 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160278903 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.23303099 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185341245 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077744505 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094057274 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073502555 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152194371 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251724398 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195785383 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.1613554 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071738481 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072000388 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166230769 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135841884 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071521358 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146214686 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.157966619 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174514475 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076991599 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079442124 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.168362286 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144586496 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.149215876 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10448115 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.280498029 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.292064322 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09364032 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125051441 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088094783 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246174286 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08627626 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207148746 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143108286 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193998131 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073149499 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760740521 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.155102271 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072141536 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099163127 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124815913 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079028075 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143268659 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148653146 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372762483 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148051256 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097577823 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072219684 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222995811 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08688838 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093255165 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145757167 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078731159 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127034233 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148734507 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171784925 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153814441 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.219184594 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149725375 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165451379 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07818919 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128392479 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098324545 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.196586505 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.179193796 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166269131 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194847325 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146628776 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147172788 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.152114972 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101878097 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.156604297 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123515823 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104989257 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144663319 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.176794948 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127977429 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106545884 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076090947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165479631 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130266764 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089706378 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144262465 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175637934 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.435644899 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153081844 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0694341 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111271471 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14285107 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146063202 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100685308 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21897313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126567083 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173648054 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125975299 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070772437 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126112872 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.147661613 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103182829 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126675603 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.145719226 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080140302 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219667509 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198657125 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103929547 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203088339 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165591315 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079004017 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175526905 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125096506 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151603175 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081238824 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142638433 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099429085 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778726297 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.149183874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126062619 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076428195 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169002862 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07212253 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10729448 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106158944 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071018931 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755077243 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088841765 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104238781 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085466805 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100505334 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126403309 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141604404 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075386511 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16677521 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18875787 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101916848 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124305032 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086215787 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16536141 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078558286 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10652623 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08587564 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108137021 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127054569 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076295374 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107747855 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153510618 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.14737415 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201995196 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.549247828 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09437831 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086007527 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209325464 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093569919 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.249415773 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14189573 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20727395 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145255154 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105637235 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289632878 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.148508561 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169253324 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089140869 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157576534 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091949188 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141649239 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148245541 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093922463 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079689326 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.145580485 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.171916892 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14964339 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.945890305 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073498716 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207790367 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069486493 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175880228 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.079544769 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100713977 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.254910562 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094558395 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.153974234 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.145984402 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0978323 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084977755 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.695042163 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08659147 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165045354 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078840605 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202701557 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147354631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141124627 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141437594 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101500321 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145871562 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.192380511 seconds)
  done (took 41.570600908 seconds)
done (took 59.004815868 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283529196 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195462563 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258504303 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151577272 seconds)
  done (took 1.839303851 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150832978 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108980407 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120821477 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088060264 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.108378457 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088077082 seconds)
  done (took 1.537918891 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.433874417 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282936333 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243421691 seconds)
  done (took 1.833792439 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.305014641 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234164618 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.458929235 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.304507247 seconds)
  done (took 2.288454482 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.196775744 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116901045 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091275147 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087595943 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164522488 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268533887 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.132414503 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196250254 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080829401 seconds)
  done (took 2.256718432 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.206615427 seconds)
done (took 10.836906803 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113458653 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.321274131 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106254021 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.191284019 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.162141084 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.29906662 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.326050233 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.23125481 seconds)
    (9/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103121484 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153857306 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.302968936 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.180537637 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193823856 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133507993 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.115312172 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09588435 seconds)
    (17/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.176331513 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081760908 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.219622345 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075732114 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.18213747 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095456135 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115947962 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131993168 seconds)
    (25/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.143675329 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075746117 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079354048 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.204568869 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.106451588 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098593118 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.234602221 seconds)
    (32/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.299080372 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070137472 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053467656 seconds)
    (35/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079137325 seconds)
    (36/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.146287575 seconds)
    (37/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.176855857 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096774852 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116989779 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100493436 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075454626 seconds)
    (42/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.136912342 seconds)
    (43/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076561984 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122302835 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103078326 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.119146848 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054167291 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074461374 seconds)
    (49/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097030352 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.240438016 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148456386 seconds)
    (52/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.133001863 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075649 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117434337 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078769497 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.099721667 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077526435 seconds)
    (58/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.072078498 seconds)
    (59/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.096862502 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075938482 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.149033008 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.248544168 seconds)
    (63/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078306973 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114817416 seconds)
    (65/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.091602657 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091980691 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118550911 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.132174216 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085761547 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067310176 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09647164 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.122764479 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095955458 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.244914511 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090721985 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.26931777 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072702206 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100777773 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.152553812 seconds)
    (80/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096316534 seconds)
    (81/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05431912 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10375211 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076619441 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.254685476 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055031045 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.256642762 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077586959 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.171392484 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070025491 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.090625306 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093794836 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.074644737 seconds)
    (93/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.119015131 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.253458186 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054779504 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120825068 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.245117219 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076563799 seconds)
    (99/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072985933 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.091221719 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.267641364 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144235067 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091102234 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054842042 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10755075 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090021769 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068758443 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.221183961 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104065107 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074962147 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079540365 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086521284 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11555984 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092251026 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114755475 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.26307136 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118389784 seconds)
    (118/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094126062 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.165072697 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173660619 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068749477 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080604137 seconds)
    (123/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.257287789 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112191704 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.177140033 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077202838 seconds)
    (127/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071688616 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.14148195 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054584335 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.171482574 seconds)
    (131/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.105322916 seconds)
    (132/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075784319 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113407633 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089822524 seconds)
    (135/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085652409 seconds)
    (136/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.133613485 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13096946 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.245979734 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054373749 seconds)
    (140/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.259587963 seconds)
    (141/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.076316413 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.469088425 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076802097 seconds)
    (144/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079525027 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110218501 seconds)
    (146/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.08032264 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 0.163144957 seconds)
    (148/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076910755 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097297094 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054544212 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072869591 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097708421 seconds)
    (153/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084897325 seconds)
    (154/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063968384 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091105219 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075015322 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097340252 seconds)
    (158/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055216915 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.259882053 seconds)
    (160/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064785574 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067748774 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097255698 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055336613 seconds)
    (164/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101773445 seconds)
    (165/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098161223 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055587133 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089703478 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054021345 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070062081 seconds)
    (170/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.076648702 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067936445 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075831821 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076097856 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.221609077 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090013066 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074621617 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088409948 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070675096 seconds)
    (179/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054893789 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.24283035 seconds)
    (181/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076830783 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097951999 seconds)
    (183/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078961538 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099915433 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136021805 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095633295 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090150406 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115304642 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081755238 seconds)
    (190/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11436222 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055183871 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054199008 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115631259 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137784842 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075839979 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076216873 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.159651193 seconds)
    (198/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105208273 seconds)
    (199/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114293776 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.140972503 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069539175 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053453331 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096057777 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098366527 seconds)
    (205/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062925893 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094070416 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088918741 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203533268 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.159575391 seconds)
    (210/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071475898 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092053473 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067990969 seconds)
    (213/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075358961 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.075386693 seconds)
    (215/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077232543 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114312525 seconds)
    (217/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.227459834 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.125022343 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117545792 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070345269 seconds)
    (221/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067266509 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096505982 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055554833 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121108428 seconds)
    (225/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078077397 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054077512 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172503627 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213284236 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070777782 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09268635 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073549468 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06818705 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.102723498 seconds)
    (234/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054332072 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075690749 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07610074 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069697912 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192303884 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07530221 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141033068 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074537955 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.163179778 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196371618 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055442234 seconds)
    (245/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09636694 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094409495 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106872075 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075470485 seconds)
    (249/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064172059 seconds)
    (250/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089816029 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068577353 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054936572 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.076247607 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143746683 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088905715 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092414942 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088322524 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067929355 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077190385 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078219296 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18138566 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07665248 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054094397 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069805657 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098684399 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054387563 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054722896 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076683229 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093688251 seconds)
    (270/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090818345 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069270881 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074955003 seconds)
    (273/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076858995 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05432084 seconds)
    (275/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054635405 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053937105 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099162389 seconds)
    (278/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055048607 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112943575 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094235849 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090584861 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 0.145259364 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 0.155539402 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067249293 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.11171574 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070356009 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099286884 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068706605 seconds)
    (289/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069548531 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089374638 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082859818 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088265057 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054167238 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076620678 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092372001 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073980031 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197332594 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068903105 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05619718 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080697423 seconds)
    (301/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069163582 seconds)
    (302/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055118873 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078470014 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074628281 seconds)
    (305/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057123559 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 0.154247366 seconds)
    (307/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069664871 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091975552 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068207555 seconds)
  done (took 35.833017799 seconds)
done (took 36.713815531 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084715442 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117392903 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078290124 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118568988 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084479422 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102983528 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076094174 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104067608 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083412167 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107246058 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082441697 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056995077 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100316465 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078570793 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100247527 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096555133 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104012033 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075173856 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099048528 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069140247 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077249714 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090113422 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070475965 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056952678 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103756849 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076125889 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098422977 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078506799 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067628857 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090967094 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072659475 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097296958 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068229784 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082383499 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097189171 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077002348 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100489793 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080386069 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071242951 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090614373 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076765344 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.090476705 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075615937 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076207337 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096500175 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074475968 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098943121 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083372296 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117740671 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070430106 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077083534 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103168864 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079696676 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098229753 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072645055 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.09892456 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074199248 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095940564 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099693682 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070843544 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098934654 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078497063 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073921093 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.099018106 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077708798 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101576776 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080075895 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096511391 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078924494 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074861345 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09152748 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077209971 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094147445 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069081468 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079090045 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.101558391 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06785701 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073781644 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.097868008 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074667582 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089596376 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071041008 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07069028 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096524741 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070173742 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057158851 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.094838542 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07440615 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068210975 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.099515485 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07568662 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096855929 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070316497 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080282519 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090460018 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074553334 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089900819 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069441153 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071033745 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095573985 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068813862 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070888825 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.099973764 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070452832 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096302625 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083518192 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069509369 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.09752354 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068125747 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068346456 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107191947 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078673895 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.090344573 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071103725 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090072227 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076543818 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067998722 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091125174 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069086127 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068578927 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09641853 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068623077 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070606767 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098620383 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082175999 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.093228288 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072921343 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070173538 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090556168 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074422724 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068016336 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.091038091 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070529132 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.088012603 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071397589 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068444044 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098561764 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070809294 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07646485 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092639348 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077625209 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.095179297 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074638529 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07423527 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089515541 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061355763 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071438469 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09308053 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070969363 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.090236764 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070372664 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068861871 seconds)
done (took 13.5778429 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068869253 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175967676 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.129633492 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100928474 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114592224 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068643922 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104014145 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132641919 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071473874 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132151951 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091918628 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110982925 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14258353 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067815411 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069443052 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095030892 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070047257 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115450146 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107168054 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11374166 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144920737 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068044225 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125148597 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094043259 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115203504 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129494639 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069762747 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071908625 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094919632 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119697261 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090810453 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072287473 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091850789 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104461259 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120889509 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111847022 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.0690357 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111146876 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068868038 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06842114 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118705217 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127170028 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.085568907 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.108082122 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072688157 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093908281 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071032681 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112189272 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094404932 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.107377671 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114827696 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139391385 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072495096 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109591312 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069041075 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113616039 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.087133129 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093809909 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070247822 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071300576 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.090417349 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072674501 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114710929 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.097066911 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.0964146 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086295278 seconds)
  done (took 7.439497856 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088345936 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119312037 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087654997 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110589414 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069476123 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070006576 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091934841 seconds)
  done (took 1.577857611 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070663217 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092271947 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116408451 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093107133 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.112874355 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091386426 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102216896 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06973145 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109684997 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070990157 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114287667 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109004146 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093917024 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077440149 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11785695 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070147598 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094205161 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091946818 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073382603 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117107259 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072678294 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113200346 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071842975 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069645073 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108582039 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070640612 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142208491 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075170412 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094387236 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07277303 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067849348 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144559397 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107513833 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081042025 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092886001 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086742207 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108965116 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068403232 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086791906 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098227371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084890301 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093819429 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07161615 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068488534 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097413945 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081900125 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093527273 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070501379 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07233382 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113487786 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071038224 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.10707183 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07037698 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073667666 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09436979 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076431205 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102922354 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071427165 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090386574 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094745391 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088097715 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110349701 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084824041 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110428432 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072205855 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107665879 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085349754 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073029429 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094910737 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073059228 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109913211 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068203439 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071055399 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104261482 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071943707 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116907062 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094402878 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094363876 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080247988 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07004829 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093729362 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069683122 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.117521727 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07389257 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070328727 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097051131 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073734918 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091243301 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069223467 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073809299 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091046396 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071352518 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072686801 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093215875 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073462617 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110522747 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070663453 seconds)
  done (took 9.554241411 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071684479 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070641161 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095040971 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071501244 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070822281 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094211734 seconds)
  done (took 1.423083147 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103015847 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095419268 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084644703 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099175851 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111745135 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108335503 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087095993 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109232486 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088769655 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107053538 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087379145 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110226829 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.114829348 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076864125 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085767554 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100173132 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086729578 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104399002 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082822666 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10034393 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092061992 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100585089 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077454134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109585779 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074197627 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098991751 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081411344 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105492373 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083189063 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110500091 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077016626 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096669501 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07589697 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109404013 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086614612 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098748235 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075793156 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074908894 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104443329 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074703639 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109966733 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077427134 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105324542 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075096083 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109208715 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074721121 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097776493 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080430855 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109255503 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075551421 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097440199 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075603802 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096992157 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075065508 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097347927 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085937471 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097020604 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086219432 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.098935143 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075820306 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073391178 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097836704 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085027544 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097222236 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083726959 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.098001467 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075504021 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09905291 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077123362 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09902427 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07536255 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096652972 seconds)
  done (took 7.561507272 seconds)
done (took 28.487811296 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.657380925 seconds)
  done (took 1.598995221 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.805733076 seconds)
  done (took 1.751578355 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.003471004 seconds)
  done (took 16.953559096 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.64829252 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.827471768 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.831264616 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161522309 seconds)
  done (took 3.412248343 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.895918823 seconds)
  done (took 1.861045512 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.247314441 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25648119 seconds)
  done (took 1.453746897 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.734390375 seconds)
  done (took 1.688037103 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.29961056 seconds)
  done (took 2.247143883 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.349068816 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188844482 seconds)
  done (took 1.498811116 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.533857792 seconds)
  done (took 1.491902673 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.625486489 seconds)
  done (took 7.587782832 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235256904 seconds)
  done (took 1.209056888 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.274639389 seconds)
  done (took 1.236286669 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.281685252 seconds)
  done (took 4.242425032 seconds)
done (took 49.182296072 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082798992 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084778153 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108478982 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081128844 seconds)
  done (took 1.312661387 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082960231 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076035591 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.1043445 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075939935 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105276299 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076419126 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102212417 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081377007 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099213429 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077458631 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07633932 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098668611 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079869233 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100938241 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074383937 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078725707 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104527899 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076337095 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103577058 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077921519 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097019897 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078361376 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079210157 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.098942372 seconds)
  done (took 3.077244976 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081598747 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07641509 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101186752 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075108452 seconds)
  done (took 1.304450344 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081274901 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120085499 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09414537 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104360573 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097505543 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114261753 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072826525 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072569859 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099117422 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080935427 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095245201 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103312616 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116650974 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080486059 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105731983 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069795555 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071814898 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115148009 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080504711 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105224376 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07372301 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102966604 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070937952 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118726537 seconds)
  done (took 3.219132396 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081152755 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130026749 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082772803 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116779925 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096468954 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068305825 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103565245 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095115198 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154581018 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068094792 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.098066946 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06848594 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098856997 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06863132 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079173474 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137433113 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140427036 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071768762 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125304607 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068501942 seconds)
  done (took 2.922093972 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079256158 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072866194 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091842977 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071535271 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079548992 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099302391 seconds)
  done (took 1.47178247 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07171088 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069628906 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093060086 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06958946 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073680431 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.093308999 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068207671 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070166605 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094249905 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069986953 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092607586 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068960618 seconds)
  done (took 1.908611099 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.468588806 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071599127 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095566871 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068891516 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074292372 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094065847 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084009746 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070509066 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119125789 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070043101 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09458059 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071195538 seconds)
  done (took 2.360091934 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271166183 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081252996 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.337116262 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172517074 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143108492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162122672 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107886006 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145036591 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204095141 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143359959 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23591395 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206274675 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138806432 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17248146 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11791618 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137620951 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191249704 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227927436 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133937059 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233641044 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190161567 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16073597 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212344334 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108468626 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13904833 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149828847 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099222345 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083624108 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238868297 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1916093 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183810898 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142818769 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125112384 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241408386 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228860272 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177982782 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166970678 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114270004 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.160951567 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171441208 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269557386 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117873626 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203200717 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139346938 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109742221 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179629941 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151176681 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151162825 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141060996 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118116396 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181092693 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249529457 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172942958 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116994746 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140429039 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145665441 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148591043 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106625981 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279450404 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201293351 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189202257 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074225741 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126278313 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194693006 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166279072 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14740732 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184745075 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098852873 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201881515 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195119068 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149965769 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208315282 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166120589 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118473162 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152698836 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17651808 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161291506 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239316392 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158337374 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101764519 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157213182 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13180135 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08690513 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172422334 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079122603 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244241804 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129022969 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145445125 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143445467 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116333932 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14181978 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228177649 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211957148 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109682657 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09453962 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134277118 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155534205 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182266549 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117985788 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140512363 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152575542 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082585426 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198116369 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078493663 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157922432 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.106793329 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156878863 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169411738 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078969385 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183014224 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10716325 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132921112 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170600664 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228663844 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119689962 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08693395 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236847478 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161772445 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136661468 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183237593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224611186 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.132067675 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105699194 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210509315 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253960694 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119155818 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2061825 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135217981 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112762131 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091537821 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186264048 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145917645 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152967628 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087633989 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159386995 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236426754 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078469213 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125226756 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171032024 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110538164 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110129176 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145231269 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105262272 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124357944 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131413552 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138761244 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176645113 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15856258 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139531182 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158937013 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129946932 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229712023 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119165391 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110576966 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133848672 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098770732 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172291558 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225084736 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08430714 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235542356 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161545025 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13522703 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15356425 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087130754 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20244443 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082977103 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073700692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205816688 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142971682 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143021451 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192202918 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134455441 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161445226 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157994445 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192432747 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16708626 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167614684 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138851015 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091249529 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144858076 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18595691 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077541005 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124188841 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086948736 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134542233 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125661955 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112573961 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179802189 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161638652 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128559587 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144763959 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128538177 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189527009 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080784914 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192250341 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152961836 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099740364 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220167992 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223167947 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172947591 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132079261 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183172919 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.099627447 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078519896 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119440827 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163710113 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112108886 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089595263 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150015635 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214412849 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164518815 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17260342 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143025116 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155967386 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221953291 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075573993 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147178913 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189149635 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159269433 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161296857 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096199615 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128151199 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208946606 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110286503 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284701104 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152448116 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160902336 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190527388 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140953455 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110034941 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109475393 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201890297 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137157665 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19084204 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132424725 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119441397 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143667858 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084707722 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136472711 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162602077 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152459605 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198024628 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149615791 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168030967 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107179283 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1502338 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158331522 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155840037 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067240711 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153291149 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231307603 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127332438 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152926383 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221301233 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08384036 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157791058 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24916454 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209264187 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091039084 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142010028 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155758878 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164235946 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15182977 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204973377 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142865228 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171450418 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142886638 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.09030513 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119174254 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130754301 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114443743 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12755334 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145485371 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150279495 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.12500768 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16718502 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144503423 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143470213 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152625886 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128150754 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096371709 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128866807 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244533385 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155991741 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24443992 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132216679 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190642857 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237957861 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103923651 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085072792 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110467057 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177807146 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088879218 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195808223 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100271193 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136954415 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160611201 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206504291 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101188689 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098010873 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142693406 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171102643 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143189222 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104160349 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138330478 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233009414 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135432125 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084423437 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159736582 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135813476 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134546092 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248020762 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065021012 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129154378 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079937925 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110832886 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16703173 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224423088 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087598121 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160232392 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153708666 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156478934 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166254891 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131718657 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127683223 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119043657 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212820593 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163817638 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121999592 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146582958 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166224176 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225967647 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138383171 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100555207 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239387184 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220679133 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232966822 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093125413 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149186881 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149091999 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145230437 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207351641 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0883406 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238335337 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113197537 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174127915 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136641503 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123748462 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165524419 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126562408 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094323123 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214977852 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154270994 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113257879 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083831659 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147580053 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173057029 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135101234 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078353212 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201992464 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075787282 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19959168 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209580418 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112400167 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138806682 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101921242 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112162814 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139940875 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13593142 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117404344 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124144239 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243408119 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122070141 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190384142 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206265836 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14856555 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173744142 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132656128 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668522429 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108954183 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194903526 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152535124 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248480008 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130183915 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152919974 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144575701 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156092182 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206008079 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139254774 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182621708 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195114246 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156193143 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083016046 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136057486 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1449862 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120637858 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140096485 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148815177 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149162971 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131520773 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155433185 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16503606 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111645878 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102061344 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226966409 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153757285 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181570945 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20408077 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089698956 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153813542 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206618771 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084492349 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184185226 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197927689 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14136066 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131697617 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110950502 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111982694 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240470659 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102453366 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203212111 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185705838 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116465532 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146503014 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.181881613 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170875708 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139806277 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159989004 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12742858 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146939981 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149593559 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115911974 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082636643 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139294286 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145489968 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130768216 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135156439 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.12532152 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218350611 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076208063 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126758287 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133622396 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182767226 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249199633 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120308177 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088412957 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151352252 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147320486 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149752636 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159362024 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111544678 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112737958 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087196049 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.139533967 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11807818 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148782221 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134419111 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144796417 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237475249 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087523804 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257468124 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127229608 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142283246 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073533242 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.11066617 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101876621 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128548005 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136507304 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128497014 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212468056 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128979619 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121549767 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123645941 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077508875 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086287926 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192096707 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145068603 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156896713 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128958754 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066737801 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141599152 seconds)
  done (took 74.136473705 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137570531 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107566243 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122397935 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177598503 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150866483 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24338169 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.187162089 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228107673 seconds)
  done (took 2.404397596 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073089072 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121616277 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106288295 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.120215269 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093913429 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071906859 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.307409861 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113697706 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069244331 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119344832 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122947688 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095604324 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.486573969 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068777355 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09642613 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090070529 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070270925 seconds)
  done (took 3.264717613 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.448851371 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.647761198 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.453030818 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100504541 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.94787407 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112051257 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.461605635 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.166286454 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094677948 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.43180541 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.738909047 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152213086 seconds)
  done (took 17.803122022 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079355672 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072395134 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113610607 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087526301 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101852889 seconds)
  done (took 1.501150558 seconds)
done (took 117.642309892 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083713245 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381873873 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056469848 seconds)
  done (took 1.52032277 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088511469 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088538078 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115658732 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086655861 seconds)
  done (took 1.437180041 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078823247 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079961381 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11548037 seconds)
  done (took 1.32965114 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.298284463 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171260561 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092839007 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08699789 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081361325 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107945635 seconds)
  done (took 1.332435993 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076711678 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078192634 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103704413 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079789509 seconds)
  done (took 1.385455458 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080543857 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055813277 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057526232 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085000518 seconds)
  done (took 1.334103136 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094993088 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109133412 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084954783 seconds)
  done (took 1.339248883 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113715263 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117595725 seconds)
  done (took 1.286443255 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085759278 seconds)
  done (took 1.133296624 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097538254 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146869475 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.165263184 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142911646 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.174706472 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144012169 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118084866 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092091587 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107929909 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.121112133 seconds)
  done (took 2.365025396 seconds)
done (took 16.151599525 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082677022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392136457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364189856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12176268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674533965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385859723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981570448 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122754375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112012911 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098065166 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088279108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687813435 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972706642 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321058597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98592441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320092751 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678973342 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071649079 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096641209 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07136054 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965900807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097746953 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070963205 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097980599 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651008766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375070021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099117923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320522117 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097681229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073531886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358005834 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097946873 seconds)
  done (took 15.977927028 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074760374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148871728 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077957509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087181984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101604582 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072334384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102453763 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073306644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153374201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071569238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115821386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071260143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102047369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072174604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090571582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098654054 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072139448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09814362 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072309529 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072958434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116874606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071575801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098489406 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072197609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071454659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110662705 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072013894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097868443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072518175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072441496 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10109271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073026689 seconds)
  done (took 3.913874472 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120044968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15860184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077737662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133089918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144464573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07411129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1756005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097837839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155926145 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070690656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115324046 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071297502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131722691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071661459 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118674224 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071812449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098384397 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072692582 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070838659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09896676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090634709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097848713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071894613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071894037 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098331906 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084706889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098310518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075427668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07157273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100674002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074153358 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098596541 seconds)
  done (took 4.227581746 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076985024 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078416011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113541618 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087229557 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09959217 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075513308 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075587759 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099510089 seconds)
  done (took 1.764160541 seconds)
done (took 26.93253344 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082315506 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073170266 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10297956 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083876959 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102500027 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082314506 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069846887 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104625511 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078110864 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103224885 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079066192 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069231721 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100754382 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071267529 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077083564 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098006427 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083291392 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101505921 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082831931 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109554447 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073239191 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077930467 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104329863 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082686196 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109677594 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083136309 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109636216 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077651101 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071658764 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100512672 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079591712 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116089322 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072365088 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081943398 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098406096 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07176306 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097788708 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071340585 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082848749 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105281214 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073658722 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104646614 seconds)
  done (took 4.753605603 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093139871 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095912094 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117229986 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064980797 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099019623 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.0650024 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120450301 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064260413 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065275618 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121721195 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05872374 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060409144 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089775658 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057912604 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060986034 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059771067 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090819252 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059511793 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060030217 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088421276 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063569997 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056541458 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090155026 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062853781 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058948357 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064871421 seconds)
  done (took 3.05418409 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079229887 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085386403 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119028788 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13307947 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137522255 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07842019 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109038981 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089655845 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114767483 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070214148 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101512246 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100424851 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089283273 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105593553 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070071023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112942813 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085035396 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072393315 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105160915 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091949404 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115437596 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081127542 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119372592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082741728 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069088109 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100909605 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074794993 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11180378 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076335936 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079575404 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.102797016 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075279793 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.10011849 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083026654 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102339977 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073560002 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090478566 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108678804 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.0795036 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099199083 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074955565 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071599101 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119812127 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115873516 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.097967002 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077694247 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105806281 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081120499 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070306183 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116457544 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080795502 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09717599 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073884266 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069531177 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.098348169 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084981598 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099934663 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073872571 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080245683 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10155428 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08331192 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07352483 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114156939 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070774603 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106272804 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070124943 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098888204 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070256005 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092236573 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09958987 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11183986 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099572585 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071844229 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106858833 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07875519 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07697452 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099254793 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086947957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107496307 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074851017 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080182725 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102266809 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074092238 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.116351094 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074338349 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071801666 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099431429 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07784754 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073749463 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.099999704 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084733356 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099206739 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074041979 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115982292 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07142087 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07235108 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105014043 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076748885 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096957099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084639648 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077170863 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099608334 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08057768 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098901709 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075363204 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080640613 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.104518117 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070188166 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10251317 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077809529 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071167546 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100143746 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074004488 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099831073 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081054526 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076592367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103799765 seconds)
  done (took 11.663474479 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.20002272 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191676571 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073761373 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185177749 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079291707 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111899516 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.184915855 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100081779 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099632674 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071282057 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071935632 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.137653731 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131701116 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.155850027 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083251999 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070625864 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118516075 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13907577 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158046974 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180470781 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.12018349 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078076577 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.102310139 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072763919 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072673991 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109965904 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087076892 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107041672 seconds)
  done (took 4.371527249 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08628335 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128447549 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077045459 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089327777 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.123091544 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071260773 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104152588 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073140105 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.111793446 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083471191 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098413787 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077926401 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078022921 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.1078957 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071726457 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108447747 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080405184 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071846296 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102241254 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07533873 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105632558 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084797116 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103201444 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070337139 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07725139 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.098936828 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06880632 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118638897 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070913443 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118528049 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069674448 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104960595 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081981914 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071989151 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098973915 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072966788 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073250177 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101525476 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073411954 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097075282 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070279911 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060659305 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097642441 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083875229 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104861545 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063030716 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076659491 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.105157819 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07694841 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068610675 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101607908 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073212074 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102054812 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078686481 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075051442 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104847441 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074295614 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069145361 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105487779 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072697691 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067310511 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09825772 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07543092 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097788486 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079071356 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075097778 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097409204 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072406679 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103165259 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077131109 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072397219 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10243028 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069405898 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072840687 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.104445098 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07620316 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103015986 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070455711 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070667087 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100304576 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059667589 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071316297 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085467089 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074422893 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069525833 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09807539 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072741346 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107886766 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084654533 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.10045787 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077930398 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071258304 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.098368149 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073616927 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065638748 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102759946 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08493188 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116163866 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071182869 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097406335 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085554322 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103164806 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070930407 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058976615 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106168754 seconds)
  done (took 10.123200978 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096391299 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.123794328 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074129977 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084461191 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125943358 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095688507 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107274851 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077197746 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072346327 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116572921 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071618417 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107584511 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075720933 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078935715 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124653412 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078332207 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102167494 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080241257 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079228765 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136327289 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084081381 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113952324 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081663946 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100210411 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076429495 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082885921 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127688664 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080842211 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109913398 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085709682 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109570132 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098994558 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086762326 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103914301 seconds)
  done (took 4.33819307 seconds)
done (took 39.360140299 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.140732721 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.35767696 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.139992368 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.041076809 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.189580704 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.163523588 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.149637592 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.152365749 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.36599862 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.140337628 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.409717864 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.778628316 seconds)
done (took 59.113227677 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.228474903 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.278218493 seconds)
    (2/2) benchmarking "String"...
    done (took 1.417904145 seconds)
  done (took 3.777174179 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.487716537 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.160999037 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.42436345 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.138166146 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.137224225 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.599952563 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.717699128 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.993334151 seconds)
  done (took 27.25262811 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.144909884 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.500743208 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.518743342 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.519105464 seconds)
  done (took 17.765082233 seconds)
done (took 58.593959361 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.148064329 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.152774977 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.162748564 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.124344769 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.243345249 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.166077158 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.477435637 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.153177191 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.139221377 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.130406061 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.157997122 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.138070292 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.149980451 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.477374992 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.143520094 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.13991749 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.181167213 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.594886673 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.53254727 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.140361964 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.168084597 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.192959105 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.140163854 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.139489112 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.141888505 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.143166853 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.140075048 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.151382167 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.421099544 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.141095492 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.229828725 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.640668669 seconds)
  done (took 188.283655364 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.139850989 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.112642967 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.216696161 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.173220535 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.532135963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.339588592 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.278391022 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.613422753 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.153543104 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.158296961 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.368864268 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.140307021 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.430482743 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.122247498 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.147816377 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.240599632 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.453875177 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.431638459 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.200804112 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.410494627 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.153433581 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.379820164 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.275408669 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.328113032 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.158004051 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.177224266 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.160496934 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.162398505 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.332343972 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.394248654 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.166910956 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.176252926 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.712839967 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.998470278 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.15852559 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.145264992 seconds)
  done (took 147.628419731 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.415979711 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.140863904 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.140520897 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.141630619 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.171466561 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.143881837 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.677300313 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.678283883 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.644286411 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.533975715 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202114153 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.392551877 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.141091211 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.141379035 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233703356 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.153438518 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.143657154 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.156020374 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.170980094 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.144321061 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.142275741 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.678422011 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.157303427 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.361262343 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.147219025 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.14262324 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.173206864 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.536768403 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.141810995 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.173659918 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.459408357 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.186307774 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.142027939 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.453145862 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.494468044 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250062754 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.144117224 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.173303127 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.143555811 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.416272836 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.143570652 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.142373224 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.146737757 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.737977558 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.141873106 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.680694323 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.143882558 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.064926366 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.14288436 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.143031384 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.393951372 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.60960549 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.143294263 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.14298099 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.144886525 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.143832419 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.143130879 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.143180688 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.174532106 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.143681659 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.401685527 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.241203389 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.144876644 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.145834348 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.173850041 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.143738931 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.328283723 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.144666511 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.143937838 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.199711108 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.251114739 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.426901392 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.682966595 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.144575174 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239251899 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260383363 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.142544157 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.143453192 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.145326468 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.144011225 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.250559026 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.145063846 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.54052947 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.151019871 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.145330802 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203790773 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.239930084 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.143506508 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.428668849 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.145528584 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.144610684 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885319669 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237016252 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.142910789 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.144551377 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.143335547 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.540695573 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.682964224 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.339610877 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.144419142 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.56230539 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.145351108 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.55387821 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.660497041 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.739035365 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.144564564 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251781598 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.146933824 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.146551441 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.143888515 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.17294028 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.145904512 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.205116702 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.143424889 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.541529509 seconds)
  done (took 338.581478479 seconds)
done (took 676.990924863 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.756523278 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.748111033 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.855956754 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.740832651 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.711225411 seconds)
  done (took 9.898335473 seconds)
done (took 10.984981558 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.329677975 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.329993942 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.204862451 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.330348299 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.174493825 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.347395634 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.305505867 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.166271702 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.246830291 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.220267365 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.245616758 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.19427595 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.172145857 seconds)
  done (took 17.354990858 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.464181376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.459383227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.212680364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.472255687 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187838824 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467521583 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.355847061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.356366847 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348006207 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.163438134 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.161391673 seconds)
  done (took 15.738918131 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.475596068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.470598978 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.215561609 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.472877492 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.189438326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.470643595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.354026858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.365824461 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.345497178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.164093184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.161270837 seconds)
  done (took 15.774800215 seconds)
done (took 49.956708378 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.157566973 seconds)
  done (took 2.246416283 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.189370849 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.352331051 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.171121043 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.161521007 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.157361432 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.159674402 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.162627385 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.158551754 seconds)
  done (took 10.603871958 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.15612772 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.15699511 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.153833569 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.154463807 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.156450466 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.154646097 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.154311655 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.155617364 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.157088736 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.156443083 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.158339037 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.156215407 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.155489831 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.153835733 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.157219177 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.1568788 seconds)
  done (took 19.584796623 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.156269456 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.154304876 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.154909232 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.155941596 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.155923328 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.155857383 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.156333647 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.154218566 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.155290906 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.15481006 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.155695363 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.155250676 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.155173321 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.156026695 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.155912354 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.157536136 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.154861727 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.156263644 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.160146765 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.156011339 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.157248248 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.155581828 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.156402275 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.156327441 seconds)
  done (took 28.835806055 seconds)
done (took 62.360128954 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.155339792 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.759022543 seconds)
  done (took 9.005533079 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.157972795 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.159349509 seconds)
  done (took 3.410971738 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.157661995 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.158658519 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.158578224 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.159996479 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.158592129 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.160431225 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.159754318 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.159355731 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.159423225 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.158610315 seconds)
  done (took 12.683275962 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.158036389 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.160117568 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.157195255 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.159737286 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.158943733 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.15734836 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.159097879 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.158861374 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.159364121 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.156037878 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.158275859 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.157577448 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.160034515 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.15780301 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.161070927 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.156646949 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.157528438 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.157818248 seconds)
  done (took 21.945484843 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.160049111 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.160339388 seconds)
  done (took 3.414001557 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.15857984 seconds)
    (2/7) benchmarking "second"...
    done (took 1.158368405 seconds)
    (3/7) benchmarking "month"...
    done (took 1.158166076 seconds)
    (4/7) benchmarking "year"...
    done (took 1.157922639 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.158377142 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.157893552 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.157363346 seconds)
  done (took 9.200582935 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.160536241 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.345505439 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.423662719 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.720321718 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.161764006 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.16419966 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.021284547 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.164003315 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.167776434 seconds)
  done (took 13.423475645 seconds)
done (took 74.174815224 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.164765575 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.152520144 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.077439551 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.160841334 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.171552393 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.498164523 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.202380015 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.277768046 seconds)
done (took 36.799485131 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.154613967 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.875166821 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.880738037 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.155205422 seconds)
  done (took 11.004828713 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.143120364 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.070209441 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.147591625 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.162485609 seconds)
  done (took 17.619615938 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.766536177 seconds)
    (2/2) benchmarking "read"...
    done (took 1.485969747 seconds)
  done (took 4.346892744 seconds)
done (took 40.220796624 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161966697 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.161772666 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.159197403 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.161688109 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.160083496 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.158976828 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.158606711 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.161276227 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.162353996 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.162077257 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.162011006 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.162767015 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.161948687 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.16037301 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.159313205 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159622224 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162580651 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.159974539 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.159940734 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.162488429 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.159798095 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.16285084 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.158037797 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.160351243 seconds)
  done (took 28.955969496 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.162152443 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.160965655 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.164164909 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.162648346 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.161132906 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.162589204 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.162379816 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.159898623 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.162336251 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.162938267 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.160211117 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.160275509 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.163687057 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.161053287 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163854741 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.160956803 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.163812314 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161166389 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.164020149 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.161710201 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.164237753 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160825276 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.162416885 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.163710264 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.161605407 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.162228015 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.164154902 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.161481306 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.163782811 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.162330246 seconds)
  done (took 35.965839146 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.168754892 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.173542997 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.16503665 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.165557117 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.163585576 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.164782623 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.163880999 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.164804162 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.165369248 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.164781871 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.16412546 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.164801315 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.165642292 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.166761848 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.165059661 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.165246635 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.164651962 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.165780949 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.1653209 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.165015945 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.164251017 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.165443823 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.164259597 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.164416744 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.16570492 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.165869092 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.165353207 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.164080124 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.165729153 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.166092197 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.164613603 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.166451256 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.164938592 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.165643729 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.165370124 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.165747408 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.169156561 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.175167838 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.166540866 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.164862811 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.165577813 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.165487819 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.165363177 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.166847546 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.165969037 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.166161521 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.167205457 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.165257221 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.166411562 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.166349563 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.166022459 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.166469574 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.166674326 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.166705525 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.166217268 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.167301053 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.167146106 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.166693259 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.165715198 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.166155312 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.16691244 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.167494925 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.166430451 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.166728312 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.168075391 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.16770561 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.167414134 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.168575844 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.167383867 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.168144647 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.167641466 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.167836477 seconds)
  done (took 85.06788535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.168007729 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.165190257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.166131218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.164914706 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16681645 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.16819298 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.164711857 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168008982 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166393553 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.168521013 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168265826 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.16659274 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16615427 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.169092123 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168551335 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.166631093 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.167622518 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.166832507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.169036588 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.169027292 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.168390534 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.16587925 seconds)
  done (took 26.78073451 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.168000608 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.168969167 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.165878815 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.168360149 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.167264077 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.168959596 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.169528176 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.169644992 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168477583 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.166923437 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.16742913 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168852265 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167174385 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167362966 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166238581 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.166579574 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170000779 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.166730562 seconds)
  done (took 22.124775998 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.167488285 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.16792148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.16958883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.167047032 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.167268725 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170042951 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166940314 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.168990603 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.170221495 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.1678079 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.170544574 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.169798487 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.170308352 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166648371 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168979603 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.167328607 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.170570904 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167424452 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.169461686 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.167862355 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.168158778 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170266588 seconds)
  done (took 26.814490093 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170128023 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.170005608 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.168986257 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.168970502 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.167737101 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.170243642 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.170852312 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.168226786 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.171281016 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.170353295 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168943441 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.172256567 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.169244258 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.16984162 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.168943451 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168382644 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.17157765 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.169278938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172345117 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.169195987 seconds)
  done (took 24.500493701 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171437716 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172733105 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.172306165 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172230057 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.172929484 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.172538696 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173482604 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.172653224 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.17324751 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.173155875 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.173512414 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.172027388 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173580087 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.173149144 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.17267594 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.17338479 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.174506788 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.171721487 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.172336119 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.172111419 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.173254602 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.174184825 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173639415 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.172412701 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.172403385 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.173443167 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172418374 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.173133681 seconds)
  done (took 33.94688862 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.172957567 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.17251009 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.170517256 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.171278406 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.17024533 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.172281333 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.17100857 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.171846577 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.174312676 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.171389603 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.173842845 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.173896862 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.174970874 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.173986627 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.173868922 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.174441912 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173865402 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.171457456 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.171378734 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171452676 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.174503537 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.174387783 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.174679212 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.171317035 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171986513 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.173788434 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.172141763 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.172103133 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.175354227 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.17181705 seconds)
  done (took 36.290709448 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.193913525 seconds)
    (2/2) benchmarking "in"...
    done (took 1.193476588 seconds)
  done (took 3.493840147 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.171542598 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175516084 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.174370307 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.171965855 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.173546855 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.175611575 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.176618145 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.172289785 seconds)
  done (took 10.499007401 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.173067059 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.174850239 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.176061507 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.176325023 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.175716841 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.175791626 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.181014565 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.192856111 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.176159674 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.175964412 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.181489125 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.183552077 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.177810791 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.175789171 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.175005633 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.178017298 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.17617258 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.17702754 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.175732022 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.177015463 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.177462822 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.178047035 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.178668232 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.173617387 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.177048756 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.187130972 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.18127516 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.177800671 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.175722447 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.18024905 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.176026691 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.173653981 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.176948298 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.17687793 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.177526139 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.176964519 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.184745898 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.192535842 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.183307571 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.177051436 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177646823 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.175267661 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.178077892 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.177819977 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.179541508 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.177424943 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.177818343 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.174989002 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.176545502 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.179134989 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.185555495 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.176865121 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.175555716 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.181133204 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.178541289 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.184980603 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.19524528 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.180737614 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.186469673 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.190098984 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.191748902 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.188552403 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179042047 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.177730897 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.188763354 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.20537828 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185167804 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.192842399 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.177389609 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.178634926 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.185412002 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.19142467 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.19032819 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.180644184 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178342877 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.179310598 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179243278 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179261699 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.18598096 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.199014667 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.180233198 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.179693319 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.188995226 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203583726 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.179744596 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.180162733 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.179328168 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.180153812 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.180924232 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.190770455 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.196308332 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.181154941 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.179458953 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.180162615 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.181907651 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.18090324 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.178637882 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.179458539 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.179621353 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.1803374 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181197359 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183395409 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.190829227 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181286916 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180653566 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.187007637 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.183157464 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180280711 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.188392648 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.181053322 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.181405696 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.181091857 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.186288516 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.178853968 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18310267 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.19100687 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.182031269 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.180949032 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.180988214 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.182455043 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191109126 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.209834498 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.182724847 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.182848633 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.18658061 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.194739506 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181417578 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.18311065 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.182239682 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.181435635 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.179357973 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.183158716 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.184406414 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.18282213 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183358172 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.182224632 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.180321121 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.184202868 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.182123393 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.183167767 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.182739683 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.183059539 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.182815003 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.184782984 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.183338295 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.184905039 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.188710594 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.182845966 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.183854172 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.181807093 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.181486198 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.183839884 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.18507374 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.183926138 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.18330574 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.183293735 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.182911781 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.184232499 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.182874379 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.185185497 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184351354 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.185201282 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18741537 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.185756461 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.188651666 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.18256618 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.182519531 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.184094671 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.186595145 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.184534917 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.184951196 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.182547237 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.187116107 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.194970249 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.18538142 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.185263907 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.187220949 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.183745482 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184479376 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185038779 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.187264281 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.193148137 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.185125768 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.191980902 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.185352453 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.185182554 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.185823206 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.186701203 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.184869823 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185754469 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.187975556 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.195633646 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198749466 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.196408669 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.187166702 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.190735538 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.187617929 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.190546256 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.18972225 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.188025612 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.185912531 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.185101202 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.185847165 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.185881883 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.186769209 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.188181481 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.185330203 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.187106098 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.187865492 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.186781933 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.186675941 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.186606191 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.188547068 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.18484176 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187436819 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187848525 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.186404931 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.18435366 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.186008168 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.186594277 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.188363318 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.187964518 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.193323582 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.185349204 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189010688 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.189336808 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.187569121 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.18622267 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.188573154 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.190467603 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.188360175 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.194860915 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.204347589 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.187704576 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195266841 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.202874825 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.186270129 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.190713669 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.188626679 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.186127286 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.191503021 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.197558608 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.189506244 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.188464824 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.189505722 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.188249325 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.189346352 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.194679866 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.187146449 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.187932867 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.189713328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.188144416 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.186795937 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.1894471 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.190356807 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.188470443 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.190109442 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.189912114 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.190008141 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.19060771 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.190051375 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.189481261 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.190442945 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190125259 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.197115753 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.194419786 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.188886262 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.190709616 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.190425802 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.193937009 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.190731157 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.190922327 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.189619562 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.202660359 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.200621521 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.195464774 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.19101751 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.192048 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.195850754 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.19078924 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.19408143 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190121514 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.19115247 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.189694884 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.189800594 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.189048918 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.19030332 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.192101547 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191312676 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.191480506 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.194943077 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.192339879 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.190532558 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.191306755 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.190921035 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.191160286 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.190417737 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.190855404 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.193403817 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19367118 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.190770757 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.190461905 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.197831954 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.207493328 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.192767074 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.190572963 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.191687409 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.191567185 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.192729365 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.191571628 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.193281136 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.200583577 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.194129197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.201375552 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.191990954 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.200854966 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.192882402 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.195219442 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.200265279 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.19040016 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.190380354 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.191998326 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.192056644 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.198126766 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.208071562 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.192413297 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.19701982 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.192871608 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.193833635 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.192257037 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.192327708 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194158781 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.193669837 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.201048382 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.209278244 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.197853634 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.1951317 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.190997225 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.193573152 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.193573253 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.192001581 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.196615005 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.192797654 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.194808304 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.19288469 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.19293646 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.193221173 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.193941307 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.194625898 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.192326166 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.194036655 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20034946 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.210709773 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199770802 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.194278355 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.201976418 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.19602593 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200078312 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.2118138 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.195076959 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.193278402 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.195089483 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.195586701 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.193155002 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.196553421 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.193929196 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.194510193 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.199137128 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.195399602 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.196885273 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.195700484 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.195736709 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.193603647 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.204277139 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.222653491 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.197229013 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.199587043 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.193726384 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.196894201 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.199704391 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.194570315 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.193811907 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.19669371 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.208361548 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.206678756 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.195264064 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.195891351 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.196567857 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.196003353 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.19587944 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.197251772 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.197067509 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.197920087 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.197106296 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.196502304 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.199055396 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.197536294 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.197856047 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198021844 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.198174042 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.206519267 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.197506839 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.197424459 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.197427429 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.196476669 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.19700263 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.196630691 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.198531366 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.196409814 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197997336 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.197612444 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204682917 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.204574667 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.200324714 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.196116658 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.197296124 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.196865792 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.198616927 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.196960716 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.198027631 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197694349 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.199258584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.198578319 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.197778456 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.197587897 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.197484248 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.197674398 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198241322 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.200608089 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.205978338 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.197885577 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.196091636 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.198993789 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.197232793 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.196189929 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.19865103 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.206022728 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200893895 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.209822281 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.207763338 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.203327996 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.198141789 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2003372 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.208342538 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.197676683 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.200337202 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.200578931 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.200480695 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.200850605 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.203443755 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200800025 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.207473713 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.200385126 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.199663318 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.207446956 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.215665757 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.199467487 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.200575892 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.203244646 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.198702118 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.19780916 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.200467446 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.19927612 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.20655679 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.217215007 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.200521556 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.200496015 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.197776716 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.201100664 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.204982605 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200052799 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.201737325 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.19843411 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.201625442 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200834808 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.200691691 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.199623475 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.199483619 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.19931253 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.204312985 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.207798838 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.198495641 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.202911743 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.201039771 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.200791441 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201434823 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201052126 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.198153608 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.197503049 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.200237024 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.201414577 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.200577073 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.203664042 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.199473447 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.20105617 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.202732886 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.201456904 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204341396 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.212541635 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.211337735 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.199594321 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.201297128 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.200454555 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.202700008 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.202570844 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.20262347 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.20081709 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.203672931 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.202363639 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.201959718 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.202604605 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.204779945 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.219801673 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.219065341 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.20180207 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.203544243 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205460046 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.203833255 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.20005301 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.203377811 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.20564414 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.206389461 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.21305575 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.204354119 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209434502 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220007271 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.205468969 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.207453779 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.207598684 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.213601168 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.206289944 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.203730159 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.20443751 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.206870043 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.221323062 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.204758747 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212809746 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235125116 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.220131491 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.204600561 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.20498259 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.202469124 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.204862344 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.204464937 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.204528546 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.204188403 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.205748155 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.205522137 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.203065081 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.209851714 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.206021831 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.204240579 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.204693679 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.205260975 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.205206566 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.201709159 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.20530928 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.205681831 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.204912763 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.206148691 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.205167373 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.204985091 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.216669204 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.216647774 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.205883787 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.206119716 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.202382109 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.208928001 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.207080486 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.217585297 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.213653706 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.206457496 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.206465466 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.205628216 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204810163 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.204851979 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.205936016 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.205075132 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.20573353 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.203363896 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.219012174 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.216914838 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.211255773 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.205401215 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207486031 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.206445503 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.207387835 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205522588 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206828138 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.207128177 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.20662265 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2122002 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.207812129 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.20689312 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.20880942 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.215442406 seconds)
  done (took 712.471774206 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204835199 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205438798 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204379345 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204004747 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204620218 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205120081 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206261514 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204626116 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.204699301 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205676518 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.20491047 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204575338 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206606883 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205446462 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205413686 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.205444723 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205343944 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204675359 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205392231 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205365964 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.206391499 seconds)
  done (took 26.44790658 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.208970176 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.205467973 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205830745 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.208491477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20523423 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.208251229 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.206254407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209224912 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.207937907 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206512794 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.208966927 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207236703 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.206854048 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.205643482 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207013183 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20821391 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.20934363 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205915892 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.209404877 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207316177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208212166 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207021809 seconds)
  done (took 27.704855275 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.208861999 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.208196854 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.207405483 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.206064553 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.209879162 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.205664027 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.210531721 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.208693596 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.210795771 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.209573807 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.207765951 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.210240011 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.216862271 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.21585944 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.210740665 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.208887231 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.354165878 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.21077432 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.208572938 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.210179739 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.207885643 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.214044367 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.207143624 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.207892359 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.208652814 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.209438133 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.210603319 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.210068155 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.209486087 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.211952408 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.215776709 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.211357067 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.209065644 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.21248322 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.209389037 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.21045623 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.215257691 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.213348682 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.2091235 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.211242006 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.22106075 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.235244068 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.212315885 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.216479339 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.213404379 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.212685338 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.214990476 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.221406593 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.209044352 seconds)
  done (took 60.652768815 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.210936407 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.213074776 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.209464489 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.212072197 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.213006191 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.212694729 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.213589507 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.212093571 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.209507049 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.208552502 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.211657205 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.209816166 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.209912436 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.210879537 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.211516155 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.209026696 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207952006 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.208863294 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.208859913 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.209486611 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.209277642 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.212140759 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.212255145 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.209792189 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.212283351 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.210055707 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2086969 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.211845738 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.210722542 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.210225577 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.212538623 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.212735297 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.21391355 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.210513707 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.20856804 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.212451961 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.214148353 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.209984833 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.213027642 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.212624143 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.212972509 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.21320074 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.213821528 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.212536915 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.209469326 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.21060864 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.209927918 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.210352529 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.211012324 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.213064511 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.213931095 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.211263313 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.213291931 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.210447171 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.213557048 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.214789567 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.210482925 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.211070544 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.212208451 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.210182415 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.211334863 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.212066525 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.210668937 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.213183838 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.212342437 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.211211109 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.210341741 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.213221614 seconds)
  done (took 83.519188898 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213402259 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.213326021 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214122947 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213865288 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214475783 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.212768201 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.211950963 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.21360305 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.214464751 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213294344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.213535614 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.21642338 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.216887543 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.214731349 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.215698654 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.215910541 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.216940405 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216046756 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21446186 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215586584 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.214833016 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.215676409 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216213986 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215271626 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217183552 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.216018214 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.215322081 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.214749792 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216052299 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.215278408 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.215550702 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.216624426 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.216714615 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216536422 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.217138493 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.216857652 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215572903 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216574962 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.216326064 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.218780527 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.215360732 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216485558 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.21716781 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.217443035 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216127313 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.215551368 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.217341367 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.216674543 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.216860704 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217539846 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.216352568 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.216400931 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217180887 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.217533572 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.217905987 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.219260019 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.218826136 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217593529 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.216045303 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.217153605 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.217920139 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.218083111 seconds)
  done (took 76.537703044 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21866003 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21857603 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.216039325 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.215279916 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21851899 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.215567564 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218262922 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.217301842 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.218284853 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.21849792 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218380916 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215640676 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216013441 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218478147 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.217217771 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217066658 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21576722 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215803407 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218926533 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216503805 seconds)
  done (took 25.49435085 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.216914026 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.220836626 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.217685105 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216288301 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.220862356 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.217398239 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.219215512 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219681427 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217109487 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219131554 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219685903 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220716649 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217861805 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217545528 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219971734 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.217846777 seconds)
  done (took 20.648150374 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.217278017 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.220615032 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.219494282 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.219442577 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.217719521 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.21700259 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.220662893 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.216245913 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.217505609 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.222081831 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.219464762 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.220245479 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.220602824 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.220705023 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.218185469 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.221086454 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.218214188 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.219083761 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.220287494 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.220767165 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.218645075 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.216129024 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.220426039 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.221404957 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.218520384 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.219504383 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.219892988 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.216902701 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.219343203 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.219966489 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.218204561 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.218705299 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.218927686 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.21924997 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.222212465 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.218174575 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.221551139 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.220746266 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.22170592 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.220588859 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.222141573 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.219362299 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.221819036 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.223195218 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.219589582 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.221604389 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.219423257 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.220392649 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.219389012 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.219246161 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.221696232 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.222602248 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.221515148 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.221816016 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.222857453 seconds)
  done (took 68.245934953 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222598734 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222100501 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219924916 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223329407 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.222738713 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.220131611 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.222723067 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.220845801 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221112824 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223167917 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22181217 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.223458121 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220222857 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223789905 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222110249 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22387081 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220807531 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.220579983 seconds)
  done (took 23.147613724 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220010011 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222092323 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.22389959 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221021167 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.220624507 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223907187 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221906492 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.224246006 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224169176 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.223135015 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221698464 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.225154653 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225023872 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.225282521 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222684955 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221785535 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.224919599 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222887644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.220825807 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220479414 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.225634839 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224463768 seconds)
  done (took 28.05984152 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.222186433 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.222102352 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.23862502 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.2646845 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.255291643 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.220874635 seconds)
  done (took 8.576461119 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221571044 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223463213 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222341205 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22581029 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224144128 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221522153 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222442959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223310875 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224140601 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22408778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221737883 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224452364 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22455916 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222459537 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225075307 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225674431 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222927376 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223347212 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223260532 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224541729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223365474 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225322127 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220974615 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222590866 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22279622 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224517834 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22596356 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22348163 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222299004 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225640378 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224905442 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223940336 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224821396 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223552766 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226134761 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226612285 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222876158 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226253305 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226344564 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223418823 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.226637314 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227369498 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225771376 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225200339 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226832772 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224526425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223270649 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223236517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224029516 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226556551 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226213827 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223442264 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227435572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226921437 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226646892 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227164782 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224621386 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225195652 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226505393 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225110931 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224765006 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227067192 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22550986 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225840246 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227353952 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225617742 seconds)
  done (took 81.982536755 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224906644 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.224004845 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224511403 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226189646 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2250696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224596022 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225232427 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225123977 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224913003 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226342325 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2278145 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225274857 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226206933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226798312 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224750812 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225053991 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224824689 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22559171 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225211851 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227169462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226084097 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225471929 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225426674 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225452253 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225800193 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228298278 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225508686 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225616641 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226284697 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227183671 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225717623 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227228094 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226592846 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.225812451 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228383147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228106026 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227956707 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225679902 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227403011 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229175294 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225745284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229967885 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227218408 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22721803 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227416332 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228206875 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227869777 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228083387 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228889535 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228002462 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22831208 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227084801 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227748923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227773059 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227690743 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229294851 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227311141 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228464104 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228571222 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231444215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229086536 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229990414 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2296758 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228390259 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227624033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229585054 seconds)
  done (took 82.139230037 seconds)
done (took 1661.164437911 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.322605742 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.328329491 seconds)
  done (took 13.809940425 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.392232954 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.346244973 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.228862403 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.262295934 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.228886098 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.228119622 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.252208061 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.227850153 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.229343607 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.227487722 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.228198885 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.418405431 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.223519972 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.228258224 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.22921532 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.320805832 seconds)
  done (took 41.445765293 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.258493635 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.236870175 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.348518636 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.249771758 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.258001469 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.416660554 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.287246043 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.233643705 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.408798561 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.275164672 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.881497275 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.259803617 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.23444741 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.407438477 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.251137046 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.415920448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.484335759 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.886689832 seconds)
  done (took 28.956238421 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.689054721 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.250619902 seconds)
  done (took 9.103248924 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.260840704 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.239233298 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.243199342 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.246281393 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.261637462 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.263899783 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.27645407 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.279821105 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.26556761 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.298070562 seconds)
  done (took 63.810140593 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.253958287 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.236745589 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.236594191 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.233690937 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.226063947 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.22554887 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.232619858 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.226285506 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.894484973 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.362431174 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.246931942 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.242681523 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.235407955 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.235875527 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.232942451 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.272063357 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.378162871 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.233804375 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.232932727 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.241586277 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.237111054 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.326139282 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.276852108 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.234008586 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.362698488 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.918176888 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.237423902 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.242835754 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.359651047 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.234276747 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.23438287 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.235884175 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.237919052 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.811013877 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.781325785 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.246341368 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.260086119 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.244206042 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.23444384 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.363814477 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.236157325 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.243244875 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.238638716 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.75216776 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.398435322 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.351919998 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.50605704 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.235709001 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.237564457 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.301235111 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.2374438 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.238913813 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.267377268 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.98790934 seconds)
  done (took 106.1581676 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.279052784 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.718451972 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.400079319 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.247490608 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.100295846 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.872085879 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.228523286 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.517357809 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.243583101 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.228094585 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.509408631 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.737490029 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.233949543 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.242899845 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.728794371 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.248572378 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.228289655 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.153785257 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.228468527 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.230842716 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.656074443 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245825869 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.23020261 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.330352005 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.267654009 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.700830525 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.716738613 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.633640653 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.230566817 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.22878538 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.710275811 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.236763855 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.274100141 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.230674807 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.512338364 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606819783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.583264448 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.23222546 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.248485679 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.234932092 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.249015627 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.70982831 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.595555185 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.230909559 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.228849091 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.715783141 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.231572062 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.23307638 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.232655828 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44156124 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.148142159 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.231310097 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.724073387 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.232501976 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.490230296 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.325729811 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.280718247 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744236375 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.231384867 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.328411671 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.234114951 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.231062426 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.2382952 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.234474468 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.233595596 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.598512015 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.622597829 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.231629077 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.600387343 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.705706859 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.233526365 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.763905904 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.160126301 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.2323473 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.271002283 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.241969699 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.965465534 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.743068483 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.246125959 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.230953524 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.58759846 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.236178392 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.521937584 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.252081467 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.230203037 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.666113036 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.248201419 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.269123552 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.232505403 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.233316761 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.027686719 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23817983 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.510061862 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.299768979 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.233872822 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.233273087 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.248852265 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233543928 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.23334022 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.23848915 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.766429064 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.23426948 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.373462904 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.253826101 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.247494408 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.234258198 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.236196904 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.233698124 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.460282445 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.845363123 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.234827815 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.235847176 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.233234821 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.253911742 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.331681417 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.24101836 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.559976492 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.235122795 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.234088659 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.241744855 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.919647696 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.265988801 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233845333 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.253445358 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.075689651 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.442486444 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.254726583 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.248721604 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.234491152 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.249478215 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.683912939 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.235067083 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.256043696 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.238829092 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946475841 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.249081783 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.257590534 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.815535618 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.239377318 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.235516613 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.237786852 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.236418962 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.547163453 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.520119401 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.536419123 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.235988532 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.23602392 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932470213 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.255282083 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.376974942 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.255719668 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.268405271 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.436526388 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.383320145 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.23630689 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.811968242 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.236222596 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45887896 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.236431412 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56155322 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741497586 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.238402511 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.240958059 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957879899 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.894042695 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.899064354 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.238493587 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.525501849 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.250759734 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.681545164 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.237688164 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.236709365 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.810649565 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.238961991 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.240171302 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.237862138 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.237806689 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.305722603 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.413946592 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.176845576 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.241773024 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721432409 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288676631 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.237053711 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.239515843 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.236715111 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.591030804 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.241092792 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.240404535 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.281339033 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.238667684 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.245653441 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.729775583 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.126377856 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.238213938 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.39402832 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878998892 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.239941845 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.239446046 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.023903121 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.535973158 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809802864 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.280942194 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.568362808 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.244742093 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.278378254 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.046539442 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308569967 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.757987868 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.238893827 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.238020023 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855877134 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.24011059 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.281056788 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.239374042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.238896747 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790100759 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.240714846 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.240715504 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.701580386 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.238971555 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492852993 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.239359355 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.246713507 seconds)
  done (took 1091.118584639 seconds)
done (took 1355.562334463 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.240902164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.240616792 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.226696763 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.240119844 seconds)
  done (took 26.125333705 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.253194467 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.247262482 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.24889896 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.246056887 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.251034498 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.246309451 seconds)
  done (took 8.672816305 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.37388658 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.240062448 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.241342504 seconds)
  done (took 19.033330578 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.469951476 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.512772287 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.617030465 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.438011352 seconds)
  done (took 10.218207251 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.248643042 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.248910469 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.2491574 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.251309672 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.25306154 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.256771081 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.251958126 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.253009742 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.255680186 seconds)
  done (took 12.446160592 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.261251114 seconds)
done (took 82.932093981 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.327704227 seconds)
    (2/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.631561341 seconds)
    (3/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.243219677 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.365505748 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.126538114 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.133590334 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.698775303 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.242841019 seconds)
    (9/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.34402648 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.356177822 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.553323261 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.664119086 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.363081336 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.17315666 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.276419777 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.514998611 seconds)
    (17/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.244084587 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.285846267 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.149509263 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.269348941 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.497597827 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.361569711 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.250225123 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.550984073 seconds)
    (25/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.597307498 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.360317769 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.34843303 seconds)
    (28/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.16093034 seconds)
    (29/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.261126741 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.269268732 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.263864256 seconds)
    (32/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.440292745 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.275302879 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.866662712 seconds)
    (35/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.234289335 seconds)
    (36/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.619910673 seconds)
    (37/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.802055566 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.374105668 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.319700748 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.290743153 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.330995818 seconds)
    (42/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.604272207 seconds)
    (43/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.23140828 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.213620233 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.291723626 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.699324795 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.715014312 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.152124879 seconds)
    (49/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.269596542 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.58920712 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.266753467 seconds)
    (52/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.758947726 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.374346297 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.506708846 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.269548444 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.666370585 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.282788037 seconds)
    (58/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.928648413 seconds)
    (59/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.049527559 seconds)
    (60/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.368513626 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.975953718 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.624182575 seconds)
    (63/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.331110977 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.344419966 seconds)
    (65/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.294240575 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.302524061 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.317097174 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.807280011 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.774218834 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.220246646 seconds)
    (71/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.038662323 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.462596479 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.71988825 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.616832704 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.658130415 seconds)
    (76/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.545728049 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.324526471 seconds)
    (78/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.253016481 seconds)
    (79/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.442716785 seconds)
    (80/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.343542417 seconds)
    (81/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.435482606 seconds)
    (82/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.398986464 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.272082365 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.715158523 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.942120494 seconds)
    (86/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.664541167 seconds)
    (87/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.244264192 seconds)
    (88/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.438303574 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.372861991 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.497699418 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.119439809 seconds)
    (92/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.844588305 seconds)
    (93/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.61711872 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.479489499 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.740287767 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.859535075 seconds)
    (97/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.582328857 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.309781646 seconds)
    (99/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.375829328 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.915443519 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.314705565 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.26535422 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.923448511 seconds)
    (104/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.439366816 seconds)
    (105/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.505613437 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.746350364 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.186887995 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.347382865 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.593284996 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.041638849 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.27105621 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.136856856 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.243664859 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.254690091 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.231678435 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.134141116 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.290782389 seconds)
    (118/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.273699952 seconds)
    (119/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.544836058 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.251678299 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.610064038 seconds)
    (122/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.276718883 seconds)
    (123/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.567651965 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.749413083 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.752804872 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.473702194 seconds)
    (127/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.9161429 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.320208706 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.743984028 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.247330147 seconds)
    (131/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.636927777 seconds)
    (132/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.444569351 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.596804672 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.6713034 seconds)
    (135/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.988023876 seconds)
    (136/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.064315109 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.271866514 seconds)
    (138/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.430966942 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.593401673 seconds)
    (140/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.234539043 seconds)
    (141/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.778790739 seconds)
    (142/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.669254418 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.248945137 seconds)
    (144/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.258548971 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.848069503 seconds)
    (146/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.256881211 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 1.770426066 seconds)
    (148/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.271587957 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.273491755 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.922193739 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.274238422 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.54044044 seconds)
    (153/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.43810036 seconds)
    (154/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.617934653 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.278085273 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.046124055 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.516480412 seconds)
    (158/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.11595041 seconds)
    (159/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.252996136 seconds)
    (160/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.064309405 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.164641852 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.27462764 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.23317314 seconds)
    (164/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.892414337 seconds)
    (165/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.35234734 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.353491774 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.259105462 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.391352783 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.265283744 seconds)
    (170/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.900088133 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.063496434 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.275926451 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.261110018 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.565488067 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.133226538 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.469815544 seconds)
    (177/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.272490789 seconds)
    (178/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.332836031 seconds)
    (179/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.63776117 seconds)
    (180/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.628159779 seconds)
    (181/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.273146001 seconds)
    (182/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.331524443 seconds)
    (183/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.348060561 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.329059753 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.36452584 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.309407009 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.356228996 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.848184428 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.335431438 seconds)
    (190/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.332644487 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.255522921 seconds)
    (192/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.283197608 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.731211149 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.252175011 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.865467259 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.26006401 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.354973008 seconds)
    (198/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.284330878 seconds)
    (199/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.289018268 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.235142413 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.367142863 seconds)
    (202/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.850658653 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.689432265 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.297611619 seconds)
    (205/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.65164253 seconds)
    (206/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.314723925 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.845893806 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.250054443 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.249952268 seconds)
    (210/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.314772683 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.376705909 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.688049278 seconds)
    (213/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.276530575 seconds)
    (214/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.086928322 seconds)
    (215/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.292333449 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.853121979 seconds)
    (217/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.25401629 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.952414806 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.795820572 seconds)
    (220/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.36029099 seconds)
    (221/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.309629676 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.266458968 seconds)
    (223/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.240350819 seconds)
    (224/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.269401261 seconds)
    (225/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.570909999 seconds)
    (226/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.91847446 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.268543012 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 6.252446246 seconds)
    (229/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.35883913 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.279757619 seconds)
    (231/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.283026117 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.883090893 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.932337851 seconds)
    (234/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.863012968 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.485644769 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.291587594 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.288990113 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.255476462 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.292554418 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.235642521 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.296292248 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.247676706 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.252049552 seconds)
    (244/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.871026636 seconds)
    (245/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.276049446 seconds)
    (246/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.268835792 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.67904678 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.279860818 seconds)
    (249/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.625299183 seconds)
    (250/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.294276422 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.618469685 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.252157122 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.225569492 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.253179379 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.352788528 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.266940533 seconds)
    (257/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.241323658 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.405551256 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.253644542 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.184441297 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.254183383 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.263651141 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.692964896 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.072619028 seconds)
    (265/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.263869237 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.15119438 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.141549417 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.423686387 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.254604435 seconds)
    (270/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.476998413 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.973850242 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.280125468 seconds)
    (273/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.885978366 seconds)
    (274/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.886301235 seconds)
    (275/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.901686246 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.692246245 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.634160408 seconds)
    (278/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.017080256 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.452540865 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.135318494 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.283872776 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 4.294651011 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 5.289716351 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.058935793 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.674824723 seconds)
    (286/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.274714396 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.348198175 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.676066983 seconds)
    (289/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.898432049 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.338405828 seconds)
    (291/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.620815254 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.371660606 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.938508672 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.022525569 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.318698941 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.296876464 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.27067439 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.248656814 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.24011266 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.949924045 seconds)
    (301/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.261439322 seconds)
    (302/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.857997821 seconds)
    (303/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.731359221 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.277990615 seconds)
    (305/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.264015891 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 5.61716331 seconds)
    (307/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.293422376 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.269067196 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.51318093 seconds)
  done (took 905.316394845 seconds)
done (took 906.495725855 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.288658667 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285721003 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.268963766 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.288340312 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.379910035 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.29912753 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.277014928 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.269932107 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.31586848 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.316550185 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.267622046 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.297772003 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.269938216 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.268820576 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.267620521 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281866722 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.383806783 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.269370695 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.285726275 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.27823174 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.28601544 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.266786695 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.317365436 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.299682807 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.271433432 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.271186343 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.27230922 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.289572068 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.380100759 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.272508776 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.270995108 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.280505304 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.382449568 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.267563219 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.262768556 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.288490873 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.282150511 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.278068252 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.273096102 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.302197148 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.804745848 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.270647613 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.272057622 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.269936524 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.269958375 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.275254346 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.273073692 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.276672644 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285113857 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285148409 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.820934879 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.286346706 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.273760762 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.270286766 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.279079796 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.271691619 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.273607292 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.287411004 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.290815745 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.285586868 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.384083951 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.275239288 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.272468902 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.28859545 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.278916283 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.869728283 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.266182003 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.273870997 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.809892532 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.27611396 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.874162505 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.280337845 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.272296396 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.286719687 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.303356012 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.389215436 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.266019814 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.270775877 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.279422542 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.270684781 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.279789936 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285234608 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.275956788 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.272002124 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.286099178 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.303530234 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.282968495 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.274710075 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.280913969 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.292501671 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.280299021 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.284577944 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.274290985 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.266122218 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.282131486 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.276370317 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.277123398 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.275612755 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.276404517 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.283994972 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.809654408 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290098644 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.267984975 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.269162906 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.271739664 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.287413023 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.81538713 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.275871693 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.293793957 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.319109854 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.274214247 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.389828334 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.27798114 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29017921 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.281674879 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.276311337 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.268059585 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.388395513 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.836189052 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.289814355 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.275435317 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.272670508 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290481167 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.275718027 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.269594152 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.397034266 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.275173137 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289374153 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.39564363 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.284371094 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.306441215 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.274189668 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.277295344 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.311020822 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290540782 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.306565389 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.277029791 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289471751 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.289642998 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.270453881 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.2845317 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.283181677 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.274345631 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.280137607 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.26905195 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.305172968 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287184044 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287542779 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.295444231 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.397036362 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.270558066 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.390506127 seconds)
done (took 217.61259077 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.330639139 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.266876424 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.356591183 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.26993419 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.371666549 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.367791553 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.268704038 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.267571901 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.267139244 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.648236047 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.267534009 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.267907401 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.267660095 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.268221594 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.351605558 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.270951448 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.268276719 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.611414193 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.271002629 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.344573379 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.268118159 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.268967311 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.270264854 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.722753408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.262968222 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.262706309 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.348387105 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.272223184 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.618426852 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.267203549 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.267793021 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.617717383 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.360496204 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.288730202 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.28230589 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.27877258 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.373141701 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.287857134 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.350733553 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.350130467 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.357345528 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.310536437 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.272502766 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.264560103 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.273066149 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.272642641 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.267727744 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.299243956 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.272695309 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.270064874 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.612155301 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.281272627 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.269965623 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.269959931 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.270215581 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.300866126 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.269941487 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.271889308 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.362127242 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.274038811 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.332662447 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.724677298 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.648646255 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.271363131 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.268493939 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.269989296 seconds)
  done (took 144.3830482 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.340407863 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.344904756 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.388354632 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.274808777 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.320687822 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.39142981 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.27494077 seconds)
  done (took 10.537478368 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.280141532 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.274600084 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.323065796 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322054838 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.273367141 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.419036317 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.272819991 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.284995531 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.270880753 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.326637198 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.275476142 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.274876056 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.28121871 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.267973494 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.321307935 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.286107339 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.389948289 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.275359153 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.274286488 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.431954099 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.27180674 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.281524772 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.326337271 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.28763775 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.276267228 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.279196884 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.842530275 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.272633432 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272653316 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.274229584 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27169495 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.311574705 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.274692942 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.27146074 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272065455 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.391282688 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.273565809 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272538066 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.276341995 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.268449776 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.275528038 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.275169121 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.276031629 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.273043786 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.276855119 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.299936337 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.275511167 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.276090598 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.274919341 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.277365143 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.326306544 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.277016116 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.274238752 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.274381964 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.330666455 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281783997 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.277568959 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.275177989 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.276674408 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275366882 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.436097794 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.323879034 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.277267104 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.325512315 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.277929233 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.277695777 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.27903433 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.278582395 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331821374 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.277475828 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325711014 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.275115894 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.432592097 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.302502313 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.279117184 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.281264721 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.281531911 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.277728981 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.270193093 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.281658392 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.274941882 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.280143313 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.285310369 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.274066202 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275876673 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381584994 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385062833 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.275358898 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.289161086 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.285386678 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.275756618 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.331501478 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.277183898 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.27526341 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331126482 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.395427583 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.330924915 seconds)
  done (took 147.56689993 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.281610438 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.285355291 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.28007015 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.293333017 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.277473761 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.277708084 seconds)
  done (took 8.900666787 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.281280419 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.27997285 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.28032436 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.2796752 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.278357795 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.280738368 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.279313765 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281242464 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.284189886 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.28017414 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.282299659 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.283313892 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.282367645 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.279521732 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.279843535 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.279888876 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.280641528 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.277784844 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.279931255 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.278796174 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.372804179 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.280733004 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279620852 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.280429338 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.28621106 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.280794581 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.286740093 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.281437781 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.283279624 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.288904364 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.282502391 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.283673179 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.283151246 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.289218929 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.286140082 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.282947097 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285464986 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.284973288 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.278990938 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.282837371 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.285198294 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.282310526 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.28153653 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.284741993 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.283265733 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.285322128 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.287704753 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.288698306 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.281645341 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.285545329 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.285041223 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.281276453 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.283873641 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.28480795 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.281682495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.287870471 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.289507845 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.284128993 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.280904897 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.284909329 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.284290488 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.283029927 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.283873239 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.28550525 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.290373971 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.284452875 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.283118512 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.287676754 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281559842 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.282680781 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.285477964 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.278948321 seconds)
  done (took 94.679483145 seconds)
done (took 407.265305311 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.303374219 seconds)
  done (took 7.512211926 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.42271572 seconds)
  done (took 7.635951566 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.270425506 seconds)
  done (took 23.491024988 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.373127363 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.325455147 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.293020593 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.284077969 seconds)
  done (took 26.489578687 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.297771624 seconds)
  done (took 7.510489263 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.284635804 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.276564328 seconds)
  done (took 13.777906924 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.852641275 seconds)
  done (took 8.067879989 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.977015716 seconds)
  done (took 8.196677886 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.304387287 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.306446911 seconds)
  done (took 14.074672594 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.263176498 seconds)
  done (took 7.477627441 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.793081397 seconds)
  done (took 9.006844983 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.287075422 seconds)
  done (took 7.501367814 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.340023196 seconds)
  done (took 7.554807206 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.738556538 seconds)
  done (took 9.953028434 seconds)
done (took 159.459545335 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.278369216 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.276130821 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.27861909 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.278553751 seconds)
  done (took 26.325114441 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.318363077 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.321006512 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.321208209 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.33041015 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.321989531 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.31964172 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.311468649 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.311913087 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.329548392 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.321675847 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.321891324 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.321420733 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.321596183 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.312784516 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.321501647 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.323102327 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.33076598 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.320496873 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.31292705 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.321357033 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.285501405 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.332191237 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.32328951 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.287360392 seconds)
  done (took 32.859587516 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.483931942 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.357064463 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.441183079 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.3388287 seconds)
  done (took 6.836947562 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.338905459 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.341239504 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.352981208 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.392486786 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.422160136 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.348884232 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.312372023 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.30954044 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.295710213 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.342207975 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.415057125 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.357602467 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.428934323 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.289386599 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.47894593 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.289335384 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.288991257 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.339679037 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.392729742 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.407411769 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.287815824 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.339553487 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.343358752 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.357441517 seconds)
  done (took 33.68777522 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.286435621 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.29634157 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.292586259 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.287967789 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.287976512 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.28858687 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.293999242 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.290533603 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.308555679 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.288846183 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.285459403 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.288704773 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.287058814 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.288689717 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.286698806 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.300936259 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.30164948 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.289356951 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.29140719 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.295514883 seconds)
  done (took 27.055017085 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.280623918 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.142093716 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.633326088 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.538911738 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.281620272 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.279796791 seconds)
  done (took 27.37375394 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.358570587 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.507771017 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.289640931 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.673906742 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.755988895 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.289244389 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.289983048 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.546349019 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.868480367 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.862788557 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.346302545 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.357361171 seconds)
  done (took 19.365769678 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.284009202 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.282272416 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.283287528 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.299785333 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.348604853 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.292743144 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.295427979 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.282449592 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.348870288 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.352608333 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.293369988 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.350353031 seconds)
  done (took 36.931960219 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371465995 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336268205 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.351909565 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.111206551 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011812689 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.4969029 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.173007694 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193074294 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.289821874 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559272029 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298403436 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373906984 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542326163 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295286874 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286204001 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.342207911 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513580189 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800768536 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285521212 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.420581154 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309848289 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297993391 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.541770234 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.313166564 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497211363 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.269081771 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.54466223 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.062769776 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585125755 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.298097418 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294624018 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.286740344 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558739029 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981068319 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380070258 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296468732 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.147864972 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.918726539 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.274699907 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.432761599 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287926845 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.289011293 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298351577 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288260243 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22179245 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29442725 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.732518484 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.295003148 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.99658292 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285509356 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298579855 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384337458 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.290954192 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.279336916 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433342973 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.292397326 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.283655771 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294543008 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860570487 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.991434801 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29534014 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.222514407 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.75196469 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.519259009 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944257757 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.391485424 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.29140938 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29169881 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221455727 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.498293007 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306010811 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426146719 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.311366877 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951726009 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062622401 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.290910156 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220335078 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874577736 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303233459 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.223400686 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517879523 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06339024 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230712544 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.242188635 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.223643807 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04676159 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298947278 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.727212937 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.29771068 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.726882627 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.30078509 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305088919 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312711274 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516329512 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.174173944 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289348364 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.294490557 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405925157 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310978174 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.729064118 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227565268 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.292531898 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548340297 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.500899562 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292605645 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.344560552 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500905495 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289453001 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.306296331 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.297154764 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.300592447 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.89285012 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.302223538 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.999932458 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30650098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.067441558 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089754772 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298334099 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.39150752 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290092904 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551900631 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.115250901 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.189842574 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357855945 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292444055 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291423671 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.541833401 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144054983 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.182606166 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.290981393 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292313642 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.301593585 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.289845927 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251468344 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.302710551 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308691381 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.069884511 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.517026105 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290625995 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580948275 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227240397 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428148519 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308438232 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.517757939 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.579135845 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.291177802 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554186781 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303598557 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.299965993 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304008585 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308607344 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387898768 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31437723 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.300452451 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.551620116 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.296375456 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.295923871 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.541805388 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.072884521 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297326565 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.296142074 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.168958958 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900078783 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265290015 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.300587122 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187459745 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.305656255 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359153742 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297468338 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.302499478 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.217702764 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27140465 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.297944228 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.298317184 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517520713 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.306117197 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.539327806 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374746563 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.498941433 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904681814 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308075537 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.228622041 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.004377333 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.985611906 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293286811 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.48508216 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293542501 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301733031 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304508126 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.934275524 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901703124 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295746197 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.444994486 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.299879612 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.304620108 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.299904095 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292984526 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.20877265 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020183432 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297810924 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.306574648 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43729306 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.308347063 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.228342644 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.811497908 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299619782 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.294252119 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.070300659 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329509146 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.455533956 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792252365 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556158472 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.112200847 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306994357 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.573532894 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.326202844 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.295789207 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306037972 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299834661 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.311540347 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303353 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.305648698 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.467314195 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.74874927 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872302851 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078661183 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847740499 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316562918 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.304120324 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.194918683 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.740315273 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233221834 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.957527796 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498177177 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.740701197 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254629722 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504014644 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.587862591 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110564802 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.307229939 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525489796 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318849953 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.300197363 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309035723 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.507745921 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329574397 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.298136408 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.224905294 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.597690921 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531840038 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296797835 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379199303 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742191896 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297788648 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074984593 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.294434157 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.718023675 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478094101 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.929128267 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.691804496 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30073837 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300747127 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793165106 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.305327083 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826978906 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959095595 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306768967 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.505162726 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239889025 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.309095985 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.31047477 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.298444588 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.73138809 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.306888584 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.554978775 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.307496276 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233142348 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.304456606 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852400363 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.153300687 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.302329947 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298096959 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097669581 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300764652 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608261989 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.305186001 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.204747946 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302977222 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231331635 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231890359 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.991076291 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302360589 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27022288 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817660379 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.711135274 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.391995836 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329979355 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149006359 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.55861935 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.313591038 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.908672097 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526625039 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.230864695 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323203173 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.39826927 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300245583 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.286402052 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.193052282 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53549677 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172124446 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524769196 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.394162305 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.205108334 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.298083796 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513312409 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.20557885 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313749974 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56605713 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.012228829 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.306002184 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095438275 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326860225 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298080062 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319343934 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.765532468 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306634542 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3715417 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311589332 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.311531318 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.312457496 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481121051 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307659202 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303271705 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.314366803 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398158501 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.062085454 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.21500371 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.074378346 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919361252 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105556299 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.919219884 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.315043835 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.301775005 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301381312 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236238892 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449131464 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830309249 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576434884 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42144548 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.849692257 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323025752 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307169972 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306544737 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513505683 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577463361 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.176187581 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30288386 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985469135 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.200979517 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.312492418 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.513436104 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827791514 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897404836 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425770105 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.316369191 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.748475606 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577820405 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.394321209 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302275861 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895430275 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.318004413 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.750317599 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.309437257 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309571298 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45106846 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.313960916 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004954585 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.314460017 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.462721904 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.075714287 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.575965417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.562115952 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.85540606 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.316947197 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923316822 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.046799668 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57164931 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373297466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316119974 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.411973319 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449496564 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.311119535 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.195764544 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306029763 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152730766 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.015514362 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.313896097 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927489706 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572430692 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.300919506 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.314793072 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327705744 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.314117992 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.529522819 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076546893 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530615322 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314957117 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.307784285 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.29540803 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923588906 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319098793 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238005215 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.308774351 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572129268 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.542949921 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329604061 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.75839206 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.017276008 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900750072 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.281819552 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327350493 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313214066 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05056207 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921517143 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.226824954 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830438577 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967705943 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318125919 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581265635 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.310947081 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.310622179 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582038724 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.310431325 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.309837264 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318909672 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.923102424 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129190902 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.321431242 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522505252 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.244363862 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.536838337 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992887321 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244535597 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305821959 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.498009531 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.30899956 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426229641 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317380324 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.306315577 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30679582 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.040275126 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600783184 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.312573629 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.301592763 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.301019013 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315568842 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314186566 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547495811 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313122406 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.983502425 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.659621445 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565968054 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.310320208 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.292181488 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.311604031 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307406567 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032603427 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285245657 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.962040983 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904594469 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.310938828 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.318543583 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311745226 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.525186855 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520574898 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.320179521 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320200027 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317438646 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322704642 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.212355 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.080753716 seconds)
  done (took 1576.875610395 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.329527448 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.350837497 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.345956428 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.3936104 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.359441441 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439458018 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.361064468 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.314239306 seconds)
  done (took 52.137044621 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.317852685 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.464486101 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.33976854 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.324177428 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.318071833 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.306710274 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.801156757 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.310843623 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.315503372 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.316284303 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.308560809 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.307854018 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.010517012 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.318861498 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.319010679 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.297575952 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.317045339 seconds)
  done (took 64.9418769 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.31456792 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.537915343 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.341662769 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.310673912 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.649741874 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.311754824 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.611664134 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.33240926 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.309013886 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.429164358 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.984866791 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.333877122 seconds)
  done (took 79.711933779 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.317213878 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.315802467 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.317145786 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.315844131 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.317169209 seconds)
  done (took 7.827514865 seconds)
done (took 1993.144297371 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.555035561 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.055141993 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.017027063 seconds)
  done (took 5.315823559 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.456786909 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.505326908 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.656127729 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.661487862 seconds)
  done (took 7.523909807 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.599433573 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.693474199 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.49857753 seconds)
  done (took 6.033297554 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.80844487 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.325044266 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.459722572 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.309520847 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.307656231 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.309429761 seconds)
  done (took 20.172436652 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.314294667 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.316219715 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.314382909 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.31752071 seconds)
  done (took 6.507694333 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.293582061 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.004407296 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.296777909 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.310370296 seconds)
  done (took 18.148919826 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.060479245 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.072507779 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.057654287 seconds)
  done (took 7.435539288 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.317538172 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.154199839 seconds)
  done (took 9.714802719 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.619372545 seconds)
  done (took 2.861908221 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.447354073 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.643328335 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.440718334 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.349076423 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.436510542 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.47359008 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.100305727 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.637088409 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.335560955 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.677818282 seconds)
  done (took 28.787523378 seconds)
done (took 125.892861984 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.29961628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.32139445 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.51574789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.272471661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.556674218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.516504955 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.588079406 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.238722948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.791480091 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.778005078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.275897029 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.612214909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.539979831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.333844487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.539015907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.336417562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.542958779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.34750993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.962471909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.164159784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.595926146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.913128005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.106688217 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.96971048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.542376781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.500219166 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.497607667 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.336000239 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.138003369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.736413816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.470780983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.312247617 seconds)
  done (took 191.896647401 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.313080035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.312872776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.326136062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.320751267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.314489819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.311973711 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.311764698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.330317828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.310077804 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.314200964 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.311939478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.312035363 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.323632455 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.334273905 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.312120432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.325673778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.324406099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.325411714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.313451499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.311369628 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.311581571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.325407258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.323948015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.319092499 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.319257825 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.312073389 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.311106192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.31970391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.312835745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.313549168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.31356531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.327992142 seconds)
  done (took 203.419604753 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.320386677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.312224661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.322410138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.329774999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.313353194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.317468212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.316041331 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.328527537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.313635564 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.322805147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.31194094 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.326430794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.315391278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.327275562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.314190732 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.313643356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.312944544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.346113817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.314307359 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.327413642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.313833154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.32665139 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.313883574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.327436264 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.327368802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.328062925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.330522476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.311444149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.326191512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.323838851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.315957173 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.315124424 seconds)
  done (took 203.51827159 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.520918389 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.3231795 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.325172606 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.282813263 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.325342329 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.323844711 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.317466455 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.516122172 seconds)
  done (took 14.184484233 seconds)
done (took 614.263603252 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.768400631 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.47570747 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.527786779 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.344979944 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.182998479 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.344330817 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.345426334 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.530899758 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.288233896 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.530374051 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.687649415 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.341072922 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.837974229 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.342978798 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.611058227 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.446386702 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.24593763 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.363011698 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.683002449 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.931826487 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.610192829 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.903818596 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.527690213 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.280588033 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.781892787 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.901939755 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.15858795 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.222594661 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.341974293 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.67517644 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.045982681 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.432499835 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.408861652 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.389374628 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.443720999 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.428204576 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.402639595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.387794908 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.534371683 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.62377392 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.946827552 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.09253118 seconds)
  done (took 92.620957532 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.313111729 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.313598979 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.311813286 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.312337959 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.314233962 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.313906414 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.31312012 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.312667204 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.314707164 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.313877261 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.313478982 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.313464294 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.313041277 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.31566837 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.311815386 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.313719583 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.31550294 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.315547596 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.31483611 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.312332969 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.314786312 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.314093578 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.315692454 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.313855037 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.31535015 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.314382584 seconds)
  done (took 35.415152907 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.32841202 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.587925414 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.768358881 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.332653622 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.327493621 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.332785242 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.412533929 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.329873176 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.330333819 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.332551019 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.491025423 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.330564652 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.367019201 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.793999255 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.330868494 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.329372227 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.328654236 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.327777578 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.598874697 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.337642411 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.430410457 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.32907247 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.411842218 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.338996499 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.348453252 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.329335749 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.3349899 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.850851415 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.331516457 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.491749431 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.157080439 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.410301609 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.805943502 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.783332431 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.160223664 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.330916933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.330979197 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.494779579 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.332042294 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.330077371 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.41309424 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.330912036 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.779893912 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.979447749 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.345459617 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.332076306 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.874703093 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.494334522 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.598885573 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.337399077 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.803179152 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.331837128 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.332358113 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.330720975 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.598650733 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.336032058 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.329096787 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.886364911 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.351038849 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.414342972 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.33132405 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.330207513 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.605420703 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.33039566 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.592897536 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.331875507 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.339229423 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.331561619 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.780609034 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.335122467 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.000934313 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.3462449 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.333028148 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.495296701 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.594924318 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.909250075 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.33579743 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.611539008 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.821428674 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.414102023 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.335260532 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.84288679 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.418645562 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.336454597 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.337231476 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.335527122 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.333888062 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.381185535 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.414288683 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.914387996 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98732246 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.901576326 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.431954353 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.347484017 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.335223226 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.888186361 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.350087088 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.33462754 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.777940072 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.997417779 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.3484737 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.341554746 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.987118711 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.351155679 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.419413688 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.339966691 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.790454853 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.335579114 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.395522416 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.334294193 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.341702666 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.33773153 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.418108174 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.337402362 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.336502167 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.974294793 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.515658908 seconds)
  done (took 176.18623244 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.33278098 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.324658771 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.328482837 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.326081418 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.328346852 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.332704772 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.327089061 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.327522314 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.333492366 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.326996408 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.327489491 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.328510434 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.329089317 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.341896786 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.337205932 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.335114974 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.938616077 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.32951191 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.329866384 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.326902182 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.135195296 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.329727284 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.328938051 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.325370056 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.328600797 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.328490294 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.337027413 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.343947937 seconds)
  done (took 151.932043825 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.335459981 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.966250456 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.337882614 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.476339315 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.358040232 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.336074428 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.475525003 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.397659005 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.335794627 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.3349415 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.334012372 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.672751479 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.339239124 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.908758267 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.536054613 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.47879159 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.909971187 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.338161815 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.335155552 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.336657194 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.480006532 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.345610921 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.674647867 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.968727943 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.339334712 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.968866846 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.326360915 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.33880084 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.336983762 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.967779504 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.337227096 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.675347772 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.418751512 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.401781167 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.967873724 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.912285032 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.913751099 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.493887897 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.337607093 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.335961642 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.335528497 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.325939881 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.970125448 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.339898504 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.337767201 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.961982659 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.353569654 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.338804584 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.346591604 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.33688653 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.401504335 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.401285568 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.680241356 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.9757771 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.421723642 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.35913318 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.478696404 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.716288269 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.340700484 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.910994221 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.326635817 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.969179119 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.341632129 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.326343258 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.338808067 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.343131766 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.500287893 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.479492084 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.915502856 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.340197196 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.915111536 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.501207517 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.339257306 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.339136465 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.339761679 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.972913138 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.917607668 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.501935047 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.484471181 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.543494856 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.327197335 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.339210595 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.328238347 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.422396045 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.338276403 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.973704285 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.917142774 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.342437054 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.341483041 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.339397353 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.341269451 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.527195266 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.974545519 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.423842005 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.909738574 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.696071465 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.681490987 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.342225408 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.403479443 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.340204831 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.68263161 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.341370579 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.403245994 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.779533406 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.683080998 seconds)
  done (took 161.621933358 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.60200377 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.605108095 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.437002159 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.459240334 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.960346167 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.927033817 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.716567153 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.475212598 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.452007797 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.600612338 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.600298967 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.430589076 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.525313588 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.420757324 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.103951831 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.409579548 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.435932117 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.474240853 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.44227286 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.422445568 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.002738045 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.645661916 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.525308687 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.41212921 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.438975174 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.152231942 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.919599779 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.909090415 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.525337993 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.734192888 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.902755181 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.502178168 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.369682397 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.056915609 seconds)
  done (took 65.865514888 seconds)
done (took 684.891623684 seconds)
SAVING RESULT...
DONE!
