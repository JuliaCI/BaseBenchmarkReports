cset: moving following pidspec: 1977
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.277228735 seconds)
loading group "string"... done (took 0.552608367 seconds)
loading group "linalg"... done (took 7.023405104 seconds)
loading group "parallel"... done (took 0.160033076 seconds)
loading group "find"... done (took 1.136896015 seconds)
loading group "tuple"... done (took 1.958859315 seconds)
loading group "dates"... done (took 1.268922456 seconds)
loading group "micro"... done (took 0.237078487 seconds)
loading group "io"... done (took 0.81929651 seconds)
loading group "scalar"... done (took 38.590839356 seconds)
loading group "sparse"... done (took 12.441699499 seconds)
loading group "broadcast"... done (took 0.970969245 seconds)
loading group "union"... done (took 13.35606619 seconds)
loading group "simd"... done (took 4.544822112 seconds)
loading group "random"... done (took 9.159483898 seconds)
loading group "problem"... done (took 1.968563268 seconds)
loading group "array"... done (took 21.734925737 seconds)
loading group "misc"... done (took 1.949023098 seconds)
loading group "sort"... done (took 3.331258543 seconds)
loading group "collection"... done (took 18.584171359 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.53437609 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138086144 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11299845 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128810517 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.178051087 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120501226 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135956267 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080585992 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.862708629 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153095159 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11686002 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.490916406 seconds)
done (took 4.777975294 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.188534761 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081393439 seconds)
    (2/2) benchmarking "String"...
    done (took 0.090116666 seconds)
  done (took 0.854720069 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.059932256 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121444993 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074184388 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062094669 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.060870796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075034216 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062312338 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.060132296 seconds)
  done (took 1.207475371 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067944389 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.062915602 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.078864339 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.062130994 seconds)
  done (took 0.963095648 seconds)
done (took 3.970087759 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.860754011 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213845644 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.177886834 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.446272878 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.142616345 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.172793354 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.655416516 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342275134 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192944753 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094061057 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.099827026 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.357215286 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.118962727 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644236073 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.069775825 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099622071 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.155684532 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.458684407 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075740726 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.078012367 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.097279908 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.123349154 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.094869726 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084660612 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152214162 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075856782 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.142170837 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.076791895 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076554488 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225721968 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.183410928 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661859425 seconds)
  done (took 10.178686939 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.092115727 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106716417 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063605507 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134351935 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090347982 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080003475 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.066115573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07677667 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.081618998 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135885325 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08074977 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1105917 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.059988956 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080274436 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.079353379 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213543409 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.073976801 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.090701198 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065453756 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085151108 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.102244875 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086945171 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073261388 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087256562 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.135876405 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188607791 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095201889 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.106115389 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063381532 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089870167 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.12305274 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.121505904 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063093664 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.077125995 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.116671223 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105310116 seconds)
  done (took 4.209545879 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.054187401 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.164988302 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.085617375 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146276075 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.076417282 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.104707766 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07749476 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089952468 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211814876 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.105355254 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.448726607 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122283282 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09533074 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.062689977 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.063234418 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.117718512 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078604298 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.600787991 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104477661 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131977536 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.059138635 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096788096 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.064828104 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080448631 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.062481018 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077113205 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064091053 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.113388832 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.293502403 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.138104946 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.062703465 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.167346568 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083454861 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081822812 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096655134 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193992605 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083175419 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11520121 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063595007 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060590008 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160611782 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085421843 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.061410881 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.094279276 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098593768 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114610877 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074822012 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.062543516 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171714743 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061076421 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.093980423 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.857637688 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159963967 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084112678 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060968626 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.278668854 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.079628366 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07834093 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.059796617 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.247568297 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.142836708 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06090773 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078502937 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.063082519 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.062280411 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.362114732 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.077328008 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.729913553 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.065544183 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.071211095 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0794589 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.061728469 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083833372 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067236956 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094731228 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.061872693 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.062405364 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077113089 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061003983 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.062652016 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096256402 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.192687904 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.060921866 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080734488 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.05972127 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.05835856 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097833251 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105737618 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06492611 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.059882702 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110928457 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059580527 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078501008 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.062304307 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.111861321 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.062372897 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095023915 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.065063594 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123096792 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.061274781 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.126260152 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061969516 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104739699 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066934043 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112911367 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.088595159 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.063878019 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140964678 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.059505695 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.059057963 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078939355 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.059946896 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079115263 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.063611781 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090265397 seconds)
  done (took 20.200961082 seconds)
done (took 36.330565806 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.297052696 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088157726 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.087913035 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.071199583 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08859802 seconds)
  done (took 1.396424076 seconds)
done (took 2.130310529 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126847678 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111107484 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.05917702 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107617523 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.058605613 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111168395 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108015269 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.076663039 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109950146 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.059357743 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105271201 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.059347964 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.058661321 seconds)
  done (took 1.916114125 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.07709858 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.07706964 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079459281 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.075819953 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.058059957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09130919 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.074738428 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09755784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.075201905 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065956 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073884691 seconds)
  done (took 1.579729073 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.07548167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.077830457 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079691529 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.074707127 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.058349562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090217603 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.074121722 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09505876 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.074584801 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06689296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074983507 seconds)
  done (took 1.577378249 seconds)
done (took 5.797317281 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.073900137 seconds)
  done (took 0.802992818 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.699390136 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.41610285 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076342496 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.126691402 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.211721518 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.146740972 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.444303215 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086039 seconds)
  done (took 10.142074819 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095049415 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07920727 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.065006509 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079612245 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.063666315 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078083949 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082795222 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065237081 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081238946 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066178555 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080950088 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066048099 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063441116 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081027388 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066252471 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078391682 seconds)
  done (took 1.989805421 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100110253 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097437179 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.085164939 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.069841572 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.083526979 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067966098 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08620043 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069359464 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081654155 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068265241 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085846852 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069120926 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.082290507 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060689055 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07009944 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085714602 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.065890107 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084507934 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070234081 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.084278001 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069529673 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.075113424 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067083142 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.084399746 seconds)
  done (took 2.701502424 seconds)
done (took 16.370036921 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108755874 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084521676 seconds)
  done (took 0.929650868 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076480734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.091995253 seconds)
  done (took 0.914617524 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076544772 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.075163793 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083890209 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.087664414 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06139865 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.075971782 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.096233845 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061456715 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061297457 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076692868 seconds)
  done (took 1.502540968 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.063630387 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.087231303 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064537877 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.091594373 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068575564 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.075381466 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.06746693 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062915958 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08819235 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058231579 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.081019346 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.092780185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066768121 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.094243571 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069130758 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.078610368 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065141531 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.077805659 seconds)
  done (took 2.098899232 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060749506 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062218599 seconds)
  done (took 0.868288944 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062271037 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059267796 seconds)
    (3/7) benchmarking "month"...
    done (took 0.076542538 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061360961 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.073848051 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058605889 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058836882 seconds)
  done (took 1.198102977 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391447012 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.104393194 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.237601079 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083543858 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.098215857 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261285635 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.078091354 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065646158 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.082410838 seconds)
  done (took 2.190951159 seconds)
done (took 10.440104465 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.073813071 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.07656545 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10467407 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415925187 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.100711672 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.061312955 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.126925477 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.208197399 seconds)
done (took 1.91284788 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.119247903 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.590758107 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.392962345 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206973662 seconds)
  done (took 1.940841409 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33589509 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081983202 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068575974 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.061584355 seconds)
  done (took 1.303910674 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.059273289 seconds)
    (2/2) benchmarking "read"...
    done (took 0.064608127 seconds)
  done (took 0.876010613 seconds)
done (took 4.989292524 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061340889 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061126744 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.107684831 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061319512 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.0756369 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061637382 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.059163193 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07588553 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061098759 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061136797 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078220934 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060988444 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060861143 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076258413 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.058737538 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058758006 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076665682 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059130009 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058961654 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.074450453 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059312909 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061160325 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076238739 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059035742 seconds)
  done (took 2.389923338 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079993189 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.077747187 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066791596 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066038196 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081803916 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067311523 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082285752 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061985233 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081790392 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063744877 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081333763 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06588555 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062803807 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080921247 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064168366 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.080699505 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066635383 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077751762 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063418725 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.080846355 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066476664 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061786253 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080523007 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0658266 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080240247 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065468925 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.079297849 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062127035 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082573129 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065636677 seconds)
  done (took 2.919204575 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065821105 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.05912947 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.075338406 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065801368 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059199588 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076654847 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059241142 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059162875 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075589973 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.059528377 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059739717 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075055768 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058980175 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07582743 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.060486912 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062255873 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.091810369 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059096877 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058541282 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07546533 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06295777 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059522133 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07526285 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058837969 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058396916 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074508987 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059189044 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.05873986 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075194984 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.059579353 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077777952 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062527888 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.05931532 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.081388267 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062423481 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.058891246 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.078656954 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058396601 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.059895075 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.074286186 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058697198 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.058707442 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.074526296 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065791877 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.059034419 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0763802 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.05973017 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.076659353 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.059687031 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06207245 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.075085521 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05915934 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.060944948 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.075940536 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064971608 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.059035569 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.075855275 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059114565 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.075588272 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.058943585 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059989829 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074547686 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062155816 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060894984 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09088425 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066244629 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059508643 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.075921655 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060462484 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061343016 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.076170705 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073184024 seconds)
  done (took 5.548297349 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.111096522 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087524493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077506222 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060868224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057769855 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076590318 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.062961284 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075450895 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061177266 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.064802792 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075479383 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.060918236 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076383126 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075208964 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059516237 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.076525278 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065655932 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073368715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059528022 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062749669 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076096828 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063912558 seconds)
  done (took 2.32451564 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.177845575 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081717879 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104171309 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085382773 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063424794 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084230568 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064919762 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080840591 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065121826 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079087262 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063510798 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081096232 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063500922 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062905548 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079659874 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063629317 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081769878 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063397905 seconds)
  done (took 2.212119847 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073596391 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061026111 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099220167 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061593075 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077863232 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064277606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082849112 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070094582 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079347995 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.061596292 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085756001 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064158799 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063663621 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076923952 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064234774 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07722396 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064596203 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062165834 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085874314 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066442476 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082370138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069791861 seconds)
  done (took 2.361761183 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076241816 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063279746 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095694193 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063744733 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074640861 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060879254 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084210485 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06171953 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06685476 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.078918406 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062556054 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077811267 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067109435 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077382827 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066913973 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062161063 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079419233 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06186284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079072771 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058412362 seconds)
  done (took 2.187280506 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082770779 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079116075 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063223085 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087183004 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062944344 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062585825 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087546414 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06304324 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07892654 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102570032 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063422965 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063216063 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087056017 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083911781 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062935201 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086974411 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072053486 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08709828 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063192421 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079519527 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08735343 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079184531 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070990462 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078450614 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063290257 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078801422 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06365827 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06861516 seconds)
  done (took 2.879488238 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061648318 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062058018 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.075890218 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.05934394 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059477563 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076030364 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059547272 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059612936 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077816638 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060024757 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061854552 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.078616338 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061903158 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062094161 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077499608 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061798983 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061488391 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075301819 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059349032 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.05996305 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077892931 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062047738 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06183089 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.185755849 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059467723 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061241365 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075527014 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059183663 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061433074 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07517691 seconds)
  done (took 2.862201236 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069200792 seconds)
    (2/2) benchmarking "in"...
    done (took 0.066330954 seconds)
  done (took 0.907225366 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059013026 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075772869 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07542615 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06585048 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082222443 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062433304 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08585229 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066373724 seconds)
  done (took 1.346396747 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.077043529 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.072927858 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.079641952 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07279742 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08876998 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.078879929 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141712591 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063054798 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084794962 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060281062 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.092604477 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.060921819 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.067256604 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079000646 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.067909154 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084074999 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059915851 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.067164094 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.080500175 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061481373 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079514574 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072970208 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064514822 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.074294871 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063266681 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.0882289 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073440802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.079534735 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065534088 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.06928253 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084233745 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056897323 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.078873344 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.062827869 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060494208 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.088574797 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077459344 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081348173 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.072208136 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.080043971 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072286636 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057605083 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.082882536 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069203773 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088827834 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062556676 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.079990832 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057455157 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060156679 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080662211 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.05788527 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062429583 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.073247809 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069141412 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.081469194 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072072018 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060478377 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080188204 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065105457 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082440201 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.06816734 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064003333 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081425264 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061820659 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084836428 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.066001697 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068115127 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074008344 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056653327 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060518357 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.088060944 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084287305 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.084012094 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06340405 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079447892 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.060409955 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.064617751 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080025859 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067593969 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.084263149 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.062868368 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084665299 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069890523 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.061640803 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080407827 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069046454 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.076580921 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.064740516 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059379594 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09429121 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061875999 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077327654 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059917246 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.066532004 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082189305 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062108008 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.076296332 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069520154 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056280082 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.079391287 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063215506 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079340632 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.073809272 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083526692 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068325052 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.069879257 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.086780497 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062056211 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081999009 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058938405 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063208904 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.077990991 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.068780516 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.073724373 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064847662 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062346485 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.079204824 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.071501053 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.07672456 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062251254 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068968034 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.083679765 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061207368 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074899607 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.064672886 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062402612 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081594303 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.069734522 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.077504421 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057675933 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057603139 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.082818093 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062292247 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.065090956 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083553575 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.064793792 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073456318 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060576962 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082457469 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.072159354 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062837507 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.079193128 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068609636 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0796059 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061294963 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.068434888 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08132988 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061956042 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.084556484 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.062998217 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05743905 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081454661 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.064849648 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060767371 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082551877 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065379161 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081062869 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063139814 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.060096414 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084430393 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062606839 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077463739 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062441604 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060111897 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.0890669 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064356304 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.074193224 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059329725 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.068214905 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076556428 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.061658456 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077744299 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.064478928 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063278284 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077000169 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062200044 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.063023107 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090263314 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082429524 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0633182 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067434276 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085023911 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062111388 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.064969572 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.078404333 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.063907163 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.07918325 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.065764596 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.066391746 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083826537 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.063987718 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076021555 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067650337 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086250451 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061445461 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060533595 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077834868 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06617239 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.084405326 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066247535 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062526771 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076711372 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.062834286 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082099311 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.064554645 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062369076 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078077986 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.066754394 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.077754825 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068115741 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.062301582 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.088172003 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.065939534 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074202785 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064990557 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.059628904 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.084404384 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057725324 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.076308002 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061631021 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.063512271 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078334521 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.064954465 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056276288 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085595293 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069612224 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.078605167 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061606518 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.061633183 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085094696 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063652167 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082364646 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065540565 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.06772764 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088373039 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061002204 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.081606864 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.072150225 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.078666793 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056799309 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067490399 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.07779336 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06150009 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0608949 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.077387578 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065673804 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086526991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.067952533 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056331979 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.081057598 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061043492 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077321359 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057810689 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.066508992 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.081536988 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06290792 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084660108 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063878127 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062931948 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082482414 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062322294 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.079398985 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063216141 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064914709 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.079433208 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065056689 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061195145 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081660117 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061610312 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.076661448 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.064390316 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062566554 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079290692 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067564104 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.078662814 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.062396772 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.064794114 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.080182341 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063035369 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06264795 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079028785 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065203767 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079684277 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.062670521 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.064368159 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.074707031 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06894024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.078760219 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069565431 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.062481798 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075969767 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067544372 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.080922072 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.067329412 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.062258907 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.080047664 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.063572124 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0786911 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.065167229 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.067789707 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.076830239 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.066887864 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083610557 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.062847794 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.064772228 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07994416 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.063792494 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.0604094 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.079358182 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063299432 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07905487 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.061922068 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066266998 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081078882 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06294361 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080234671 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063725322 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.062119212 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.080486824 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057620437 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061092933 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078153107 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.062342009 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088734321 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063418899 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.060862408 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078496242 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063450096 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.077949513 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059375681 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068873085 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087447927 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06242439 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087979143 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062053767 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.080000762 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073024054 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058785389 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.077477201 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06084114 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.059978333 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086451844 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063000422 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08791697 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.062409823 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06067231 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076587913 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063234026 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.077665934 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057606945 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059949463 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082664967 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061387091 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061002519 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.079124675 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066014583 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079739915 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072019496 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.078572785 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062814537 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06234794 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076280334 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061766994 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061022441 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081841773 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06391955 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059713962 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076972042 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.062346333 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.079437399 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.063413062 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061581858 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080561839 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069840321 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078481885 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064614069 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06478021 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074696807 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06501898 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.078307249 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.062510547 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06078703 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083127734 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066620741 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.062420853 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082601394 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.061704418 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080217946 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062831219 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060091869 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.079228941 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062520807 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.078944832 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.061359243 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.062993245 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086384059 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061452822 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082063379 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062361621 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063081866 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084459888 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063619887 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064755673 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086809821 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062855245 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.080841378 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.065185939 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082247274 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.065894698 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062721382 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081308213 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069654381 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078699482 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.068567716 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.062719546 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.080214798 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064286 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.060276121 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079738798 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062828199 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078234088 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069733808 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062875291 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.079020598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.061851352 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059760558 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.080776967 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065876998 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086334444 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.064850547 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08260913 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058016997 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060124256 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080084329 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060404056 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064100518 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.083687707 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0693948 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.081447716 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.062816373 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060970842 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082431503 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069327508 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.082467715 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.059938844 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.066092005 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.080194344 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065388872 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.062451432 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.079686072 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064056234 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084563888 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064502474 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061481856 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08752549 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.065880589 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080496151 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.0638499 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063126207 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.079766157 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058575663 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06236714 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.081346807 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.066969145 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.081681397 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063294014 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090184545 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060660943 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.062341182 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082858604 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062070526 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.083528789 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058407408 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.063999883 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080979824 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064313537 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057262467 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078930869 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060753741 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.081268853 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061414711 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057887988 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08953301 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.065919716 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.082122806 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06141434 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061902617 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.074718157 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058554773 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061045757 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080620149 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.064192829 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089114973 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062234787 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061084111 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.075642971 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062543733 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082168573 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.065521877 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059795763 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.074997116 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061624011 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065181303 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.084769958 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06163045 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.080266679 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.065806645 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.064671885 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.07742923 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065902254 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058553009 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083352573 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074597412 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.080187359 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063703333 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085515997 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070039867 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.062285472 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.075651879 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.062808448 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08264779 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063354467 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063105874 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.081413893 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076421752 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082283009 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061585406 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.078174062 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066046233 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062372685 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.087626262 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.063451263 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.080624132 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.066678218 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.063692515 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088615985 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064908487 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084104927 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066192308 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064526173 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07974231 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062254809 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.077756387 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061660138 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063662477 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.080948218 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066572609 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086865386 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062211406 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089911962 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.071178351 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064095083 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077194234 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062085596 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061290301 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.075305769 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064086865 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078124882 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061599372 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.060951608 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.078392033 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064088095 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067263735 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.080929942 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063876113 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.079545155 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058126396 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.064314438 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.082061899 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063313231 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058763355 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.080634348 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063142058 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085565645 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065653296 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.059677104 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.081344456 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064342552 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080693374 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057999903 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.068787239 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.078835436 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065548926 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061321392 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080280361 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063695812 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082468193 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067421697 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080205154 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.064660917 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070678184 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082163551 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061031416 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059458288 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.084725565 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060690061 seconds)
  done (took 43.006315338 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101873477 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076971676 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057932669 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075204224 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069747498 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077153271 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058361405 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.058728775 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07614377 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061327425 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057318035 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076169371 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067177085 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098711123 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087472274 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063013825 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07540921 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059069006 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057952495 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076930854 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.066672277 seconds)
  done (took 2.315063226 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.08106978 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092540577 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0732814 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093948864 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066817483 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090687904 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.089526957 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072931617 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092867348 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069549612 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092463738 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072350295 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086767487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085891833 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069284423 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087965092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075504623 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084862902 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073504047 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090661346 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070464187 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090381319 seconds)
  done (took 2.619263928 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062602466 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061993636 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.081166813 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057884056 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.061405274 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075441275 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066190182 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.05967193 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.083536053 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069624992 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078433015 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.061759082 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.063541819 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078231229 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.061762137 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.059220387 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.124234156 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.082924936 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062084047 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.080847522 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.058198884 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.063946515 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.075748547 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058165385 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060709579 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.082604748 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.062977818 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.077684902 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0620539 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060939804 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.079323779 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060047947 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.062248306 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.080631122 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060728954 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060314955 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.079666735 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061800566 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.074637848 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060356643 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.062109518 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.075551676 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062266373 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.062801627 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.078517833 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.059888529 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.062162681 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.079243749 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057479133 seconds)
  done (took 4.190473368 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079353208 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.134814214 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083095192 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09689701 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.095857362 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.087631476 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065487044 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116388761 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.05976057 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079755752 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077731068 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.095605477 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061506005 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.086179232 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068043238 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08013842 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06288935 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.07879236 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066920153 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078832105 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066169753 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.086152078 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076218848 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.093847862 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065236016 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.078987741 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061167231 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.083402354 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075119915 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.08437523 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065786577 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085332233 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076661633 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.082126804 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060349533 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.082285857 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07784144 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.080193811 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06380869 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077597154 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064161895 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08388682 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068537157 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.095125947 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063400826 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084630402 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062254901 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058708128 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.093993309 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.081673087 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069818604 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.093738347 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066264648 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.079498862 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067057753 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.09484972 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062270452 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.078085897 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064822828 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092027227 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060222959 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082775899 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075632876 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.081630289 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069198736 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.094802997 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067580472 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08311213 seconds)
  done (took 6.260090021 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07094465 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.086033821 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075933922 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094514566 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067181097 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087140599 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086353099 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068083156 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085861111 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073321012 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086741042 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108328927 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06413807 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.088587657 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068260994 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086001757 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068498575 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085585688 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069557186 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086185191 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069493084 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094096663 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067914838 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.094331088 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115530812 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064510051 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085840999 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069122227 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094029735 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066807123 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09753827 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08592696 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068606667 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094099353 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.097371424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068319056 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06047307 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086550591 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.087019531 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068435074 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063342092 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095068104 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086641799 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064768629 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086467855 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068098388 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094038855 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.097657681 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.071468052 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090445883 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068187665 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094726495 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067493588 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086559891 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093058124 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.100224959 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094197855 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093049106 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067940161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095568295 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093889211 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083185092 seconds)
  done (took 5.923509247 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08190639 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088952003 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.072491582 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.076834875 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060374716 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084340055 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060528855 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059926021 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089509652 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069136095 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091399183 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0836091 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069308688 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090809656 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06533407 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086705358 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065432359 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08447664 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070029087 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085045599 seconds)
  done (took 2.365602698 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071383499 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.097320941 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063071344 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067935393 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084175005 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067847134 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082956273 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065762008 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08099496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06549094 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089630206 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072670319 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061899898 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086814521 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089951601 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068171134 seconds)
  done (took 2.046142227 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073517445 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09087057 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077325142 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.081884168 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061550705 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058577807 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081803059 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057760836 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07727946 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077689579 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.081767661 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.064933029 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062378731 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.080105786 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059960417 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.083175516 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059460371 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059886699 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.081121366 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077708799 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.091699067 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06165418 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.081207989 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064297411 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.061834946 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08786211 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061263383 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.078929755 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060377236 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.081198885 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063201088 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.084083163 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059729757 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06035208 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.079766369 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061071773 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061216128 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.081922609 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064308018 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.079975271 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06140597 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.061454004 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081206399 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062409809 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077650253 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063102365 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058410285 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.083485892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060686948 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08054668 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062444448 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.083179862 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063287053 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071627588 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.084398793 seconds)
  done (took 4.763581381 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076325063 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064765091 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077975548 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060271745 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082973394 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063889694 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064519872 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083349186 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064614935 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078004258 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064757288 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064019559 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082599493 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066464497 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081614221 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066605618 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057603003 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081921675 seconds)
  done (took 2.1166986 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067945434 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062215675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.088571195 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062390005 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.080242229 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065521714 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058238227 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079152221 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061394675 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061537506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080932628 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064501681 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078995054 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064961642 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062127638 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080845863 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065193811 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060083294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081257991 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058815019 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082589329 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062131058 seconds)
  done (took 2.362593189 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.067775545 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.088850109 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.154614614 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.103064037 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.078272376 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.094578746 seconds)
  done (took 1.423839274 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085780768 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093916246 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063471829 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082197549 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089066866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062856021 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083175384 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063520509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090994604 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095302026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06434111 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089893574 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072341546 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09509562 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08713645 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070057623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082672908 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064619672 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062914488 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100387988 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082266374 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07192208 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082569746 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064060611 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082580549 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072465766 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091070374 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095248728 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06415418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090622866 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069640498 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083128589 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072846352 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095882319 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065489221 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09106488 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063348377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100031445 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087173438 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07140851 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084374614 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070557586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090943624 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068613763 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090379922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063143108 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087721511 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082130585 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065522636 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105882029 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069761705 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090310541 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088085363 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072716984 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089944795 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106615696 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07618156 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090047134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069113785 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096865579 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090488229 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07044972 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091286241 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095412107 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070921525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09025618 seconds)
  done (took 6.198877683 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077015871 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100439044 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06521139 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096013858 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071028205 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083907677 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063587917 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083777434 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063726366 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083604111 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122945814 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065046699 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090207941 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072483655 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083471725 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063391391 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083184017 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071687125 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082891005 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106933559 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064233998 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09008091 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071625239 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09102309 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094683503 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06987498 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083695008 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064975176 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082644675 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06365859 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087827827 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063925726 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090507809 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062664538 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09160448 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082447156 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064326827 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087790289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064072725 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087778238 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072534934 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10055084 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064203052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08299043 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094900312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064834555 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08300836 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063568671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062968499 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082396581 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095779905 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077625243 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095649998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090781122 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064787281 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08304404 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064278522 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08258208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065151143 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088547679 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072358436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082557555 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086707661 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083112901 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063379568 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091742908 seconds)
  done (took 6.086935398 seconds)
done (took 120.366656944 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199948631 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179700007 seconds)
  done (took 1.212200033 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.064369982 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091558725 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.092475153 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.124007178 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081901372 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.095390287 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.093591382 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094762588 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.062426786 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080863032 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.062901814 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.063475814 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146041574 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.062408648 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.061900403 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084110339 seconds)
  done (took 2.202134143 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098298036 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.190353543 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104935176 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.060938412 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094521266 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070727782 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.059702392 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093392728 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.066870456 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.082455669 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07091672 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089655194 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.061613031 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090163383 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068321536 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088936574 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.062787936 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089444694 seconds)
  done (took 2.384772559 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098882467 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.135449491 seconds)
  done (took 1.075052499 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.190331312 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.117166567 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.195126204 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.398474588 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.199022947 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.168195316 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.166527831 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.166235186 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.14789228 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.163958276 seconds)
  done (took 2.753071193 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.094369131 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163263037 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305501737 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13190785 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.082869369 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.109368514 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.132554639 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.085806251 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.0966813 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076286168 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.096333092 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.091556087 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093515859 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.089449643 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071107276 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091191837 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096627523 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088909889 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07381868 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.089921108 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09390723 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.081085873 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070827518 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069817821 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.093617725 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.091857618 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.062919659 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.062143738 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089618444 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.064775343 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.089530842 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.085306016 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.093609889 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.123743363 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096649828 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.125663555 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07039956 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086981199 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.065075124 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086726094 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.073726413 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.091142912 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079715912 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091485357 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.062370758 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069379874 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08171197 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.061954893 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.090668726 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072865785 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.091182415 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07049437 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.123235082 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.092847403 seconds)
  done (took 5.86155358 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.403421652 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106425281 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087381396 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.44401743 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072503607 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090703397 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.334008875 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.085651483 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199208096 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.403170022 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105623273 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068959533 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.185346887 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.208909464 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955029663 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.276041644 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.303332814 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069110174 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.122252351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.116746841 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128799341 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133522908 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127997512 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.577249597 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070019663 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086945349 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126352474 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068119762 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124658074 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098854412 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06539564 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.136246482 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.218392479 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.163051744 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070726771 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084832021 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066143301 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.132463177 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222926173 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.154989711 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.164032275 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06404156 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065007138 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.149239593 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091230855 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083219626 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.125383961 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.140098372 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.134201919 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066145496 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.089264912 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13136375 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127717651 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12865286 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094685609 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.256896385 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28060508 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065152644 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111779266 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070334479 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224250059 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09655848 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.162246382 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122116035 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.150392584 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085961736 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803624308 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.132276787 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.086195132 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067536635 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109764109 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065715195 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126748342 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149289185 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.553105679 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131870371 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066072317 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085847845 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189750268 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098145698 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065982761 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.126520779 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070061795 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11119561 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133652115 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.152905057 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.132593122 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.197836435 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131692212 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128722967 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066136892 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117922819 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0904695 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.181355902 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.155699688 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.125958233 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.177029718 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127842724 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.125053323 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.153536565 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06789314 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.136972761 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109799585 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071896404 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128082771 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.176627878 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.110891219 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077797111 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086270342 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129827952 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.093675002 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102168123 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129257783 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.135152818 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.601123451 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.131976637 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083997751 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080689901 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149204726 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.127634259 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067642581 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.199302551 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112417369 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.13260377 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111813593 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.063290152 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110801434 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.126144175 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090313648 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112278389 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128103498 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069678245 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.207108669 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.174498708 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069521954 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20015127 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169352885 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067281837 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.135126616 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109734581 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.132175955 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.089638161 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129484728 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070757599 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81365503 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134474399 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111718115 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066338027 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17639648 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066000518 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098326736 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077791278 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.083766273 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774910931 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100411853 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075248611 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.098630769 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06783434 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112262357 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12692603 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.086440403 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.124812588 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.166265757 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089283973 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088230802 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09854508 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.125253858 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.090742164 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079547618 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098492276 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078168763 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.113476044 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065479712 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.099105903 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.132999845 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.127084231 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.17558745 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.733352496 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065406882 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098091958 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186364896 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065959881 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.253039537 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126050061 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.163504201 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.128094826 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09529752 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.257265555 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.128593665 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.175278402 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100366148 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137469184 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063747858 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127579718 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.128055588 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085322151 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067040506 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.125752244 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133152606 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130981937 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.990893128 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065651186 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199136954 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08402507 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.136186652 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07105044 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088181285 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.230895134 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08577847 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136148697 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127490954 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065852377 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.098578011 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.641679506 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.097771394 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128920024 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067891543 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17720829 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.128230175 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127492117 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128582464 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067899597 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.124657083 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.17766785 seconds)
  done (took 39.12868144 seconds)
done (took 55.454686757 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26805173 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.187472839 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240102407 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.140293132 seconds)
  done (took 1.774540276 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.139325798 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100384309 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.113495346 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060032114 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.120203446 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.081638418 seconds)
  done (took 1.483039234 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.386631753 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.287694031 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228038922 seconds)
  done (took 1.770129605 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291633427 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.219572175 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.405310519 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291603556 seconds)
  done (took 2.183978287 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.184155716 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.109598684 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062454114 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10252216 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.153828695 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.288337927 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.118936859 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160686037 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.095811004 seconds)
  done (took 2.189917107 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.170144706 seconds)
done (took 10.435816794 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111749235 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093187174 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.21916695 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.212277451 seconds)
    (5/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.134362511 seconds)
    (6/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.300886776 seconds)
    (7/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.174216189 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129462767 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.125969364 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074178154 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.093302682 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.242920574 seconds)
    (13/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.177233469 seconds)
    (14/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.182216251 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.078942724 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.140175653 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.232294955 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.073366633 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095025046 seconds)
    (20/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.226734346 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.266884757 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096682121 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083642768 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068785928 seconds)
    (25/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072355024 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.257765775 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132453766 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.075425359 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092134179 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.267175282 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.19567868 seconds)
    (32/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092499609 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163467574 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069000715 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.174215692 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11294665 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.047929096 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.120471226 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069398594 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.084024239 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.233792527 seconds)
    (42/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.108725968 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083692428 seconds)
    (44/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099755459 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.094396435 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.106600888 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.287751577 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069967228 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.213146629 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.082995378 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.124156067 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088852508 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072022758 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088179042 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.125999133 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163140052 seconds)
    (57/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066652384 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.068528019 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091066583 seconds)
    (60/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.276931175 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.063777267 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065605283 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.084400646 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.200278139 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093271279 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083960898 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091299432 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069823136 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069075926 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05063611 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.248456782 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070494574 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19386567 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091685177 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.101568353 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.082858738 seconds)
    (77/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.105497158 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06033096 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.157581324 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.103493772 seconds)
    (81/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.099859176 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.062784961 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.21482068 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062162396 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.212785788 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.155982032 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089351398 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.219357907 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.108562662 seconds)
    (90/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.104364584 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067112695 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122177401 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.048299447 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.082965348 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.048910804 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068909383 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069346655 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.049130441 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069882114 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12836148 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.061827479 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.117911065 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.213106527 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.245204256 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.047635629 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.092144287 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.246767057 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094318863 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094833297 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.048594654 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094186894 seconds)
    (112/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.117793898 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145968505 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074215806 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.069034509 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.215472083 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065143783 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094061813 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 0.122022896 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.133957149 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120543878 seconds)
    (122/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.058369875 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069551153 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.163357597 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.048114681 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.093256784 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.193146722 seconds)
    (128/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078188011 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094985607 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.047442203 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.142158711 seconds)
    (132/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084304702 seconds)
    (133/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06951328 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.250920396 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.153235577 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070764066 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.048301702 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142400387 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.069030938 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085381893 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067372549 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.069349374 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089399061 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065800876 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133452088 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.048559354 seconds)
    (147/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072782478 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110425277 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069628874 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.098658711 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091707119 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.084077017 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214363141 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097733462 seconds)
    (155/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06843757 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.061540819 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083018551 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070100766 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069040254 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.107630476 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.049054682 seconds)
    (162/309) benchmarking ("sort", Float32, false)...
    done (took 0.145606858 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077654752 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069612956 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086628012 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.243953219 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070535587 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.084512577 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122310005 seconds)
    (170/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.047185757 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071658279 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.048348511 seconds)
    (173/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.058683841 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.216577579 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.154627028 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072906714 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.097850285 seconds)
    (178/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05047844 seconds)
    (179/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070188171 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 0.204163592 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.070327379 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142938329 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.083519961 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174934885 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070866758 seconds)
    (186/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.057670237 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190509987 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087978486 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.18889928 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069166143 seconds)
    (191/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.048225381 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.123193976 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.103820136 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.071486598 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191707414 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09382942 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.049689916 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.047611707 seconds)
    (199/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079954875 seconds)
    (200/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085583825 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.047620617 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095367728 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.048059627 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072717522 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084435724 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063807869 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061268865 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.083390838 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.185848444 seconds)
    (210/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.05855604 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.0837608 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071461745 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.085183667 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104007821 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.048708222 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071155252 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069493823 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.070150829 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.04944275 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096496707 seconds)
    (221/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.067980402 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064105097 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.165658832 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117066017 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.203397449 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.080711019 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070937748 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070014453 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07029657 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068650888 seconds)
    (231/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.049187784 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.047557927 seconds)
    (233/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.069727166 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136643297 seconds)
    (235/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092159422 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.050526703 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.047913571 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083523341 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065836763 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.068307947 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.085267373 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.047893899 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.107973866 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075802688 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.157856127 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062623136 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.062806715 seconds)
    (248/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.089069122 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.062980268 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.050355696 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094129896 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.09963098 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.083801249 seconds)
    (254/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064924036 seconds)
    (255/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.059901843 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.047742788 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087736009 seconds)
    (258/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070234713 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085517094 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085002258 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.048286091 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.109109546 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064334442 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.048160589 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084090774 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06245342 seconds)
    (267/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187824918 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.048839984 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082420741 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.079997593 seconds)
    (271/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06228285 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.155132402 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06390216 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063456168 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096548141 seconds)
    (276/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068805522 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086718445 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.059183515 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070246486 seconds)
    (280/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.092598056 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062950219 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.049218383 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.05904778 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084023899 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.050137836 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.048117471 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.16561519 seconds)
    (288/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087339351 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09209252 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069072807 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.153096862 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062204488 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122880691 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062106748 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.061077509 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093585359 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.068415834 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 0.160990453 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063065994 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.085967166 seconds)
    (301/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.064732603 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092793471 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.049183162 seconds)
    (304/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.04956849 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.062739128 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092991258 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062451838 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06502824 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157430586 seconds)
  done (took 32.97410386 seconds)
done (took 33.844678825 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.07792724 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110976094 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071363154 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.111620799 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077449348 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.073790397 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092666725 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07580707 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.099977643 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078250718 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097321617 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.051249543 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093834701 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071330642 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07178231 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111176897 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074896325 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092137026 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07058012 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061477842 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.092604358 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062621721 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.086105513 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.051239612 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07492569 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090804937 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069284989 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072321588 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08472551 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062256511 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086915614 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.069349324 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.061924607 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097966399 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068386104 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069820969 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093676302 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072619101 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.085797486 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061995129 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070244556 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.083663339 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.068708052 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069426722 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.090076412 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.061109171 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069112491 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098793982 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110837713 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064243423 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.070172998 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095997675 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072908624 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068410748 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.088521921 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069861012 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.083079378 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088308071 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.092343102 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064002246 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.06950745 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093321124 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.060720713 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070782085 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.092599977 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071966945 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095049578 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.062365451 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071878158 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089777559 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062368013 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091709916 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066040867 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062159253 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094014409 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.073815149 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061460746 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.090086275 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068992211 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.068130983 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.08366118 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064013396 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063371548 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.090285709 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064239053 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.050611856 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.087828261 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068211242 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061660056 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.092775955 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068365404 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090400012 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064341972 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.072653126 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.084042987 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.062029034 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062194316 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08469058 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063665363 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.065657958 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.084392016 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064950944 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071167247 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.086079331 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068250497 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097336317 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061909916 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069138553 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.084611322 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062229461 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078777471 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094034994 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062174973 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086692963 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061972441 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.280821048 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.083375071 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061836382 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061606183 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.084196083 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068154684 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062084459 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087469925 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.064035101 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075390825 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.084237999 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065660845 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066595686 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.084015056 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067827632 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.084308513 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062105047 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064074329 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081076134 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064080056 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061788975 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.085824522 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064166285 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070173601 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.085965145 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071183572 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066236828 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.089906931 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.061361611 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060217983 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076797229 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064053315 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063086242 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.086141388 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061603277 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063263013 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.084077043 seconds)
done (took 12.652135328 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064346103 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169884989 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.121761642 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093331184 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107473303 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062160247 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100216329 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101023285 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.087231317 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096519128 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107452898 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.080627001 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.135731159 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.084690588 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062620974 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066370666 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.086565125 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080448448 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.120906544 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.080625228 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133408005 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061607784 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.116650778 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.107109166 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.081860416 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113233627 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06223858 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.088323527 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.062005832 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.120542739 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.082146436 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061580665 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.084691257 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090906442 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.112971289 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.10391433 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06212298 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.079642124 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087291562 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.0642666 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.109943082 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.113794417 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079639334 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.100244786 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065965687 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069064591 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.086304997 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084294728 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106631264 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.099762332 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.080319635 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.128419533 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064970997 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10525738 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06252387 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.10863874 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104052385 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068063932 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.061637853 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09029193 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064170646 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.062179329 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.103211187 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.110341956 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065724924 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081233088 seconds)
  done (took 6.887620636 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079221753 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.112410686 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077280029 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.099981347 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06206101 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062348506 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.084828035 seconds)
  done (took 1.516218067 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063126982 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084911031 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108572638 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085742953 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.105062426 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083618811 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095462289 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062500925 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.103384209 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064306943 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085058101 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123256115 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064872416 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09281137 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087774514 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085195375 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.087370699 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06377789 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08887741 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087321967 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088586958 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.083811078 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.087506111 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063559874 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077616286 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086103467 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109570451 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091188802 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064337005 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06631071 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085213966 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103798696 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100712295 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.070972287 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085775973 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078573942 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.078155261 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084143594 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.07995784 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091124949 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078148324 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063496125 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.088445149 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.061770955 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067611588 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097546809 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064523511 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087109697 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066172701 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083732456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.087934064 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077254419 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086179404 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067145717 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.064997063 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092017724 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072621094 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064224653 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.106848078 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064980894 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.103565732 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.080534377 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.101183068 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.080388355 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065929773 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10081969 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078654934 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.08934218 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065180717 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066595454 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103913909 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061503468 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.087934263 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.074609374 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.065720908 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111209426 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087580475 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088086957 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074025521 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063753174 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.087705138 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.063859393 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110342686 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066725274 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063895556 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091498667 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066410913 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.061318931 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086634666 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066908502 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.061445595 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.088527302 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067006896 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.064088169 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089173753 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080504941 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.087827558 seconds)
  done (took 8.834900987 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06758443 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067328964 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.089528593 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064546072 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067732932 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090853488 seconds)
  done (took 1.389505117 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094165292 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.090404532 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.073385277 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07081898 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.121080884 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102621546 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.079771153 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102755954 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.076557941 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.095983559 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.079464097 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103063602 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.084652019 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072012418 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.101777941 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069086882 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103172756 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07391246 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094460586 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072755671 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.108543063 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071900492 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095935237 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080314553 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.091226757 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069703223 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075584087 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.096533174 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.072218923 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102941593 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071909886 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.090946248 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.068187594 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.102759604 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.07914832 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.092034236 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070723734 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068450607 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096827006 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067641208 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103466501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072567868 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.099254501 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067848034 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102708414 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.06885331 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.091796988 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076043271 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102305614 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.067897201 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068252989 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093743533 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067389797 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092094103 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06818937 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103144278 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068337965 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.102684358 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071862429 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06842489 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092242944 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067520122 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103065803 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067540904 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.100439489 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068067863 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.092121645 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07178729 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072841458 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094172286 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.067687336 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.091772293 seconds)
  done (took 7.025589694 seconds)
done (took 26.580151024 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673176926 seconds)
  done (took 1.613465842 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.820887151 seconds)
  done (took 1.76491569 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.189976941 seconds)
  done (took 15.137649343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.609353649 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.755523274 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.793903093 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147449844 seconds)
  done (took 3.2476992 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.879402643 seconds)
  done (took 1.842774052 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236781025 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221529615 seconds)
  done (took 1.406823821 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730261076 seconds)
  done (took 1.686768351 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.284162861 seconds)
  done (took 2.230980556 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323945583 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179397339 seconds)
  done (took 1.465187781 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.513303744 seconds)
  done (took 1.470446597 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.556128432 seconds)
  done (took 7.517428551 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225266326 seconds)
  done (took 1.194408847 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.262522377 seconds)
  done (took 1.221058208 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.13519874 seconds)
  done (took 4.095895291 seconds)
done (took 46.837782534 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.074199764 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.077580103 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100579311 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.074870407 seconds)
  done (took 1.280574412 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074163933 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.069640039 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09815641 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.068637473 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.098490216 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.069868471 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070884432 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.098154478 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069130095 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094856124 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069450998 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068742796 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.096173044 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071326427 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091117694 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.072505369 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.096799696 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.06988712 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072221454 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.094326411 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.067462881 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094608511 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.072403756 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068452655 seconds)
  done (took 2.884268638 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07387084 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.06947167 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.094597611 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068214282 seconds)
  done (took 1.274110139 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074009518 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089442415 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109928514 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.073683318 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113609549 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107246063 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.066017591 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06697108 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091984838 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.073282349 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064197351 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.119390148 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108772864 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07384786 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.075619179 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086584263 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065021367 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.108706871 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.073820047 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.073831882 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091215185 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073254108 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.064715615 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110022939 seconds)
  done (took 3.023678901 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.073645683 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.099462567 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.099017379 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086507243 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.112958145 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061981512 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.096392767 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08795715 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.147369104 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061594211 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.091592291 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062519248 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.069563525 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.085986823 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.072993839 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130311968 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109257139 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.089163069 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092921991 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063370584 seconds)
  done (took 2.763554162 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071963128 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066264002 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086200889 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064891378 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073950397 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093380433 seconds)
  done (took 1.43154493 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064975065 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063183762 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.087363262 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063270758 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067890373 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.087927262 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06264736 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063439594 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087233559 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063647899 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063901056 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.086460608 seconds)
  done (took 1.831187867 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.418753711 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065454342 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088876568 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.062472539 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067548521 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.086875958 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.075184232 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064873584 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.10961054 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062327796 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063215697 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.088894735 seconds)
  done (took 2.223805665 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254783139 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073234071 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320911089 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163825142 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133992452 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151595283 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100186853 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14311062 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194999631 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133227356 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19668455 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21804027 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130717849 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163084116 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111403969 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10407931 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204487653 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216444349 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100703927 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221211536 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201166698 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153244938 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176279672 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125619107 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129249618 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14086787 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068114544 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100952894 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228328971 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158796911 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170555386 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132873551 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117135464 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238546188 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213972782 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166540651 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157921127 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106480707 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.131656379 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.184035332 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255853244 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086411287 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216069107 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129898478 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078568945 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193035744 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153100204 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153663695 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131660999 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111232125 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170579095 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234164806 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.161488229 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109024926 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128529811 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109679342 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.13772362 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124243071 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237778547 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21650767 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153487298 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068234819 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119171819 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208428643 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167744172 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137166859 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15072141 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114272291 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164048545 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209098123 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141061784 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17047523 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.150860057 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111111912 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153199192 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167025484 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149554322 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226539003 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149573695 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069030024 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169697322 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099373109 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104632852 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141100804 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096833581 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229950636 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095697922 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136302861 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134888973 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138900231 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132634549 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214615787 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17453555 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125972677 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.062619426 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126371969 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.145794942 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169092784 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109345407 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13803543 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142532905 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.10183332 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160719581 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.071274777 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148001808 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.100368208 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157206898 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157612655 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.097932392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148521995 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099304826 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131138047 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185269659 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190475702 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111640824 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079577156 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222929515 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150651475 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126833881 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1721601 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.210970152 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130131403 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09825215 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199219205 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238726873 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112003788 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193111389 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126786514 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105304737 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085299852 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149712861 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136462506 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142630394 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105621388 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150993622 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224112379 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07157232 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117731664 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16178963 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080039494 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103868712 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135102194 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122528493 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.091712323 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.123463841 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.12952292 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16315002 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148817425 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130806394 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148121549 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121726905 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215273594 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11088187 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102011713 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126240005 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.091220791 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.161676144 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187716466 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101614753 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221149408 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164247599 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122383209 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15486077 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080742744 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164928629 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101507379 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068199279 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193340707 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145326458 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133984851 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.181259015 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126938056 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.151503062 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147525345 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15548762 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181708155 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.158596169 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130242185 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090750113 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143312045 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149177308 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095215037 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.112043037 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080431842 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127205808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117568722 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080716597 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193436721 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152929355 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095160787 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142747262 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119737122 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176177163 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.099854566 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15409502 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.155261853 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117344177 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.208746757 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186397559 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159672057 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122525701 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197102107 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068478035 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070732449 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.112583595 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164099683 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10589444 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079757832 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165120187 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177941743 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162408307 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186088377 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105938053 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145882347 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209913578 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067959358 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140824353 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175195379 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148336572 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.151043361 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109193378 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09656583 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197266824 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100906517 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268107854 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15153548 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159908939 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214485584 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101855573 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103143063 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129471601 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162496136 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126765095 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175184949 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12611969 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112150705 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143581614 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078500822 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123052286 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15033411 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140904663 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196189271 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.140100466 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156104698 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099499235 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13966533 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147988901 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145175667 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.060644861 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152631085 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215726204 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11806865 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15190325 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208227136 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076938399 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.148805857 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233544973 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205460235 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082251789 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130891063 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14598859 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154160541 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151780921 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190727095 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106367864 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196615681 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134609959 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088384339 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110785705 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096136906 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129395221 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119259669 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13443195 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.140669813 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.116584296 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15716086 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134347154 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134661792 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152988104 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094635366 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.114109681 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119865622 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203425827 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169187838 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203505476 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123549635 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.199509401 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222054742 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072399215 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076654504 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.099199643 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164766455 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107573955 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158797788 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.118380548 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098291463 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150300097 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193306136 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092115147 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.090993719 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140102958 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157586006 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126850761 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0953589 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.128803357 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218288256 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127204812 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076136686 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148371777 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123311231 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124786768 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231425543 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.059177294 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119303499 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07344374 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076649498 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179255297 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183034922 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.106983229 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.127765176 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149318079 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170276761 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155430193 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123344189 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09535707 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136168452 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198158089 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153278925 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086406305 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135929631 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186453852 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185689521 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128856722 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.118398232 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223543572 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182230447 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22076261 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.111330151 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150725447 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152204769 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139897616 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169827023 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106576485 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221650314 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081099203 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205637716 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100604697 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114657714 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151018801 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.119495519 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110555716 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176916154 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141941515 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105214914 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073717253 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13594957 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146732886 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125979967 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.071837907 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189491618 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.069376496 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186982644 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198340351 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104864014 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104209717 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124515114 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100426101 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128772243 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126642216 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085172737 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139270434 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224254912 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093064542 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204613255 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166351444 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137633249 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199721015 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122557667 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.659964677 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077363281 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209775273 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14169154 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165795789 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122326423 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154430303 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141542756 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146370091 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167809237 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128264619 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.200069449 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156658161 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.144887562 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102008023 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126909698 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133450332 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084778118 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129756758 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148804088 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137040993 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122629492 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.14403504 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149757227 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10531274 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092291922 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213162048 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14268501 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195132689 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167026522 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081763798 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153673378 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192937018 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103292374 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.148561438 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184192865 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130864156 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123431313 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.104148114 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103741457 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224996512 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095724874 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187735707 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148449919 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140320212 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148378566 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.168809496 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15797184 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129472619 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149247312 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113963234 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145981745 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140218229 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108000368 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076811131 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1298462 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13687286 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129267499 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099634444 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141220502 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180762353 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093993735 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117678474 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100098151 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19469033 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233367863 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09395926 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107000039 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141181532 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137233843 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.140271593 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150096187 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074150602 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106085795 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108922064 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.110311647 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.132256328 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138615027 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126095088 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145074093 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195481001 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.107523126 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.247908775 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092329745 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132937016 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06564038 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103295639 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118206169 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093250706 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126653235 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122128292 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226000677 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094352887 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11415865 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112340471 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070937664 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080895566 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18059088 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13551849 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144863362 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093223235 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086029867 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129850545 seconds)
  done (took 69.474984054 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134842489 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.100959936 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116297463 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.169757673 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143537575 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.357876171 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.177069303 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219468442 seconds)
  done (took 2.468312237 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065547147 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099793855 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099188764 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.111717277 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063678613 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.089126789 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295432529 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.105369964 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063588307 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087476131 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.138884819 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065958611 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.461935192 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061892434 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.090879958 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080850341 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064433874 seconds)
  done (took 3.085352368 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.42642341 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622470935 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450155618 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.069625116 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.81815541 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.102931541 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.288951676 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.157411771 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.086913367 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.421872182 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.722561829 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126803511 seconds)
  done (took 17.33937557 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071309486 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.065113264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106087615 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.080703279 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.068723728 seconds)
  done (took 1.441511566 seconds)
done (took 111.473877236 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076386368 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.357564365 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.049626157 seconds)
  done (took 1.4847692 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.080620512 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081968438 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10794906 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.080022322 seconds)
  done (took 1.407309894 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07100461 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.072718334 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107718741 seconds)
  done (took 1.30502418 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279661786 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138577002 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.112867979 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080140667 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.073527486 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10004441 seconds)
  done (took 1.304758183 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068725005 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071092565 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095056352 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.0733401 seconds)
  done (took 1.35548378 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073000417 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.04878585 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.051297137 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077769759 seconds)
  done (took 1.304127464 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086303091 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.076047296 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10275551 seconds)
  done (took 1.312988938 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103887714 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.108055639 seconds)
  done (took 1.26577318 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078551595 seconds)
  done (took 1.127386486 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08840301 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.136596559 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.147692188 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.103737025 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151863617 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.128823154 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.101169752 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074551917 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071165163 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.102468573 seconds)
  done (took 2.16039351 seconds)
done (took 15.677928009 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074499182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.383330996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358439101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086708118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70235208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35269852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003722877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088265198 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130720396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063756556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106003949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645362339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.993213809 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.315870134 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.979301541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.409779561 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645673773 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090603464 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063968741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063762965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.988400538 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063501956 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090167932 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064666523 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645367847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392920223 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064682737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.439541013 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064689686 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067098715 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376337624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064571737 seconds)
  done (took 15.924838386 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06665977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13949725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07059649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079496812 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.093400796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065709526 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093168143 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066164669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142005502 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064923735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080295872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090424848 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068555326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090889529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083571465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064059423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09110185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064592513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064239466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090995243 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0819699 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090416189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064727558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064400545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.090415117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076428293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09112267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064905363 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064221314 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094631464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0666624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064979626 seconds)
  done (took 3.645661629 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110366469 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147921073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070564269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124608228 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.108590945 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093014274 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.165156989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089882528 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14638302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064822143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106662037 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064457943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124357777 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065109381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.082982731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.090857003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065430747 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089566352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0647153 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064496396 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109084687 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06448476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063977099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091237757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064714641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102957931 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06481273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064575663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090765246 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071313317 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092372262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064996898 seconds)
  done (took 3.949958243 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068360372 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071770251 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.104824782 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080249534 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066257069 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095077235 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068948787 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.092294322 seconds)
  done (took 1.712478158 seconds)
done (took 26.280550296 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075149213 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066308731 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.095805703 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.078159781 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069070309 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102089605 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063153588 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.097112267 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068981795 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068633275 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.098852068 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063770511 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067220252 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090710146 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070910321 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063957095 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.102000638 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068175221 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.101886976 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.076709881 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.092966741 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070253033 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070062223 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.101847729 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.076670852 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.102322644 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07357852 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069528754 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.091933302 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066840106 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073107013 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107405181 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.064829714 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.101757409 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064739214 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063891973 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.094826819 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06418868 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.1018692 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075255287 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066766942 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101074944 seconds)
  done (took 4.438413744 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08521986 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0888744 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109313447 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.058356966 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090814328 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.05896697 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085851258 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.083532001 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058953579 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085061594 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.078309831 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05477348 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.056305755 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076787735 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.054203604 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053297954 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.056491813 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.079501095 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.054439993 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.055186451 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05667774 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076931205 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.056458018 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.055819164 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07907301 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.058983531 seconds)
  done (took 2.870465975 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072859625 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.078133079 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111282157 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120601248 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.129494612 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.073030953 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.101388548 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.082618212 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109213829 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064424461 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067898977 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.120957274 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084156185 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.097712137 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06813994 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.078405093 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.103070362 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067111572 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069952883 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112543729 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.080585517 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101145189 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.085167461 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.075063986 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092235892 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066613053 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096930606 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078013154 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069952762 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.099873029 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070361125 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093626551 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071970391 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075480098 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.097304901 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065891761 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10998465 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074121108 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.073029797 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092366913 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.067776891 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066725902 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11344801 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.108252052 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092786377 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070894844 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094331606 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074435901 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065143687 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11059245 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075303703 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066205068 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.094358327 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065477302 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065040901 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102209594 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065842441 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095967487 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.072206679 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.066481782 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.103970008 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068385141 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105712767 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065822676 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.070476516 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092111145 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065243293 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062611261 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114528176 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070915917 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.131387987 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065608568 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065639833 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100585511 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.071206276 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101160605 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065179129 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07928229 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101600707 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06801376 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100719532 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06887363 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067154599 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.109864415 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067905488 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066239013 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093000171 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069947931 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06691214 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.092667863 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078087049 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.089973433 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067596744 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076899088 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093239106 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064858406 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070618894 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.095921594 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063898048 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102820721 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069313269 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064451453 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.100745226 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065580968 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.093919319 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076287402 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069160746 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091226554 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068738483 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070001004 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.092217844 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066920875 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093679256 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066358227 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073008817 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097575027 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068710771 seconds)
  done (took 10.795452255 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.188455513 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.1807804 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066928214 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.174348671 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072430379 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.104539101 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175503301 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102047626 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.092213998 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065877759 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06555572 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.14910183 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.136096276 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1521943 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.076392589 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063718648 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.108652168 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.147888205 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.177264098 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.171344706 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084519793 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072396564 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.09478271 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065645367 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071253585 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.106623669 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11369038 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073169593 seconds)
  done (took 4.234179274 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077979044 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.120363617 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070569145 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.081446046 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115321448 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064696349 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093671367 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06676471 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.076055334 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.103655979 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064324306 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.096553439 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071247341 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097378779 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06579861 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070880743 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.098976397 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066584099 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.066882554 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095917028 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.072225036 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103097421 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068170371 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063402838 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.098327243 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063138756 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088448547 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081365875 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091336952 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.083422332 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061996993 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098631651 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.07592559 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.0645666 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.091967387 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063982885 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091364138 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06432478 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065705611 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090599224 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063704243 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.054297944 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.091143323 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077147345 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.071441111 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.083910268 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070762877 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097138292 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07101566 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062756306 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.094556631 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067648317 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067484993 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.099463221 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070524062 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069504313 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092958613 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.063000808 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070659766 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.09154225 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.061405774 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.063458182 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.096731894 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.063425527 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100743164 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069847849 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062616421 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.09276895 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.066704269 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.071077948 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091556162 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067426554 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06214119 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.09432478 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069075565 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06873598 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092526258 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063065212 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091363362 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064963803 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.052041579 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064142701 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.078067315 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067436933 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062797574 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.090236764 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063651524 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.097202059 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077588098 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095768671 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07108322 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064958229 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091040994 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067498874 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.056887091 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095100588 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07876201 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.106606269 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065054318 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062892924 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104966893 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069105232 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063370494 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080268507 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071663364 seconds)
  done (took 9.278022403 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.087926307 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088788291 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093983211 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.078252251 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.117415986 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086419122 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099214097 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.070730731 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066121756 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109582774 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064884066 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073589334 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.0929692 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073232923 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.115869916 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07284927 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065801518 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.101799879 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070052236 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.128473405 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.078242269 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078666187 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.1028741 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065451043 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.069418317 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105404158 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088035899 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.104115592 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.074412663 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.078563991 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.103031518 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088182939 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.108163299 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.069344544 seconds)
  done (took 4.065788569 seconds)
done (took 36.73539484 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.155971399 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.350386042 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.132055338 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.265868575 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.139606688 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.160713705 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.144072756 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.137955148 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.52063254 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.133056246 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.392009618 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.748057795 seconds)
done (took 59.358872489 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.212887927 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.270694459 seconds)
    (2/2) benchmarking "String"...
    done (took 1.401500646 seconds)
  done (took 3.750221956 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.544581253 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.096689513 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.408694807 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.1315717 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.131697811 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.570689012 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.697240939 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.963161203 seconds)
  done (took 27.076621116 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.134804776 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.497771324 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.462788078 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.46555265 seconds)
  done (took 17.640216851 seconds)
done (took 58.302755913 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.12482084 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.171990445 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.140741118 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.11657066 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.235866594 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.156247699 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.414804245 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.378682309 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.131808004 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.122885677 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.149179119 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.135324996 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.131549645 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.399970248 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.132368074 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.130677924 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.219243801 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.653251178 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.506818469 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.141711958 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.149683981 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.150809882 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.136349489 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.134627812 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.147440053 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.142941641 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.135191673 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.140611522 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.350601558 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.138410873 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.221004149 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.567898843 seconds)
  done (took 189.089304337 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.132837898 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.319360462 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.375328262 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.189671483 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.715451898 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.330976437 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.266286618 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.652204996 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.150854781 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.141915713 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.436739647 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.132750311 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.495116335 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.117823344 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.143660648 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.232763745 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.337706592 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.473344982 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.148066199 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.403976427 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.146469119 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.421030759 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.486875736 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.381884888 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.164309707 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.158358221 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.15074423 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.176719167 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.323100745 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.280066005 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.141874892 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.156477642 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.702255713 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.991657799 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.158235405 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.154981723 seconds)
  done (took 148.272743698 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.413414347 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.133177631 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.133144773 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.133522094 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.162937736 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.133214432 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.655477062 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.665464101 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.646920262 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.468773172 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195804783 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.335352813 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.134434493 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225264524 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.147722693 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.133881769 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.133835927 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.149981905 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.159972827 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.1370175 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.13429856 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.133805329 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.65801887 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.148511509 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.140266284 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.134645824 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.163833129 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.528487706 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.283907697 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.137512122 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.163539659 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.449430332 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.17784321 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.134599681 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.404277048 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.677591876 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241567053 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.136444865 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.163654594 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.134888288 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.3998413 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.134825038 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.13602048 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.138625063 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.694161479 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.135563414 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.658534603 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.13847768 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.013227595 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.135495907 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.136148423 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.340722507 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.564012771 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.135293621 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.135407161 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.137309474 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.135578519 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.135800364 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.164013733 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.296626772 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.232943958 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.135443567 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.13954 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.164429901 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.135933762 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.277377453 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.135249425 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.780187112 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.193162649 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.252938027 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.653907614 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.139182337 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22768683 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252339266 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.132880748 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.133577878 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.137236346 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.133350747 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.24080804 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.132595321 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.518582419 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.140518438 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.138910534 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194202102 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.225459124 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.135525293 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.13523649 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.422781391 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.136175691 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.134756852 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.795481653 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.13419029 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225681749 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.133481273 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.13398115 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.134601456 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.515752463 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.646546084 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.290989795 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.134553397 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.332667849 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.133862193 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.527305949 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.624652369 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.68669151 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.135513774 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237843091 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.136510332 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.137748653 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.133954265 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.164165345 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.135187822 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.192643217 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.137697218 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.530557853 seconds)
  done (took 337.09142643 seconds)
done (took 676.946777027 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.730692901 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.725711809 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.827243471 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.720019492 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.683454061 seconds)
  done (took 9.767758655 seconds)
done (took 10.848054301 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.330709259 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.313280289 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.192651983 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.327579385 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.162124697 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.327313564 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.292843898 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.157749737 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.233035141 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.203430444 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.228697176 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.181431865 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.162926669 seconds)
  done (took 17.196682544 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.439870148 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.421094354 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.197644424 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.436438386 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.176567828 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.463045078 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.330328231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.33882271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.327310004 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.148366927 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.152066919 seconds)
  done (took 15.516247433 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.447096345 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.470875748 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.201769372 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440693041 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.17778684 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.446537418 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.331296993 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.334590665 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.330396203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.152184937 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.152506774 seconds)
  done (took 15.568917046 seconds)
done (took 49.365717479 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.145066437 seconds)
  done (took 2.227150054 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.179904833 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.343212567 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.161367611 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.150668894 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.144796241 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.148296883 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.150600717 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.151454462 seconds)
  done (took 10.515138731 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.146638462 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.143328034 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.145611515 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.1436368 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.146360101 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.147111854 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.147272264 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.146858563 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.148619775 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.148633619 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.147694964 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.14758071 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.146226317 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.148765799 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.147980195 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.145349546 seconds)
  done (took 19.432214198 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.14672449 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.148044942 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.145964633 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.144624249 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.143128295 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.14612757 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.146118887 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.145161926 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.145384628 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.144258136 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.145386098 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.14628787 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.147086998 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.14497471 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.145700613 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.144992643 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.146460403 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.146453571 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.15068254 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.145905264 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.14610716 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.145877029 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.146858886 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.145463901 seconds)
  done (took 28.590853724 seconds)
done (took 61.847839355 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.060669765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.66084248 seconds)
  done (took 8.804622816 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.147686533 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.150007924 seconds)
  done (took 3.380294708 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.147678144 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.148442602 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.146909218 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.148732081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.147588009 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.148392999 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.146513645 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.148239966 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.147933049 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.14713018 seconds)
  done (took 12.561962492 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.14783753 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.145510439 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.14650282 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.147410944 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.146705598 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.146138579 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.150428546 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.149522425 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.148243773 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.145408016 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.147329075 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.145725896 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.149392736 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.147417981 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.148114611 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.146671279 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.146603593 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.145808488 seconds)
  done (took 21.735172897 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.148755836 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.147109659 seconds)
  done (took 3.379685884 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.147189848 seconds)
    (2/7) benchmarking "second"...
    done (took 1.147569731 seconds)
    (3/7) benchmarking "month"...
    done (took 1.147737034 seconds)
    (4/7) benchmarking "year"...
    done (took 1.146451672 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.146016629 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.147366982 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.145383976 seconds)
  done (took 9.112998753 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.15137734 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.33710777 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.417988374 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.762370355 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.148474053 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.152659808 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.004291032 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.153666813 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.154550329 seconds)
  done (took 13.366945069 seconds)
done (took 73.425961433 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.132067664 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.140920178 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.022234506 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.145767283 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.15880284 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.44325111 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.183988574 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.273652282 seconds)
done (took 36.587070399 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.145736136 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.849900406 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.853878968 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.145511326 seconds)
  done (took 10.936130105 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.128065538 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.017837273 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.133541068 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.13159892 seconds)
  done (took 17.496752261 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.729276344 seconds)
    (2/2) benchmarking "read"...
    done (took 1.468426902 seconds)
  done (took 4.281503296 seconds)
done (took 39.945067786 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.149576853 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.153029632 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.146272232 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.149543096 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.146163775 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.147747449 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.145876338 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.14582853 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.1482884 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.149769585 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.152067308 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.149682591 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.14956598 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150919795 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147321602 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146439305 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150259842 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.147713311 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148343362 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.150101566 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.146273839 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.149289811 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.147353646 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.146986841 seconds)
  done (took 28.648146175 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.149207757 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.147814486 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.149579326 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.15108791 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.145901797 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.148635883 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.1487285 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.146617789 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.148914593 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.150068967 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.146503165 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.147540103 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.150047626 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.148263182 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15039238 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.146162835 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.148409768 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147506481 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149345141 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.147259081 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.15055203 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147044108 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.14645816 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.149574954 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.146143756 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.1475665 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.149298588 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.146807864 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.148928223 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.147466543 seconds)
  done (took 35.532738637 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.153169971 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.157428681 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.150469878 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.151247079 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.14953286 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.14979611 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.150475657 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.150128414 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.148854211 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.149562666 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.149355093 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.150552346 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.149523042 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.148630686 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.149229804 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.150295359 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.150829961 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.150200009 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.150152194 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.149010308 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.150114311 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.150062909 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.150376499 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.150043807 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.150452852 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.150677456 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.150571399 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.150946744 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.150385413 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.150411318 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.150521668 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.149915068 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.150854801 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.151990816 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.149840559 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.150284186 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.155316617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.158060793 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.151041666 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.149154289 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.151177652 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.151536529 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.15179807 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.151648826 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.151562721 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.150799853 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.149602644 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.151779562 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.150907776 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.150783562 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.151615221 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.151433832 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.152012899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.151092226 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.15356756 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.150674712 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.152525338 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.151840016 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.151460558 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.152069647 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.152567702 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.152332031 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.152334124 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.151927 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.15261502 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.153285937 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.152302971 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.153151311 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.151523485 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.152423114 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.151374694 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.1526572 seconds)
  done (took 83.973570294 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.150877104 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.150860933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.149178388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.149472398 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.149009738 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.15164304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.148484129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151995804 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149123203 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.152023758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150984196 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.149730562 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150487183 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.151970906 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.152379355 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.149678707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.152302128 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.14904605 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.151529042 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.153313132 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.153104098 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.149082034 seconds)
  done (took 26.403177268 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151892514 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.151573538 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.149337534 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.152240118 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.150435617 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.152287544 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.153307949 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.151445919 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15226921 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.150619054 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150065901 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15253997 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.149515483 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151515997 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149044236 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.150519753 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.152033984 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.149851873 seconds)
  done (took 21.807292509 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.150124192 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.150614393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.152530372 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15037544 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.150047935 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.153867162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150575229 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.153407907 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.153567104 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.152985379 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.155369945 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153676703 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.15235269 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15224023 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152885486 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.150417586 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.153249676 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149091651 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.152371916 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.150035789 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.149567714 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.153031238 seconds)
  done (took 26.430430663 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151796831 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.152617133 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.150149313 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.149963142 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.150604693 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.152742146 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.152507682 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.150304287 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.153309463 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.151431265 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.149288932 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.154077147 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.149040332 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.149447049 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.149621283 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150570487 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.15283738 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.15083225 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153373832 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.149590454 seconds)
  done (took 24.11249875 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.153553895 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.154279696 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.153689158 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.15413455 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154742294 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.154975712 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153715321 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.154127216 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.153317709 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.153829499 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.154318338 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.156368516 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.1543144 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.154181307 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.154733306 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.153603059 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.154128701 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.154938576 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.15430927 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.154237316 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.15479267 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.154765084 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.155447607 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.155688473 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.154794884 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.154029968 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.154981392 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.154879567 seconds)
  done (took 33.413742117 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154352057 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.154279694 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.151902256 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.152354615 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.152224759 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.151286067 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.152021182 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.15240735 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.154790206 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.153089577 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.155676165 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.155431094 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.155187516 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.154842506 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.154442346 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.154698068 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154130306 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.15206322 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153812596 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152542831 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.154296396 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155229377 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.154282499 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.151274394 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152873788 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.155304643 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152364741 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.152581749 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.154925448 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.152416614 seconds)
  done (took 35.697591168 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.201034726 seconds)
    (2/2) benchmarking "in"...
    done (took 1.200099599 seconds)
  done (took 3.490175216 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.153267071 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.156359064 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.155691151 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.153101296 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.154057205 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.155986543 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.156588486 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15320012 seconds)
  done (took 10.328343006 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.155202613 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.155959352 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.156625803 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.157052546 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.156765159 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.156427437 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162660202 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.172211277 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.15610544 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.156841579 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.160875503 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.16441543 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.158675248 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.156053628 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.15628711 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.158039311 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.156520394 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.15808733 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.156386065 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.15681015 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.157137925 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.158379113 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.15850223 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.154395493 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.156941954 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.166308691 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.161318562 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.157735815 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.15640137 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.16113543 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.154907533 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.153817965 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.157538609 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.157226248 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.156753649 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.157916383 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168132356 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.171375236 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.163481852 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.158998756 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.158297041 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.154218906 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.159309225 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.158252782 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.158257175 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.158956143 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.15798527 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.15455476 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.155812883 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.159562881 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.162882498 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.155617376 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.154240201 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16143585 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.161033473 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.164878921 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.172945249 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.159472765 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.166685775 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.168144699 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.170128647 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.166026623 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.160528956 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.157768487 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.166195733 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.181399399 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.164861706 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.172005335 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.156357195 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.158644162 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.16522761 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172906632 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.167619817 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.159249546 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159819116 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.159955157 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.158314196 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159764073 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.165728587 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.178199299 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.159397911 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159983188 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.168199742 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181607875 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.158019178 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.160319465 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.159855677 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.159050175 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.160674788 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170578153 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.17393865 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.160022044 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.158515794 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.158645192 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.161757166 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.160252061 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.158961974 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160689733 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.157659244 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.160701524 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.160836123 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.162536966 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.168805626 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.160180286 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.160079532 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.17045945 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.160710372 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160372245 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.16711982 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.161289559 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.160506917 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.160233627 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.166044362 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.159689249 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.164136605 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.169185003 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.161216272 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.163552655 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.160549698 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.16128937 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.170561331 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.187965035 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.163275949 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.16113279 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.165880522 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.17292684 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.161783137 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.164777473 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.162510152 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.15997495 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.158984004 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.162498073 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.160993633 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.161068769 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.161984369 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162276344 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.159642056 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.161636977 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.162975952 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.162368574 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.163153383 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.161730639 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.163043171 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.165136766 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.162559399 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.163771661 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.168841288 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.163179721 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.162571242 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.162895964 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.160498304 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.163587564 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.16370119 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.163488514 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.16137736 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163025309 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.162430806 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.164005902 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.164281648 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.164786542 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.163343546 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.163867764 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.165452902 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.163429036 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.16715651 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.16197856 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.161074911 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.163674465 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.163304903 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.164109301 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.16341157 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.161796265 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.166786418 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.172053424 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.165356166 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.164184022 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.166721835 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.165153165 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.163687591 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164070061 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.165953526 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.171981187 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.164246524 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.169946447 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.1647941 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.163997176 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.164603926 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.164536761 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.163490286 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164609746 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.167019205 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.172763407 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.176354123 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17476501 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.165841213 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.168872342 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.165915532 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.168708803 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.167875363 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.165485822 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.165441896 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.166302649 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.163616852 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.165101586 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.165697105 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.165816776 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.164567648 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.164594177 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.165782564 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.165949622 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165641908 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.165181548 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.165340204 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.163687111 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.166142427 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.166638064 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.163907129 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.16414862 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.164440172 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.164170534 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.165914442 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.16653472 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.172965844 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.163546043 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.166505451 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166592544 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.164631069 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.164402982 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.165703989 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.168140035 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.166100734 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172854612 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.181853488 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.165714589 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.173282924 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.179742171 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.166541322 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.169093474 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.16809518 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.164838131 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.167483087 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.174874406 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.16746437 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.168060271 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.167240869 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.165874604 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.167417774 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.173096662 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.166161114 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.166852475 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.168181728 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.169047659 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.16405617 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.168696768 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.167900769 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.168290192 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.170119143 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.16889032 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.169096193 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.168716616 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.168564205 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.168949498 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.168677781 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.169845008 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.176325384 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.172454701 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.168034095 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.169751825 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.169562168 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.172112479 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.1678692 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.168498375 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.16774677 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.181087808 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.178535064 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.175804809 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.169163466 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.169649421 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173925921 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.170213802 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.172366198 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.168679606 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.168137757 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.168034987 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.168216486 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.167949041 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.170004147 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.169733722 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.170305163 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.169574472 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.174067866 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.169545888 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.168166028 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.169189061 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.168716697 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.170262973 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.169430733 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.169371111 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.170380082 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.171034196 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.169909635 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.16893437 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.175936786 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185130765 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.170836702 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.167703304 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.169468318 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.169331755 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.170386645 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.169640217 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.172674554 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.178134077 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.172824623 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.178413158 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.171094015 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179333537 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.171100564 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.172041822 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.178900211 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.16892626 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.170075929 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.17056199 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.170522344 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178234828 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.187141881 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.171463685 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.175624369 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.171414233 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.172022104 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.170647865 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.172314462 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.173011385 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.172226489 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.180248154 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.186486603 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.175516601 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.173198189 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.169034947 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.171475225 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.172148433 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.16896677 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.174737317 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.172518059 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.171863862 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.171261102 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.171971091 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.171668176 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.172125727 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.171692641 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.170082964 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.173516131 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.177984503 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.18675756 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.177055446 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.172514616 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.179973056 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173057321 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179872361 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.187506963 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.173133512 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.172913726 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.173004067 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.173861828 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.172655234 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.172607179 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.17347038 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.173621002 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.177559031 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.173388364 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.173956316 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.173075471 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.174845265 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.171858066 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181993232 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197619084 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.174740681 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177875963 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.172018854 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.173536473 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.178670393 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.173679678 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.172661385 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.175329447 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.183605944 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182533436 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.173713396 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.174262086 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.173201047 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.174461899 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.174328134 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.174270804 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.175189786 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.174523779 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.17392583 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.175065362 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17741723 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.174843397 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.174637733 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.175505477 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.17496413 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.183592436 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.175411355 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.176029153 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.175884506 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.174380694 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.17511658 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.175326964 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.17525391 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173917152 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.176081751 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.175618163 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182198941 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.181544487 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.17815317 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.174660873 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.175343056 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.174829558 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.175739271 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.17561414 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.175970766 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.176356388 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.177570907 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.177395942 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.176996374 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.174297191 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.176062721 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.175357685 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.176682475 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.17789504 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.182817557 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.175850566 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.17480533 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.177030574 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177146982 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.176028253 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.177013493 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.183448564 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.178410087 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.185822067 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.184257769 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.182015341 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.17619101 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.180672725 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.185537485 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.17537417 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.177534778 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.177080968 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.178863082 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.178079481 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.180072908 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.17715909 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.183760657 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.178515597 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.176542191 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.184299 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.193596647 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.178703163 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.178613874 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.180734952 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.178574382 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.175641653 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.178630964 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.177123911 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.184862702 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.195039555 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.17926406 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.180705 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.177206147 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.179770389 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181612358 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178725323 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.179277073 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.177073519 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.178480508 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.178500463 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.179566545 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.175430748 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.177533155 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.179033535 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.181368959 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.184776224 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.176155742 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.180496351 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.178332685 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.179542916 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.179376471 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179547453 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.177343968 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.17668448 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.179286089 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179142742 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.179433387 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.180545856 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.179101883 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.180575785 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.181738636 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.180477521 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.181807838 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.190209777 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.188689363 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.178271217 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.178403711 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.181187628 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.183775193 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180417325 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.180649206 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.17993383 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.181648686 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.181430015 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.179982626 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.179978968 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.183303016 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196794754 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.195491446 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.18119772 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.180196575 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.183614119 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.182071504 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.178788754 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.182294322 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.182848792 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.183586023 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.189297437 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.181764641 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186996068 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.196265263 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.181314017 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.184833075 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.182438772 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.189619283 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.184120816 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.180728031 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.181119781 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.185397122 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.197497913 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181255022 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.190044545 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210957798 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.196570575 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.182777248 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.182930699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.179863872 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.182575146 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.182472289 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.183174328 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.182995897 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183489979 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.182683648 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.183093719 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.18809442 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.183471194 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.182829063 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.182687785 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.181670558 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.183274082 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.180599608 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.182770899 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.18434182 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.183690275 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.182615198 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.182591892 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.181978161 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193868715 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.194302189 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.183714019 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.18335588 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.18035 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.186111189 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.184242423 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193217727 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.191550038 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.184264637 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.18400739 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.184186812 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183378103 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.182172157 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.183564663 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.183678071 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182616761 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.180979292 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.195305427 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.194116978 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.186665247 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.184491764 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184860689 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.185032131 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185887515 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.184994799 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184727266 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.184519247 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.185864956 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187340925 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.185156766 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.184262615 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.186490353 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.192539281 seconds)
  done (took 699.659982521 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.18243582 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18312546 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.18249367 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.182458807 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183835384 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183084371 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.183280011 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.181637435 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.183332524 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.183758715 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.183602486 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183701671 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.183013446 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.183137759 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.183319642 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.183843858 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184052723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.18369407 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.183231122 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183811879 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.183931453 seconds)
  done (took 25.96694779 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.185595002 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.182431186 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.182677487 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.186492258 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182273879 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.185326129 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.184071207 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186267966 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.186087937 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183873291 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.185482031 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.185790192 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.183949384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.183881641 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.182640672 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.186326005 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.188067746 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.183706029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.18741683 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.184733235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.186108575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.184285424 seconds)
  done (took 27.186947799 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.186623259 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.186478811 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.184629425 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.182962825 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.187035183 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.184595 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.185955271 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.186744812 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.186698547 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.18647503 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.184778054 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.186990451 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.192732893 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.191898896 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.189143082 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.187966629 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.330759212 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.186977124 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.186835746 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.187394286 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.185313374 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.193654158 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.185673771 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.185547611 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.186636275 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.188046925 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.187291379 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.188156064 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.188570603 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.187762644 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.19201156 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.189003662 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.187025775 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.188846634 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.187276371 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.189058579 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.191816158 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.188085068 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.186738647 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.187916277 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.197788127 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.209436157 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.189475401 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.194673962 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.189423414 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.189293183 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.191996506 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.196524155 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.186505589 seconds)
  done (took 59.515277477 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.189000216 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.18944712 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.188915573 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.191331674 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.192074776 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.190151076 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.189549446 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.189364924 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.18836833 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.187614176 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.189332022 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.187949371 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.186709848 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.188793307 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.190237045 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.187425826 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.187853703 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.18742301 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.187922631 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.186894548 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.188047507 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.189453599 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.19060897 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.188165981 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.190087635 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.188394037 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.187332415 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.190785527 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.188705118 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.188638665 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.191720055 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.190991496 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.190608632 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.189335152 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.188837291 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.189687579 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.190539201 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.188912115 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.190297097 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.188607522 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.190343162 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.19188518 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.19112813 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.191423917 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.188336819 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.188180835 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.187493748 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.189336852 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.189157322 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.191359629 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.191871871 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.189302729 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.192756054 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.188739642 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.192931077 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.19213127 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.189740734 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.190003785 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.190114951 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.188765162 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.18986241 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.191907715 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.190331341 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.191701043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.192147958 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.189955606 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.190317652 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.193433463 seconds)
  done (took 82.026202722 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.192021986 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.191866791 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192118397 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192380905 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.192515744 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.191742304 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.191863291 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.19296894 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.192829026 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.192478467 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.192018158 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.19259572 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.193233293 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.193543115 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.19345471 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.192764129 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.192837246 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.193124881 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.193688795 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193217186 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.193284485 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.193794072 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.192941028 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.19389061 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.193530683 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.19407125 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.193008266 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.194267133 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193230421 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.193934093 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193501202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.193433807 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.193949026 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.194543309 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.193648251 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.193287929 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.19400146 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.193861519 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.193933443 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.193238076 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.193863427 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19344264 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.193845638 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.193352064 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.193673754 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.193905686 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.193842768 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.194544847 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.195479289 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.194895806 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.194852253 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.19486438 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194218805 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.194737826 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.194511318 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.195919502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195159834 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.193840968 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19438171 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.195028198 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.194572477 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.194953801 seconds)
  done (took 75.132342824 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.194646213 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.194363439 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.192632129 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.193016088 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.195047956 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.193356089 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.195303205 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.195574605 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.196463242 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.195452343 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19563556 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192620343 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192289018 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196048924 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.192923917 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194027229 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193771521 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.193511393 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197187504 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.193452331 seconds)
  done (took 25.016296307 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.193240461 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.197259633 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.194249803 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195027631 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.196620473 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.195048081 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.197718621 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19654156 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194245122 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197336314 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197251251 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.197072257 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194853989 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.195655659 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.197426598 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.194450467 seconds)
  done (took 20.263039726 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.195315301 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.197616922 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.19708376 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.197135871 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.193451624 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.195164275 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.197392858 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.194793715 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.196495761 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.19729255 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.197705514 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.198676785 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.19769636 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.197513612 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.195566352 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.199221709 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.195710917 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.195848888 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.198262441 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.197372459 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.1957729 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.195002023 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.198458559 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.19886411 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.195486245 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.19691016 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.195995539 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.195658142 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.195578752 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.197118099 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.196191901 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.196640331 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.196360666 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.196080123 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.19920274 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.19653047 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.198777334 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.19874908 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.199043158 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.198713409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.199070812 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.19616933 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.198975784 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.198896505 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.196731315 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.199509559 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.196705557 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.19731772 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.197137194 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.196246015 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.199397731 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.200313346 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.199420746 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.199509335 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.199823922 seconds)
  done (took 66.982811535 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199068467 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.199299371 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.196800272 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.20053762 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.199922253 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.19698033 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.199458637 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.197877883 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197795432 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.199691058 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199611493 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.200185231 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198459008 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.201835401 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198939595 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200056989 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.198287801 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.198320965 seconds)
  done (took 22.716005959 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.198143592 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198437762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.201320416 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.19931058 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.198936279 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.202323808 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198890514 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.200601868 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201634965 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.199223029 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198640971 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.200545071 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200556121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.201841249 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.198936091 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197999472 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.202285767 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200643844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.198754577 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198870967 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.20131377 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20084244 seconds)
  done (took 27.533599894 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.200906309 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.199756135 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.214843268 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.241136276 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.230896873 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.199568681 seconds)
  done (took 8.421300404 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200329697 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201583159 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.199951888 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202874142 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202808617 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200359674 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200637583 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200123929 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202102581 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200321097 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200053626 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202662268 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202459659 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200158048 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202990372 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202889036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200106034 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200310223 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202217777 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201951371 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200353657 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20199045 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201176749 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200143552 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200834119 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201368868 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202782398 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200713423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200548065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204560503 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20370699 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201310084 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203409336 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201654267 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204804252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203197759 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201502647 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204196691 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204692415 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20192397 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.203225645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204023173 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205051837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202085946 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20397261 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203177532 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202917733 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204313607 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20452777 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205008987 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204439681 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202299494 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203734802 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204588297 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204743221 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203180278 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202628771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204756045 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202906017 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20209886 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206188602 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202760572 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203373243 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205827582 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202984682 seconds)
  done (took 80.508631756 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202315277 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.203304724 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20324216 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205475605 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202865068 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203636663 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203714693 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204078327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203117818 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202938372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206126265 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203252161 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203163538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20194568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203315447 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204072828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204668611 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202832635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204160869 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205597931 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203719149 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204112611 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203622963 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203801957 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204445131 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20476986 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203808763 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203276406 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203944637 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203794392 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202573179 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204259331 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204341474 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.20482367 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203772487 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204210527 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204333602 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20359352 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204823901 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206589431 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204163125 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207121804 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2044915 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203872826 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204836692 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204542016 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205188777 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203628909 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204671797 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20685575 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206123694 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205653441 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204461739 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205701903 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204292781 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204031983 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204808226 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205736459 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205918604 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207658495 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20427245 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205560691 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208662183 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205351706 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206484748 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205327859 seconds)
  done (took 80.635158567 seconds)
done (took 1632.486297586 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.206324608 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.277808182 seconds)
  done (took 13.62402126 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.36991976 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.322544584 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.205692022 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.232004295 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.203485665 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.229996488 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.218257706 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.202885636 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.206180452 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.204478942 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.203538787 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.391864192 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.259675219 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.203659442 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.204910386 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.29745794 seconds)
  done (took 41.100461855 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.231411853 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.212553275 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.310543538 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.225850392 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.232128036 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.373216261 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.258041495 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.209704894 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.357023789 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.246391523 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.583812797 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.230376268 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.211386536 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.209715187 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.224894209 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.373570128 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.427207399 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.586297189 seconds)
  done (took 27.644634126 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.59655522 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.211808238 seconds)
  done (took 8.949846064 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.203027212 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.224062865 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.244127719 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.225054237 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.21327166 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.237997661 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.246160116 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.242434518 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.227452921 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.22389265 seconds)
  done (took 63.430887884 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.225866882 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.211709353 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.211523473 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.210803753 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.20256429 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.199094726 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.208667563 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.205442289 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.38888169 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.317083992 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.222603514 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.219922461 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.210701796 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.213549267 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.20900011 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.247122335 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.342686626 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.208416452 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.208630483 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.217586014 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.212270342 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.293305379 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.246742395 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.208509807 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.319658311 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.392542276 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.210828678 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.221236805 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.340411052 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.208440594 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.210568942 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.213636835 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.213554552 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.76528556 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.699568711 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.218774034 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.231438986 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.220625568 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.210710817 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.339088225 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.212204265 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.217592348 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.203643928 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.664389918 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.361670032 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.315141139 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.329623803 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.209915177 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.214674508 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.270521036 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.212632869 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.212619467 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.241671762 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.924868872 seconds)
  done (took 103.393902812 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.207328137 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.698347095 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.371824655 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.220564374 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.974957418 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.929556902 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.202465397 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.452714116 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.269432711 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.204897081 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.522467634 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.675778082 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.208909728 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.281350599 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.808003638 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.238562221 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.210387035 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.490918188 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.204437554 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.213290599 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623136537 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.218200951 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.219036674 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.407552189 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.239412039 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.628593201 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.47547159 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.996899833 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.205080056 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.203783915 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.643769207 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.207028876 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.239576782 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.203907322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.46156489 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.520830562 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.497032885 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.208406496 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.207695658 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.204628447 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.258013996 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.627077141 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.508530615 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.205128532 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.216948912 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.642985873 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.20300139 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.212915076 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.211050148 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.423197189 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.669239205 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.207050718 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.493255834 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.207244709 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.551633066 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.278286536 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.290220237 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.658696383 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.205048162 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.669034587 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.206708175 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.208503158 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.206548096 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.210407027 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.207396683 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.512090416 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.456350675 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.213599777 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.516082867 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.635485721 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.20478234 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.714471342 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.495521033 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.253219763 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.599041432 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.206860477 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.323561439 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.655650503 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.222737246 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.205478095 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.499610594 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.20613871 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.507349438 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.221400294 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.204845563 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628645295 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.22300935 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.259212396 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.207412048 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.205978843 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.41199778 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.212762927 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.466568104 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.259410861 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.207688514 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.208023067 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.220654126 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.205228974 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.206539423 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.209248888 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.705254775 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.211290804 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.209629938 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.222163803 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220456481 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.220261246 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.209563482 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.206345626 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.439866345 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 4.204363441 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.213820294 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.210631301 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.206375302 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.212191789 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.670182366 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.215804048 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.48024348 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.209489291 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.21805133 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.2081135 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.969167443 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.249698975 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.207843602 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.20999517 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.457187313 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.414143238 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.225352741 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.220025225 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.210160717 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.217189067 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.402334414 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.210067791 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.273946976 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.210239814 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878725301 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.241490417 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.223430555 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.323883782 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.219720722 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.212988978 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.214015068 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.2123298 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.533022649 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.469272189 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.385258056 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.212951474 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.208301121 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919519858 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.245360011 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.354625379 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.22730164 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.211366029 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.407830465 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.26096762 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.212138552 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.754867155 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.21077349 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43727235 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.210711489 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.528685454 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.674497943 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.212440647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.218845195 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923679966 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.258438732 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.99726767 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.21576027 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.525924609 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.209448375 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.64959097 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.21235984 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.21062879 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.234017885 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.214274373 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.211894164 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.2114912 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.213452608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.569685518 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.385156893 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.801527278 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.219607501 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.638682435 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.219645103 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.21915874 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.213570685 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.215877171 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.565622279 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.230758282 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.214885148 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.272095027 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.213371684 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.217585831 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.650674007 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.537823772 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.213854082 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.365234673 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.814132877 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.213452375 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.213609236 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.347164031 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.930630242 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.727854521 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.28297827 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.490452424 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.21632603 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.250587482 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.922650285 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.259676561 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.694148547 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.218115034 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.21438082 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.828682822 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.214653041 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 10.226120867 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.212472253 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.213635119 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758398144 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.21346314 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.218308923 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.411912905 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21261169 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472201184 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.214195575 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.224461609 seconds)
  done (took 1094.980562061 seconds)
done (took 1354.26421105 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.215350377 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.216073739 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.204350836 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.216359924 seconds)
  done (took 26.006276662 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.227120287 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.221656541 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.223682562 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.220523635 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.225168119 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.222768074 seconds)
  done (took 8.496100861 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.269546291 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.215481862 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.216606084 seconds)
  done (took 18.856440073 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.412164987 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.373170124 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.541760739 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.235756725 seconds)
  done (took 9.7175678 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.22357887 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.223957093 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.223927674 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.225766389 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.228927866 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.310600658 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.228255924 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.227109785 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.229906589 seconds)
  done (took 12.276895309 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.770776295 seconds)
done (took 81.276855883 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.623124609 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.217645075 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.318604272 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.82206286 seconds)
    (5/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.216416358 seconds)
    (6/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.720405199 seconds)
    (7/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.031472506 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.214572371 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.070015326 seconds)
    (10/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.342593757 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.217884678 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.741936286 seconds)
    (13/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.406081803 seconds)
    (14/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.897403101 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.476715009 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.472319861 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.741689964 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.259197741 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.243408492 seconds)
    (20/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.213092466 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.588628314 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.93728879 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.811037288 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.884121495 seconds)
    (25/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.21494751 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.450121295 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.459302129 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.340875029 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.245767163 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.423942475 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.799357761 seconds)
    (32/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.394436858 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.929223233 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.346858932 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.65205918 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.600157079 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.434628361 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.234685808 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.243215659 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.220069856 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.206625078 seconds)
    (42/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.270920729 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.354069615 seconds)
    (44/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.381074329 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.77531833 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.186925478 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.625788012 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.332646664 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.315598165 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.565996571 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.279240529 seconds)
    (52/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.475870044 seconds)
    (53/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.315380093 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.499141734 seconds)
    (55/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.547378604 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.326946897 seconds)
    (57/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.283525028 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.246156555 seconds)
    (59/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.246557562 seconds)
    (60/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.211062872 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.275760006 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.284501918 seconds)
    (63/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.221539638 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.218354939 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.268669913 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.000220541 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.001990304 seconds)
    (68/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.717098543 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.247308508 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.21155484 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.207388673 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.243133146 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.222450123 seconds)
    (74/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.301695043 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.03153833 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.078174742 seconds)
    (77/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.893834622 seconds)
    (78/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.316469944 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.804632457 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.57109187 seconds)
    (81/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.294259367 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.38081353 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.48716181 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.260312136 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.720400228 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.220801611 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.348096332 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.539807783 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.590680073 seconds)
    (90/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.427304009 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.916584485 seconds)
    (92/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.374193255 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.05015571 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.770051587 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.526340049 seconds)
    (96/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.256046103 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.814239356 seconds)
    (98/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.733305619 seconds)
    (99/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.265436306 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.25800267 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.899275483 seconds)
    (102/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.761612305 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.98874694 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.439950171 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.735225675 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.22482351 seconds)
    (107/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.421378597 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.248962145 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.619989989 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.356937516 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.969820205 seconds)
    (112/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.761275226 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.324953479 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.231711258 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.420798747 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.338499959 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.652416584 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.244960211 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 5.442267989 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.214087197 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.674278019 seconds)
    (122/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.350027192 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.236884517 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.222828122 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.444392792 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.535422563 seconds)
    (127/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.490947983 seconds)
    (128/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.553201695 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.907149366 seconds)
    (130/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.906735593 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.206481839 seconds)
    (132/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.2445436 seconds)
    (133/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.30777534 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.223218961 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.731542683 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.248215688 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.242769193 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.264917591 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.490828632 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.283903728 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.90628514 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.488877332 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.511624924 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.198069184 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.242534684 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.992095667 seconds)
    (147/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.232102071 seconds)
    (148/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.252766909 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.326783176 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.759826975 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.270175683 seconds)
    (152/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.22398439 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.596525993 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.252468087 seconds)
    (155/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.327067696 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.922092097 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.208491016 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.253116027 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.251844477 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.954407954 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.215102508 seconds)
    (162/309) benchmarking ("sort", Float32, false)...
    done (took 5.195935645 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.904281534 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.811489723 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.26696948 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.767682846 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.25650699 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.731182247 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.297951869 seconds)
    (170/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.353404465 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.236983122 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.760931528 seconds)
    (173/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.41351816 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.550507574 seconds)
    (175/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.520140647 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.353134614 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.905510649 seconds)
    (178/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.665801175 seconds)
    (179/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.307944449 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 6.225057062 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.354624848 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.244680183 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.677334514 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.223556226 seconds)
    (185/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.527421048 seconds)
    (186/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.56920347 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.225556929 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.040909694 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.239140707 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.250897551 seconds)
    (191/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.563821288 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.241051644 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.54654897 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.225779878 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.382310557 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.269253279 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.668548443 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.507707921 seconds)
    (199/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.361288625 seconds)
    (200/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.239836215 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.535219461 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.252536185 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.685760874 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.336134802 seconds)
    (205/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.480734924 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.309130686 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.419444766 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.296987909 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.226554066 seconds)
    (210/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.40299884 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.52566528 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.230487269 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.404438506 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.396470063 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.215146546 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.907546069 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.495914854 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.43555164 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.037233323 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.245611674 seconds)
    (221/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.25445603 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.335804306 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.227345011 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.210949151 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.42659396 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.531256591 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.250171409 seconds)
    (228/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.964705805 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.995419438 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.251210134 seconds)
    (231/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.567866686 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.922018422 seconds)
    (233/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.745014084 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.331480469 seconds)
    (235/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.235845671 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.213643537 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.699958833 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.268656729 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.291355969 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.313333044 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.238605965 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.38420993 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.225269767 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.316304133 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.228065948 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.565260462 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.75643137 seconds)
    (248/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.345756672 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.228720377 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.225518891 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.281011496 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.301368329 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.06677302 seconds)
    (254/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.290645678 seconds)
    (255/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.213661427 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.104062723 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.336413803 seconds)
    (258/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.255155511 seconds)
    (259/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.375837979 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.488007639 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.497832868 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.362317692 seconds)
    (263/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.337234069 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.473160983 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.635932477 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.580301957 seconds)
    (267/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.24158777 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.230778404 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.464035163 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.588769864 seconds)
    (271/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.424046987 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.35454682 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.772676799 seconds)
    (274/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.229337984 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.264633853 seconds)
    (276/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.260527302 seconds)
    (277/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.334255442 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.886965504 seconds)
    (279/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.253479538 seconds)
    (280/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.621024588 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.986868519 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.224755833 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.41821379 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.628427499 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.242811612 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.637424524 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.232224043 seconds)
    (288/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.311609761 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.31384997 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.257008162 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.237187398 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.310577572 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.304658039 seconds)
    (294/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.99009974 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.340683449 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.025215267 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.315462885 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 4.241674421 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.256748464 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.235326538 seconds)
    (301/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.315360046 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.274281851 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.411635732 seconds)
    (304/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.732746339 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.265040622 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.257450215 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.072217584 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.329398319 seconds)
    (309/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.237441148 seconds)
  done (took 873.894334303 seconds)
done (took 875.051372999 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.265823545 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.260295636 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.243563859 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.265174547 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.35519272 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.273473256 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.255241204 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.246616186 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.292477311 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.293061545 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.242432346 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.271872137 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.245970369 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.244368059 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.243939161 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.25772943 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.15982035 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.245495879 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.261238854 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.255237831 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.260745425 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.243160714 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.29480653 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.272978624 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.249498001 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.24821907 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.248703827 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.263969631 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.356475373 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.248063121 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.247955334 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.255367862 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.159808348 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.243760326 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.240463901 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.26390816 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.255697778 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.254297942 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.24945379 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.277172697 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.515452052 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.244209536 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.246858389 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.246757939 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.246795338 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.250768563 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.246614595 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.252410951 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.259406179 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.259257695 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.489682451 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.25849542 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.248290887 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.247658326 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.257647409 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.245173893 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.25011341 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.261649105 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.266410578 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.262578923 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.153699778 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.250335856 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.249568778 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.262433121 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.253645959 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.531772224 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.240058715 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.251482977 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.50488282 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.250385339 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.532949919 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.252792947 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.249506019 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.261140193 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.278867924 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.15186281 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.239434971 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.24733716 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.255466599 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.245844297 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.257538519 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.261791834 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.251195919 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.248392223 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.26116508 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.27484678 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.25753516 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.249117731 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.25753637 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.265530477 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.25530563 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.258676968 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.25162336 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.244225542 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.257842659 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.251947937 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.251909752 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.250661463 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.252813218 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.261266576 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.507063167 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.262560624 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.246017533 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.246286309 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.248631552 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.261793695 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.50783506 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.24740217 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.27125556 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.296900216 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.250737503 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.14247376 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.250268549 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264672414 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.25895868 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.252878782 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.244955205 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.142216837 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.500336629 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.261438179 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.250840498 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.249212998 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.265629537 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.251282128 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.247100685 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.152513661 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.248294152 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.263230355 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.370502476 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.259771542 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.280222706 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.246789633 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.252401098 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.28308851 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26482927 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.28076898 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.253495287 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266469439 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.265132701 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.245700398 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.261505897 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.260304146 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.251058404 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.256804428 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.244387888 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.27919653 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.262621493 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.26272851 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.271795076 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.371395641 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.24838884 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.144999658 seconds)
done (took 209.80899009 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.308620114 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.237273123 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.344408788 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.246078003 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.344903857 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.340136679 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.243430272 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.243416368 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.243635708 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.660815851 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.243973222 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.245009858 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.245541208 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.243863581 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.328773772 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.246323823 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.243545429 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.623246293 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.245763304 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.337740828 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.242697461 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.244121624 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.246534965 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.682486483 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.240657745 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.241701156 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.33967784 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.246820036 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.653783729 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.23900846 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.241752627 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.654255738 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.358591263 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.262872678 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.255811082 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.253127521 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.344713051 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.259454512 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.329018987 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.329206371 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.346231157 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.284214781 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.240930596 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.245110239 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.24725665 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.247707764 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.244487563 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.274640357 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.245262926 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.24683456 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.625524485 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.257465998 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.254803311 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.244780922 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.245193076 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.267917477 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.245866379 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.249491265 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.359986215 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.248001554 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.311921601 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.685451921 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.660152605 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.24757278 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.247060209 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.246523877 seconds)
  done (took 143.083002569 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.343476454 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.31877776 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.382184737 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.246038086 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.29706388 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.383816969 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.24752819 seconds)
  done (took 10.399161728 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.254173961 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.248791674 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.297399953 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.297085539 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.24886543 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.395259108 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.247996991 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.259480184 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.245626571 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.30001765 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.250108754 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.251497685 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.256670741 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.248856475 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.29560296 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.25968615 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.363102891 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.25007774 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.2480167 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.402089144 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.248046842 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.257265289 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.300685788 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.261023309 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.252278013 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.254157527 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.828105483 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.250262695 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.247464052 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.250988095 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.247643406 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.288058583 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.250657756 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.245410818 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.248266249 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366257131 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.249951712 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.248168164 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.251159724 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.246236868 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.249665603 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.251888488 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.251984062 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.249544758 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.251609866 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.273561146 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.249994868 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.251148144 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.251185359 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.252770545 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.301022055 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.25211484 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.24871357 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.249133628 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.305906974 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.258027267 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.251345848 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.248810516 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.251679038 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.249715797 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.406423683 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.298472898 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.252375306 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.298661788 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.250354962 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.253590446 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.252217782 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.251612496 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306715503 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.253033369 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.30066679 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.248877467 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.405941177 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.274642658 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.253117929 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.255123573 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.254182968 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.251731114 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.249900377 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.256457209 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.249360185 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.25231107 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.256469591 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.250155896 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.251900369 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354960445 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36047134 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.250818753 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.263639011 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.259716483 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.250639532 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.306450876 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.253457987 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.25137584 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.303803837 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367852363 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.307970029 seconds)
  done (took 145.110465864 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.258423154 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.261713221 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.254108862 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.270244674 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.253797727 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.252925382 seconds)
  done (took 8.734264547 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.255307401 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.254108827 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.253561252 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.253650144 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.252375026 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.254964396 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.253731576 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.253753802 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.25696483 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.253560201 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.256326303 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.255921578 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.257997949 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.252783853 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.255483779 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.254252345 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.25513795 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.251385091 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.254171146 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.253647912 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.34853953 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.254417833 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.254605731 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.256771248 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.260287469 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.255599448 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.26270123 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.254775651 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.256617842 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.261657384 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.256609429 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.258133624 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.256280947 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.259971061 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.260113385 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.254914074 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258986072 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.258832694 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.253599472 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.257543621 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.257832605 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.255670904 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.255255145 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.258651884 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.257803357 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.26101871 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.262047268 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.26349433 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.257359406 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.258887795 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.258183294 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.256944387 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.257173314 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.258340753 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.2573834 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.259106391 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.263324811 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.257628783 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.25650567 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.256960642 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.257708235 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.258902109 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.258917746 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.260865198 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.26453224 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.259476877 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.258987075 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.260763952 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.257534933 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.256472791 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.259932711 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.255517459 seconds)
  done (took 92.797012632 seconds)
done (took 401.299883412 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.723413312 seconds)
  done (took 7.911548441 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.494932118 seconds)
  done (took 7.68550735 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.926406492 seconds)
  done (took 19.124691937 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.265113563 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.257320661 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.261632365 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.254576212 seconds)
  done (took 26.228764954 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.362479251 seconds)
  done (took 7.550135943 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.250398509 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.259573187 seconds)
  done (took 13.699806897 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.57730512 seconds)
  done (took 7.766804201 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.951895635 seconds)
  done (took 8.1496831 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.267701148 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.261747938 seconds)
  done (took 13.970470275 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.237925897 seconds)
  done (took 7.426629319 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.112419274 seconds)
  done (took 8.303480632 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.262933904 seconds)
  done (took 7.45425522 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.255302995 seconds)
  done (took 7.444965926 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.376286529 seconds)
  done (took 8.566118625 seconds)
done (took 152.470540083 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.251277867 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.250985764 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.252555164 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.249929747 seconds)
  done (took 26.193380433 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.291895324 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.29369894 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.293874003 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.303507398 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.295635487 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.291845139 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.285847663 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.284658068 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.303557987 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.295875621 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.295741843 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.295803938 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.293506644 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.285892362 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.29612515 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.295410612 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.304388971 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.293849161 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.284615359 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.296207191 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.261153886 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.303914196 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.297127656 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.262125435 seconds)
  done (took 32.197199293 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.458295872 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.330885029 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.413818097 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.314999206 seconds)
  done (took 6.708966982 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.312787204 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.31465022 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.325363985 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.364553583 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.3922721 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.323927694 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.2863548 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.282629313 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.268733035 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.313970636 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.389396647 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.330358671 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.401048113 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.260436466 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.448589982 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.260161337 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.261415614 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.312524589 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.364522937 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.377557928 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.261379476 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.312554063 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.317237474 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.330581339 seconds)
  done (took 33.004217468 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.259874827 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.267791095 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.265633398 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.260737001 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.260026476 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.261766391 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.265862239 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.261728589 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.283156967 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.26112201 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.258566951 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.25928602 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.25995967 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.26067932 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.25979342 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.273476891 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.275526027 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.260292854 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.26416623 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.267227703 seconds)
  done (took 26.477861303 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.254437819 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.107926963 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.606039591 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.510561391 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.253237522 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.252394681 seconds)
  done (took 27.176799508 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.321674707 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.434932262 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.258789894 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.583200108 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.661556874 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.263347403 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.26229591 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.470288911 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.737995185 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.746690352 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.310008395 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.322328488 seconds)
  done (took 18.566549399 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.260747233 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.256671478 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.256507751 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.272514592 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.310145069 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.26502359 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.268726653 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.254098352 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.311294985 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.3126205 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.266012993 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.312074097 seconds)
  done (took 36.541465675 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34480233 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303499935 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.164935905 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998569347 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977202758 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.467196184 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.000667271 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675124837 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.263195212 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531975952 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028736046 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359521001 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.51402346 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261361462 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.259673495 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.188062831 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485031695 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722347861 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260986221 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.967222901 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285129258 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269177321 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.13618845 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.285665989 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471207865 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.237248242 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.520655312 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.040406686 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518500322 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.271660557 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493553851 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261134646 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.533938124 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898779675 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356198129 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460563249 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.9454208 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.807513267 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.246388702 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.062551423 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.769601824 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262358703 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494447501 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263193404 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.194950122 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.267322031 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681059969 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.265994206 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.972774955 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.260705817 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.2704902 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355176467 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.264528155 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.830291735 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.258648259 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.277266113 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.25871641 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265012271 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829525148 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.456702875 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269723987 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.195425519 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.612205878 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.052452184 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831686297 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.360498967 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.264627964 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.264658205 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.194483952 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.972638004 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.27765932 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408636504 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.291282135 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910471735 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908604418 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268727317 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.192032845 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794043316 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.26998894 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.196557411 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.489046743 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039694488 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197654372 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.208493395 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.195970113 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922487477 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270399855 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.592242096 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.269568769 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.680248643 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.273070121 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278792737 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286644263 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.484374976 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.147020336 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262238797 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.808960159 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402579087 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280726073 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682940134 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197670359 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.263197755 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518752389 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.471928109 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273679846 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.191946402 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450954143 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274002607 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.277242108 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.26273612 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.275352278 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.792019897 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275501967 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.468938783 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279213445 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.039985644 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964069616 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265892841 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.365148624 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.267235602 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.494400238 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.002708199 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162049704 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331674477 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268566592 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.262840179 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.075745195 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113901366 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.423081085 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.26595057 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276605269 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.273600365 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.264046432 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212794164 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.262861868 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.09815431 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.043049763 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.487776001 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275503206 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539957553 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199206972 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411975266 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272036984 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.483973896 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.382966859 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.263322959 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523580096 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265430252 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266447792 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.275897344 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283633977 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361296607 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287430142 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.274342436 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.521472265 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.26948786 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.26846366 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.113580783 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.043720348 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274892875 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.269257076 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26315578 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791341031 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244508406 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267289253 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156137527 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.278355637 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333951259 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.271454462 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.277991685 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.93019658 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.052968183 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.273020834 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.273514061 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491333275 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276028553 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.990968224 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345495082 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.448859091 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.797020092 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.280957042 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.200217965 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.976181238 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.960851613 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267453923 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.463833734 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26602383 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467476544 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279278697 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.748584417 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.802264735 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269347347 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.99132188 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.272861887 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277855763 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.270517568 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266592376 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.915094685 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.484349985 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272516165 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.277925023 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410809311 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.281122053 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.201494961 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.784225475 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.273592638 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267103846 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.041121829 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301627646 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.993022462 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746606463 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524531734 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264998038 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278872297 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.091873852 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.296937762 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.272274439 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.859048215 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290291201 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.269104661 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28964873 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.27873048 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.109901669 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.708205656 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831740402 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938175465 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749318734 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158124536 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.278445974 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.151745291 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.036829402 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203999025 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925716242 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444300018 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03080317 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213668516 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452870835 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.392167276 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978562432 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277175456 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498955959 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156020545 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.864883703 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293290654 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481062532 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304260371 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.276257956 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198675172 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.554429014 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48851828 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.830388989 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35136636 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.693105031 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.872723829 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.059369198 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.269013324 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.921992828 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.670999945 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.899356907 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.657723928 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.268031808 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.110690905 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753265046 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.272623472 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.794798406 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85244631 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.273084944 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.456808148 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208179236 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.280927711 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.279881482 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.272903552 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.426799852 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.278786881 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.522750375 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282348472 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204998298 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270946472 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763791589 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.135312668 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.277671048 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271243621 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976819225 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282521987 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531736188 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.279859832 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.915985682 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273143591 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.205399436 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206049521 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.965232014 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283271787 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247015092 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723473428 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.607621097 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270688199 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269783292 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122132038 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.527952769 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.28623995 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.805784605 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499271564 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271829039 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294735279 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.372424317 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.911403132 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.272010494 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.154348989 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.507887254 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271167071 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.494161343 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.173022008 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.179360155 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.271879214 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484376676 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.165379184 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.137244398 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51283044 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.989603399 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.278517724 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938859788 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298395274 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.114235939 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297187784 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.62594126 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.279918512 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344037897 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283810242 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.284631588 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.283370194 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673012422 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.116474999 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28820741 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.28730853 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367672995 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.518669514 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.912068504 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.046392417 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811266581 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972984798 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.815374355 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286902324 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.273516624 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274610593 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206719864 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420532378 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.800635075 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548136969 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403922135 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.735465078 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296680192 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.918913238 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302045237 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487332227 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54921627 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.14548669 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2759761 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.934164967 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.157152494 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286265619 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.486239375 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73492069 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799953939 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40431541 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.274426633 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.698413714 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550741463 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36640933 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275671089 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865892607 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.286337808 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.941468687 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.281891404 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199244822 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4229474 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285607947 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933035309 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.285258009 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.434718497 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.049577279 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.161440572 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53246814 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.695366108 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.284680628 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813558366 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.919839668 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539235991 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345172483 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.286707877 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.376636355 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422883124 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.282506038 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.15809848 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.277389662 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119666815 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.985532742 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.285271301 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819920315 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540359459 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.274749668 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.286449776 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299790406 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.286542832 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.500182234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952570826 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50094386 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28629239 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.28671446 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.84607723 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822102002 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289536466 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211210612 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.280938859 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503808381 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.514286124 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301676522 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.731100049 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.987504366 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802865314 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.2495718 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2977975 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284077821 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929776285 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821727387 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.926461505 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740602629 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936971831 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277741528 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551263085 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.283070832 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278502909 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569337521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.281641826 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.286610953 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288880652 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.81680095 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992828831 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.286302677 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.488301187 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.216187514 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.503967857 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899361708 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214594946 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276106148 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.691318031 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.295530456 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408712678 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28875313 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.285254553 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279334409 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.013365838 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565313976 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.283492616 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.269753191 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.262431389 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.295757343 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287120258 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501672414 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2836158 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.948855411 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.628733787 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.536218577 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278725432 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.266726112 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.284225736 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279944685 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.997351573 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24822537 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.76386408 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807613034 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.294954806 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.289904605 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283823804 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.497275868 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491586129 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.172236453 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.305986064 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281791474 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296458173 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.186580744 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.04741617 seconds)
  done (took 1562.969962965 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.307428927 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.302409923 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.317161319 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.333328596 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.337166177 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.494638928 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.352515239 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.309444905 seconds)
  done (took 51.971983327 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.280340065 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.318060032 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.290570576 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.290737876 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.289844977 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.287404504 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.68896768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.287092123 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.288515733 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.290068137 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.284639293 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.288920626 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.860465662 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.291279603 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.283238943 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.273961199 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.28656846 seconds)
  done (took 64.104772702 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.289296443 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.493741607 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.361989778 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.286198097 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.970642116 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.290999367 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.548191882 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.331055023 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.288905486 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.293779402 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.9336565 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.320488735 seconds)
  done (took 82.628350108 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.288400916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.288445042 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.290088927 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.289409668 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.290407339 seconds)
  done (took 7.665723088 seconds)
done (took 1977.397189448 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.528715081 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.919103399 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.891303682 seconds)
  done (took 5.028968201 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.428498577 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.477308188 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.596705201 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.604098094 seconds)
  done (took 7.325705964 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.596807578 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.648560979 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.474588665 seconds)
  done (took 5.937722649 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.57206608 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.294269518 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.401412656 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.28186469 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.281769701 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.282842195 seconds)
  done (took 20.067340786 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.285923352 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.288310925 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.285764229 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.289419803 seconds)
  done (took 6.36863855 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.265783492 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.987789561 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.269679221 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.285834356 seconds)
  done (took 18.02799175 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.032038903 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.046182731 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.0285736 seconds)
  done (took 7.326868733 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.289310174 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.127054087 seconds)
  done (took 9.635101569 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.585046663 seconds)
  done (took 2.80406523 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.417104403 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.554785997 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.306769483 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.253882442 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.338297963 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.760234141 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.774062508 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.388312966 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.173795568 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.253483007 seconds)
  done (took 26.439780649 seconds)
done (took 121.977023026 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.835535727 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.529527377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.4875426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.845157357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.520197083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.487004391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.50438429 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.811701955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.316257758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.303628885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.811647988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.517167521 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.451889684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.531267947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.448784798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.65877578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.515268057 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.884466905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.491709641 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.695189749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.504487416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.444514791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.635678277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.465863205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.512412618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.438869417 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.041974663 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.661666745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.666509876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.057856006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.439675581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.866370682 seconds)
  done (took 186.603891523 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.289386963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.283396301 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.293095041 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.283510582 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.283783793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.293840303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.284785398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.308982196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.282326465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.283662084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.282989036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.294680062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.29684743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.295761857 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.286248954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.285057156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.295946953 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.284681386 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.283131057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.295576951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.301602825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.305028008 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.283135453 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.297123914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.291971404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.282227174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.294792792 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.295822205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.28453439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.284175133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.286212875 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.296343532 seconds)
  done (took 202.514468129 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.297517346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.285143027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.285470285 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.298375502 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.283241649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.296356611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.297365704 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.284310426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.285000103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.284721815 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.297303113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.292575369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.286504456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.296968514 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.287687192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.285117778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.285471629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.295346732 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.28509082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.287896285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.288479993 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.285242863 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.301717823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.285664429 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.285627907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.285151387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.284899394 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.296410926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.284560478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.298033893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.286867507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.285386793 seconds)
  done (took 202.491327074 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.490178429 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.295472905 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.295840405 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.251430457 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.295602492 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.294632308 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.287163031 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.484924644 seconds)
  done (took 13.919994487 seconds)
done (took 606.749440481 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.522746888 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.249807169 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.490863844 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.315029922 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.043790688 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.316138101 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.31634602 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.472552355 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.765282207 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.461099738 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.51585461 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.312036628 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.652515644 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.312854223 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.550750951 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.405813282 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.155301775 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.272417597 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.616623472 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.802122768 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.558058424 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.791416378 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.473992723 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.808184892 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.656830971 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.826440869 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.031513789 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.1561207 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.316234969 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.614150951 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.873924799 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.282896914 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.36763873 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.351897381 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.406108959 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.388065989 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.246177618 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.350288269 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.491097962 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.554231895 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.812651724 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.575602312 seconds)
  done (took 90.709858169 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.284626737 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.286154593 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.284447005 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.285611444 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.286069519 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.285684062 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.283540138 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.285102739 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.285324394 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.284650686 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.285389655 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.286781716 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.284977072 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.287585708 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.284753123 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.285178062 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.28540295 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.287795579 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.284786599 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.284589296 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.286682827 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.285508491 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.287060367 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.284580608 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.287845319 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.28744472 seconds)
  done (took 34.656055204 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.297666775 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.537680298 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.687160845 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.305034745 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.299413444 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.304904062 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.369458615 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.300536207 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.299899169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.301123556 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.465542652 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.303406221 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.335693901 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.693621384 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.3003332 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.301412247 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.300143862 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.298860209 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.548311819 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.30726964 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.372681375 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.302611565 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.371025823 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.311652865 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.303274133 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.30104462 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.303917424 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.82112756 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.304348121 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.46500348 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.010205989 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.368711216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.807744349 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.703832291 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.009197524 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.302768949 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.302105753 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.471453355 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.303854531 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.300895436 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.372620555 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.302669354 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.705167177 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.916937788 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.315736841 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.301031437 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.842477672 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.471375352 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.524563118 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.310156862 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.722596481 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.301721181 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.302941082 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.3020557 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.524720237 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.304722368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.302294655 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.870153011 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.32199396 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.37217931 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.302403817 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.301292079 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.553930271 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.301154532 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.543330858 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.300795847 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.309102201 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.301990382 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.707590563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.302785843 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.943474799 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.31291203 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.301742217 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.466960092 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.545317353 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.874832922 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.306410749 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.562041374 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.815818426 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.372110208 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.307653105 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.815689522 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.376601325 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.308063233 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.30591873 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.306561139 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.303780129 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.355764404 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.370472967 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.865664461 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.927781023 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.886838152 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.389887755 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.311821756 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.303946266 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.872488132 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.319265414 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.304093308 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.696840385 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.932868812 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.31431487 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.310096256 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.921876991 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.317397745 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.375421553 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.311234363 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.710313146 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.303571544 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.357547196 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.305636225 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.310166978 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.307308201 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.374588836 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.307841161 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.304371324 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.910314186 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.491228261 seconds)
  done (took 171.536298657 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.297739067 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.295448416 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.298123386 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.297173889 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.29660486 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.302586845 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.297959771 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.30847873 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.302771008 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.296012532 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.297723275 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.299168936 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.300202407 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.306305042 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.306698499 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.305810606 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.910305168 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.301496797 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.299010799 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.298110256 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.076433801 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.29996433 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.298669236 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.296162146 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.303050935 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.30385063 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.305893165 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.300282602 seconds)
  done (took 151.037278572 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.305590126 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.822454221 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.305016085 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.424878009 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.324281376 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.30360413 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.423714155 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.359112384 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.307045247 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.305319714 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.304327618 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.589090082 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.308444366 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.783044162 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.476179867 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.428645456 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.779687848 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.305945538 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.304893208 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.305190625 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.426278931 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.315037345 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.588662277 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.833124942 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.308963979 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.83150693 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.296342105 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.308067574 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.305529872 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.832350011 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.305544459 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.589635754 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.378070619 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.361781725 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.837371708 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.778996134 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.776624147 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.437913492 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.307324538 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.30522297 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.305276223 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.295146302 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.831945606 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.309402134 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.308615928 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.827631636 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.323704545 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.309196963 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.317912216 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.306803557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.361668468 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.363376401 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.593234923 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.838998581 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.379511315 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.328934005 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.42829595 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.691913422 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.311534385 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.776281084 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.293364479 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.835727985 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.312466622 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.295467431 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.309009011 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.3123955 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.443835312 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.430686892 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.777445168 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.309060063 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.778220053 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.442698574 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.308087466 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.30732647 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.311517415 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.838675737 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.780689604 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.443367406 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.43262225 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.484101468 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.299187622 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.308606628 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.29664232 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.37962896 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.309708938 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.834413768 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.778613338 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.309919515 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.312102364 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.310620628 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.310171809 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.467251274 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.843471515 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.381331691 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.772940655 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.605395912 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.597104732 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.312970653 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.364182309 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.310331825 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.596343283 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.311697864 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.362142043 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.758404373 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.596404896 seconds)
  done (took 155.216343392 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.540224819 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.518046296 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.395624217 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.417327513 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.902659513 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.873152178 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.580545049 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.430919709 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.41133949 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.546268834 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.415977878 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.400991623 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.484242681 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.385724213 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.016539814 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.372390927 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.398463818 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.430403256 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.413544745 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.331756558 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.93518827 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.585608026 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.46710135 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.255747716 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.397910404 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.029104881 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.040692065 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.86400576 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.472769007 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.61764293 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.837512402 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.444852324 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.226812209 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.947762662 seconds)
  done (took 63.630495188 seconds)
done (took 668.009349944 seconds)
SAVING RESULT...
DONE!
