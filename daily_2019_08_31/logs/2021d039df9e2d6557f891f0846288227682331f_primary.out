cset: moving following pidspec: 18706
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.356525767 seconds)
loading group "string"... done (took 0.556920261 seconds)
loading group "linalg"... done (took 7.109366454 seconds)
loading group "parallel"... done (took 0.161372 seconds)
loading group "find"... done (took 1.127423804 seconds)
loading group "tuple"... done (took 1.786137641 seconds)
loading group "dates"... done (took 1.269773777 seconds)
loading group "micro"... done (took 0.225850662 seconds)
loading group "io"... done (took 0.921140494 seconds)
loading group "scalar"... done (took 37.567439645 seconds)
loading group "sparse"... done (took 11.099086435 seconds)
loading group "broadcast"... done (took 0.911713137 seconds)
loading group "union"... done (took 11.935166935 seconds)
loading group "simd"... done (took 4.132855073 seconds)
loading group "random"... done (took 8.218964057 seconds)
loading group "problem"... done (took 1.887685529 seconds)
loading group "array"... done (took 19.972724866 seconds)
loading group "misc"... done (took 1.666920603 seconds)
loading group "sort"... done (took 3.092615037 seconds)
loading group "collection"... done (took 16.715686814 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.488558313 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123195475 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114412799 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118494317 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.133734056 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114754822 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122659213 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083848128 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.862372988 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145963577 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118010974 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412661276 seconds)
done (took 5.171592744 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173346644 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082946555 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081476841 seconds)
  done (took 1.315759476 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065039938 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120681147 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066216363 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06688209 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066307142 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065445321 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065696932 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066189666 seconds)
  done (took 1.669335403 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073036532 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068397805 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068947184 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067874443 seconds)
  done (took 1.430874629 seconds)
done (took 5.815881128 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763671457 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201621868 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182700713 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399351233 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128627548 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153516431 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646629875 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313488393 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186176698 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080937066 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104284132 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318109465 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107193361 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.629810316 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075828316 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09011977 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137719845 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445980008 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068044069 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081871951 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088952033 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130025125 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08515374 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074221724 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144529027 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0677 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130886646 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079821778 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06627515 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207369651 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172198586 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677707258 seconds)
  done (took 10.230278812 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095982767 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097060273 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068583223 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136337057 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096581056 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069839484 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070291858 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067356833 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086405486 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127703947 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088278198 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101086586 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065020905 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0685106 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08431199 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205015523 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082058884 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081090091 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069895199 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075296438 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115994204 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078337455 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077821468 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077099674 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128122482 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179394596 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09676118 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097390443 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067124602 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080809061 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114681266 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125494603 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066196449 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066167682 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124148436 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095265172 seconds)
  done (took 4.6143069 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.930373812 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139338194 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090263476 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130814778 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064990056 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106210303 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.0649563 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080391678 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202979131 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.292408681 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572134527 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110833825 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10059752 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067305754 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067932565 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066496824 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348626088 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109420069 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103034203 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080727136 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06934558 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068797362 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340899671 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06766759 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063471781 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067579205 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0578788 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122743044 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067603104 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92758155 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125039118 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066623521 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101278189 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16926924 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087319654 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140977541 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.201322287 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066242693 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149898926 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070612024 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084281067 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091005363 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086007544 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066030236 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103972995 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112062258 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065942248 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066696256 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162092962 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065192095 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078317613 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.980219523 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155086657 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06707431 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077489401 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065881763 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247514742 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085397017 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068656735 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065248968 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179288523 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137607265 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068452418 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06610897 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068419364 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070277812 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.353271132 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06588264 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.718130768 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07004304 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078299139 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069108109 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069033614 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072328309 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072336969 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084819461 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065900746 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074799513 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065474538 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065345688 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066494709 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083916842 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.357854533 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06621275 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067850263 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064239213 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085475736 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096684444 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065883556 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064846023 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100288442 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067687913 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.17236221 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106070514 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067226356 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084472422 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069780236 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112722514 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068972416 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095518862 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067053631 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097750973 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064049108 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069234978 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09887319 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080942817 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068246958 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398153732 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065509965 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06459191 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067757038 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064736256 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067604512 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066428686 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079214994 seconds)
  done (took 20.847787539 seconds)
done (took 37.773955208 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270368589 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076207237 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074936243 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075126958 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074930772 seconds)
  done (took 1.816029877 seconds)
done (took 3.041784137 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119044642 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098437187 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063940911 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095177102 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063974453 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09950013 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098371853 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081057598 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098639904 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064169858 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095868875 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064261221 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064422251 seconds)
  done (took 2.351653195 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082690231 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082509959 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070076275 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081882029 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063159336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082154713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080224377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087954991 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080957659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071793307 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06341738 seconds)
  done (took 2.064713987 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082045179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083343012 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069892169 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081283515 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06340717 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081324579 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080811118 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085156771 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08081336 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0730602 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063615573 seconds)
  done (took 2.058608148 seconds)
done (took 7.688261345 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076788254 seconds)
  done (took 1.283190211 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592848897 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.099546536 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081031407 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112253196 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183510186 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119583008 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280352935 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08688445 seconds)
  done (took 8.943420565 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087387772 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081351659 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067922122 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068911509 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069012223 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070517065 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068326819 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071052885 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069093239 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071575439 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069339841 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071325464 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071985889 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071433824 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070817215 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06897862 seconds)
  done (took 2.425464685 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091521446 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090061193 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072925551 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074569106 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071786552 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071527382 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073957336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073321744 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07062081 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071491511 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074507288 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073387672 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071219764 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064936985 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073645017 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075641054 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070796221 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073958675 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074560835 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074638021 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074323193 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064127014 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070969206 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073199903 seconds)
  done (took 3.084062826 seconds)
done (took 16.950746253 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111875102 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07096698 seconds)
  done (took 1.396806087 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081366339 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082682126 seconds)
  done (took 1.386077995 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.0818286 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065420346 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089291183 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077564854 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065822097 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065717262 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087212527 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066152967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065822662 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065912134 seconds)
  done (took 1.953752355 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067381123 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076975864 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071073301 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080521723 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073680297 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06407785 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072419272 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067283043 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077522555 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062540231 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07035604 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081753321 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070871761 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083697798 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072262657 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068259205 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070217467 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066807025 seconds)
  done (took 2.51834384 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066078122 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066402544 seconds)
  done (took 1.3561441 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066649689 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062958611 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066278366 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066401482 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063380867 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062219868 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063183419 seconds)
  done (took 1.670622982 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383347328 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110013783 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292623152 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070135019 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081915495 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248482488 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064799882 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069781224 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070202595 seconds)
  done (took 2.65430056 seconds)
done (took 14.162980121 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078172579 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085256143 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094059499 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363210563 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091525726 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065568969 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113157146 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19084617 seconds)
done (took 2.316998938 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209877837 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608667613 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.378962151 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194040784 seconds)
  done (took 2.410093529 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323428243 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08591105 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059809239 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066448787 seconds)
  done (took 1.772388775 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065601196 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068663748 seconds)
  done (took 1.367997077 seconds)
done (took 6.99824672 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065617936 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084225346 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065673088 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063509409 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065638508 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062762554 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062825151 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065232175 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06537879 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065525591 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067868137 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065416939 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065568022 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063045468 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06271221 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064149824 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065290867 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063035854 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062723738 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062958919 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066648094 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065643431 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063091498 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062726263 seconds)
  done (took 2.835627 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083062261 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065911006 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071102553 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070820996 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06940021 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07048704 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07057129 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065725704 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070801107 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067643217 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069089768 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069428359 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067321992 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069896696 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067635627 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069622086 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070792193 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06569191 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067738926 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069480066 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070278869 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065726177 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069102008 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070853963 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069289855 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069646525 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067434969 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065730667 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070480666 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06917308 seconds)
  done (took 3.321317189 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069156659 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063575057 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064268375 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070510597 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064129628 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064126122 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062717283 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063500999 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063737244 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062797199 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06419954 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06287547 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062943825 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064087355 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063780435 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066396712 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078428983 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063357924 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062810275 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063317454 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066113048 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063016268 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063151734 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062744852 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062775312 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062484632 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063728271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06328626 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064208595 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062741434 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06579543 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06636536 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06296809 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069653884 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066327026 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062611467 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066954756 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062509045 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063273269 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062507985 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062441777 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062926513 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.17541792 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069328066 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063207286 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064417214 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063162192 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064265187 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063396161 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065610283 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062703654 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063059992 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065140097 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064324667 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066845344 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062596431 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064393 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06294105 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064109554 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062734727 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062502607 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062685648 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065049525 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063591997 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077374347 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069383545 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06344147 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06466039 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063688766 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065169912 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064498382 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075601073 seconds)
  done (took 6.018411683 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090204377 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086685881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06433509 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064780202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061741233 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063655861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066831381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063582509 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064779171 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069227001 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063715928 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064454051 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064893627 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076044521 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064046641 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064689633 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069047252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061735047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063768121 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066516115 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06374295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066613369 seconds)
  done (took 2.743645989 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155326039 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069990827 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104160478 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072507706 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067270644 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072243149 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070107441 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06991956 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06965582 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067896091 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067920353 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069530309 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067117051 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067506523 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067495843 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06753303 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069097451 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06783148 seconds)
  done (took 2.616059086 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076431175 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065088564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085555932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065571796 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06513959 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067569698 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069851202 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073916105 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068063327 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065661204 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073783266 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06781839 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067819582 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065317769 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067910073 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0655961 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067622626 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065299132 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073555331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070134171 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070210189 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073558205 seconds)
  done (took 2.784877567 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078764308 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066993227 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082024763 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068147161 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061573377 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064144564 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069551676 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066216171 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070347669 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067528775 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065655859 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063860696 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069180366 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065433193 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069108758 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0653624 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067143432 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065322606 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067149739 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061451715 seconds)
  done (took 2.611189293 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086007993 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06773912 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067451593 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075429373 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06698726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066864357 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074988554 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066828246 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066639299 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086441862 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066573578 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066545176 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074789014 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071380447 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06674183 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074620457 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074449907 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074707632 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066818365 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06695879 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08677662 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066634608 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074696277 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06702125 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066576324 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066666777 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06704523 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071518938 seconds)
  done (took 3.253007747 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065786142 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065269107 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062730955 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062891908 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062531667 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063059252 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062974771 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063199444 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065044065 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063214242 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065437914 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065134696 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065444454 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06541679 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065595252 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066158362 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065396103 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063176335 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063156093 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06288272 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065276608 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065281797 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065201834 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062817739 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063032317 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065248605 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063016533 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062593445 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065201981 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062767686 seconds)
  done (took 3.185785566 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074334602 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07238345 seconds)
  done (took 1.4085856 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062726739 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079597964 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062794616 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069064348 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069480515 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066095706 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073286161 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069045689 seconds)
  done (took 1.810109163 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080650939 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077205659 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066660347 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080728056 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075760876 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08218074 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131279283 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066570776 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072299256 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063798154 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079270916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065237519 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071544633 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066470889 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071314658 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071565393 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063769541 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071921966 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068030633 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064319517 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066771527 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074166417 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06797306 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061384639 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066737217 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087167169 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076487845 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065505384 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06852645 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072799794 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071020586 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059863317 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065294875 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066233996 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06399545 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075676501 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080901454 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068638976 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07467159 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066877184 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076643221 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061136433 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070614267 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072415849 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076131277 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066447136 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066747215 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060826344 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063561851 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068072492 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061000121 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065715997 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060701353 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075175563 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06931846 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076239965 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064229462 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066930234 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068305383 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068736932 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072157107 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067745573 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067903531 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065547471 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072236875 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07035817 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074460623 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061270629 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060137515 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06423356 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075353558 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0884085 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072112331 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066620985 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0670648 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063725518 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06927819 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066968983 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071750927 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072796717 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065923296 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071404654 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073385682 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066279732 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068646784 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074563929 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064276895 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069835456 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06397812 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082537785 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064924312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064222187 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064116889 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076663831 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069706194 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06575251 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064187738 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073427411 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06031419 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066644998 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067240178 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06683347 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076873934 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070762081 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070940778 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073893261 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07250044 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065148443 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067969674 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062083853 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065832439 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064200064 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072031329 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059494646 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067840995 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065641077 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065322472 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073337033 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062993816 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065011656 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071784927 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070185298 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063198843 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06135332 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067561261 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064582655 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067943449 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072347452 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06375639 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060205027 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060264493 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068208248 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065001592 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068773143 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069237943 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068220286 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060045705 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062941224 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069638719 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073420817 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065752684 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065725176 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070683035 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066166675 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064240127 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070908791 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069912481 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064466616 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069984134 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06563828 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060180968 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067597788 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.067516644 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063501654 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068523281 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06786113 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066930529 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065244853 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063387159 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071514655 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065641571 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064098129 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065037591 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063685225 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07503112 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066784597 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060493502 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062508219 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073260133 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063029516 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064758789 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064138265 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066993647 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065448292 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063006419 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064618184 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06684557 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074699624 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069039267 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065531425 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069862487 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076025758 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064284441 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06688219 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064343514 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06558034 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064986324 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073374095 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069667869 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069007169 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066951049 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061297729 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06993344 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072025915 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063687187 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062811561 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063739117 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068512679 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070339364 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068668648 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064809161 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062388316 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064372292 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066590959 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066843671 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063120622 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063375784 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069607828 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062152536 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070117881 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064470124 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.073799302 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067181096 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059173519 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066746526 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062321429 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069315165 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05876192 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061277147 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06335516 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064627871 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062965853 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066513435 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057652226 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070173295 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071521118 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0637827 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062729802 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063786419 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.06977733 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065435559 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067876919 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067580715 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069787647 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07387537 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063357441 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066874501 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073487278 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063947595 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.291546645 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074013808 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066613451 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067169745 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067787998 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066949776 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071564166 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078911738 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076201785 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062459918 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071458239 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067067396 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067518876 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06404766 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073097678 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071206543 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068652179 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07492172 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069415756 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068857417 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071940003 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067144624 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06891528 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06925377 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071127155 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067895592 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069589387 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066892177 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070507905 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066838713 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065398413 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069878652 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067857308 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067946482 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073257231 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067484715 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067927278 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069894838 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068141156 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067774521 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067990005 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066351756 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069865592 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06849104 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068006952 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070044176 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062886369 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074710514 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06664224 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074809812 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067538715 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063760836 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07495809 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069545294 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072604394 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067725266 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06784712 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068071731 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066163219 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070164137 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073735096 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06515662 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077371744 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074940699 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067088478 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069391556 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067706274 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068434938 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065723488 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067848053 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067886723 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067675637 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066465104 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071245236 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069410428 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066903248 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068589068 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066921365 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067025785 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068431116 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061487976 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066322283 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065908373 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066494808 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075949171 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067237038 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066159483 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065462722 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067546209 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065721086 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063312169 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074651679 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07585183 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067460676 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074151163 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06607428 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068195857 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076774554 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060943492 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064734561 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064190782 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064759751 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073615955 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.0669287 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075861696 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066389017 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065915808 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063786577 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067023869 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065154492 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061330393 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064448429 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070269126 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065870539 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065660786 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065791816 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068111475 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066411772 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074676733 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065053735 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067041941 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066376124 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063686723 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065388379 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.198808288 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069458755 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067785293 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064748921 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064600327 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065733715 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067734587 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067815244 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066185325 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068881407 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075755285 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066538007 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069866976 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070268351 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061413069 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069925184 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066340046 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06617691 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065588649 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070204472 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070817638 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06788022 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074988343 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066076029 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067325777 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066600442 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065308028 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066254689 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066389269 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067163081 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065670038 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067813425 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074804442 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064165655 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069354317 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066193705 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067088041 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073168155 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067593822 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069001531 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07384721 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066711557 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068614271 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074823372 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070723458 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070045796 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068259493 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068610153 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073151661 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066413453 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073238023 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066677842 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067873318 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068925083 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064792811 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066295364 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066724482 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065352911 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072679486 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067266015 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066217906 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066000452 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064484664 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067300222 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069610402 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074158041 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068670899 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069498812 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061648175 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063876094 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067280089 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064467215 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06819744 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068719481 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072194551 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068488276 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066977211 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065339786 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07548287 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072139151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069933299 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065174516 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070303548 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067274949 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068516864 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067185884 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066614399 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067998338 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070062569 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068029409 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06571383 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073687246 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069930054 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067122686 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067706165 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06709479 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066453764 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061450471 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066955474 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068273226 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071591873 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068723388 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066339195 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076441527 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064318394 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066873252 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069382753 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065558314 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070945114 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061714512 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06742192 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067366927 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066995621 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061655697 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065517839 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06416244 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067804259 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064336238 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060537315 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075950487 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074241893 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068400227 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064499881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064471186 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061088878 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06077545 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.199127931 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067958064 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068928872 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07669602 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06538332 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065438637 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061705529 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066015138 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069782289 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069525976 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063727544 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061671383 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064956595 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06936351 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071688875 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065555162 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066473284 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070924839 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069463767 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064672627 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070033979 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063105341 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070846116 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079858341 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06731169 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067607572 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072731985 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073790689 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0670911 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062581769 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067190575 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070083555 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067813067 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068223006 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067431744 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081148294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069322437 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066621827 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06549525 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069024285 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065932723 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074961428 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068009421 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066807176 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071190956 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069479769 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076416027 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069401155 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074436022 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069180832 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06975323 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064967457 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066476135 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064763481 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065162621 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067302741 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067112024 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071562175 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07446867 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065751712 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076802763 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075154149 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068088183 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063382062 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066124415 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065813439 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061680233 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067119456 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064655133 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064429428 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064643132 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065302903 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067693408 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071603432 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067200045 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067287666 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065700894 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060767995 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068355725 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068147907 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066582137 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062916056 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065833316 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066372236 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070082633 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069202646 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063895706 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067895242 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067573103 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066520374 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061236025 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072498031 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065078116 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068281549 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065591514 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066022336 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066967787 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069929797 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071101439 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067118078 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068361848 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070257583 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068344939 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063554344 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063556932 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071789777 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064550476 seconds)
  done (took 42.35616745 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100227278 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063850531 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062490913 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062608435 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074116989 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063281702 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062144416 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063170214 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063575365 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065510756 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062136321 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062178342 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070881409 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07832629 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07398541 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066862059 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06236523 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063258738 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062297844 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062944757 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071125344 seconds)
  done (took 2.808991598 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074088916 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071097543 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073114601 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075823551 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067547793 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070830435 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07267232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070966888 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076177888 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067080302 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076258673 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071137974 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067346196 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067390879 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067459859 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071135129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076262401 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067836178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079730076 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073192336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071039669 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072839377 seconds)
  done (took 2.940272601 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06722153 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066771636 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068095911 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061736757 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066242563 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061620144 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069951584 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064888238 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069351482 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065886747 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06563348 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065245641 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067744492 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061687835 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065973921 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063987797 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109072283 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069287268 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066230648 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066818532 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06203602 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067966357 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061901193 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062028207 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065344841 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069756811 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067209005 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064113374 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065751814 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065086003 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065915532 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064125604 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067500303 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066570374 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065098375 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065179261 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06573187 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065729725 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061716889 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064025522 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066783811 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062106364 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066222318 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067392074 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064671963 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063743475 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067530906 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065665639 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061146509 seconds)
  done (took 4.613431271 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080238719 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109377867 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068488666 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088770441 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080367445 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075569621 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069594208 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089741591 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063341296 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064506601 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081662557 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079906007 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065987308 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070949437 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069456645 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065753461 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067055544 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065446264 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069811603 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065379709 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069916399 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072384899 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080524063 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07930481 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069822603 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065235668 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065478948 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070305484 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078685172 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070381044 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070420341 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071521472 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080307394 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07084788 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064866398 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067959888 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081388649 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065556989 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067952291 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063500161 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067619659 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069606872 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07190612 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081481621 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065550826 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070424358 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065278428 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062771692 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078023017 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067870183 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073362919 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079563037 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069087661 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065538355 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069873837 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079939585 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06548203 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063768816 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068289381 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077554543 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06327745 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06911046 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079260076 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067387131 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072948399 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07978413 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070819901 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069282769 seconds)
  done (took 6.40259657 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074681158 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072517224 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081336966 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080786484 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072322935 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072307302 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072130726 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072175266 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072148077 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077048181 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072328284 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093028156 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06767138 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07498947 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072191948 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072495478 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072874457 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072289567 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072604634 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072311773 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072414546 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080090057 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072366657 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079831794 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098111247 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067764677 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072635587 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07234481 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080498833 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07204853 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079574616 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072069339 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072155145 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080065207 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079627798 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071825839 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065287561 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072376739 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071955658 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071918092 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067943636 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079893205 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071694825 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067227813 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072360118 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071501732 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079795407 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079483276 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074768719 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076562608 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072086544 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07952329 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071429812 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071980383 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079921155 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104517501 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079613804 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080263884 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072178662 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079658841 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079711559 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086039581 seconds)
  done (took 6.077202046 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082973492 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074619164 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07566378 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061668769 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063679298 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069960338 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06416833 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064296962 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074547321 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074787941 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076535922 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069675867 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072736799 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076851443 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069699865 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073050377 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069557554 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069431383 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074168538 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069941548 seconds)
  done (took 2.814826384 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074256988 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082868779 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066458827 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072494619 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068367053 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071584434 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.0683351 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06924686 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067051325 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0687929 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075918897 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076084618 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066708029 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071675399 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075978991 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071485545 seconds)
  done (took 2.526381715 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074622228 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072485063 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079796905 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066118556 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064079522 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062413612 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065674809 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061512614 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06240527 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077485587 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065536086 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068379301 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065894596 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064341879 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063211095 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068795762 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062280511 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063273373 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065454946 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078228124 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076470137 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064490626 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066316907 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065840088 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066018957 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071532886 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06532079 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063500582 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063198242 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066029857 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066229157 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069311741 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063046109 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063422817 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064308585 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062924917 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065614809 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065759862 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068316405 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065525996 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063575312 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065105677 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06540461 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06648341 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061717007 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066444131 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062135953 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067459901 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.0635143 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065818157 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065289617 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068050782 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065962228 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072440011 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068925571 seconds)
  done (took 5.043576506 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078566367 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06939655 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062764256 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063942264 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068435552 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067658423 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068902535 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067263548 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06754192 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063954674 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067847425 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068478352 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067544549 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069354049 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067792607 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069090112 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06182581 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067483802 seconds)
  done (took 2.610415747 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07130604 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065872048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07315341 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066415417 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065751551 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067629477 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061858581 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064392928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064266785 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065736815 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065799791 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068013346 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064547751 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067746463 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065771474 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065652373 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067800709 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064256483 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065597169 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062330741 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068414568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064359242 seconds)
  done (took 2.841612352 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072083505 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091872171 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137584613 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083185186 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081000289 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078328913 seconds)
  done (took 1.931131216 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089936035 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079195722 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066119059 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087640443 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073432799 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067412182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067397429 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067333505 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075901488 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0759709 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067275318 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07599683 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075940685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075063344 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073306359 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072941325 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067169074 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067250137 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066067565 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084244419 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067144316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075478562 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067316461 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066701915 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067627296 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074943293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075673987 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076262738 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066903272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075709452 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073036612 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067204972 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076072147 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076169723 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069297212 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076282927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067780873 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084240378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073151218 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075823596 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069130839 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07361126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076269976 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072260317 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075945369 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067807259 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072174332 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067320824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067608298 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085993932 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073240679 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074994702 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073137488 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075690288 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075836877 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086093802 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075948917 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074976098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073142564 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079079235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075151104 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073174312 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075183001 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075906164 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073284096 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075858567 seconds)
  done (took 6.254317483 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081701585 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085506286 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067782941 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076101348 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075510384 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067331012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067449911 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067660924 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06733657 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067049757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107339189 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067653044 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075576793 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075610282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067680683 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067410482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067627378 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075260428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067168799 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086885052 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067191678 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07598081 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075215704 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075044958 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076436562 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073038646 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067298902 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06739546 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067238601 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067345822 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072487967 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067727523 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075475413 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067191804 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075554321 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067862592 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067898924 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072351656 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067455167 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07328853 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075431187 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084259502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067737485 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06738987 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076542378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067505843 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067839741 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067927834 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067728077 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067460968 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076471804 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076203597 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076151749 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075470082 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067634403 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067734536 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067309384 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067409688 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067840336 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073405393 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075253018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067151821 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086040433 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067536188 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067361064 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075710889 seconds)
  done (took 6.168541987 seconds)
done (took 129.209339124 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185525062 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17093391 seconds)
  done (took 1.738458044 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069007768 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097227161 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076271311 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128780111 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066762794 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100470519 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099828305 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077890446 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066129103 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066189579 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066048761 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068386911 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131275313 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066908653 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.0660806 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068467326 seconds)
  done (took 2.713337548 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096693245 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15814894 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098566502 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064777043 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097571725 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072710681 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064447144 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075111158 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070757253 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065034204 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072970396 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070359377 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065048362 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070550941 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070911274 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07304186 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065010586 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072728934 seconds)
  done (took 2.825522169 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101095927 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091297639 seconds)
  done (took 1.593569431 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159835906 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106534023 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149826468 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348626614 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167900048 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231325653 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128904185 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12934039 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121579455 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124745913 seconds)
  done (took 3.066238474 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098314714 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151059962 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256134255 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11474489 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072579484 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094836937 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115936301 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077749592 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080922201 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080516847 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080479367 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076237304 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098895922 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073395709 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073582404 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075932032 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102395135 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072234037 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074090429 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076535289 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099184523 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066307526 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073888532 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072346827 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077426669 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077470232 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065562773 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065209957 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076699376 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073978513 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076762201 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093685271 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077167817 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107136574 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070238159 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108168743 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076695787 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073957084 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073891599 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073466979 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078535088 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078425837 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071753357 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075721474 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065017622 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076440701 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065163651 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065172648 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07787757 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066562766 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077827336 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076569214 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107093015 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068401482 seconds)
  done (took 5.999673807 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102149584 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107243674 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071983379 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109036651 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097139123 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071431036 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101192499 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09174563 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102573356 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092757374 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088550651 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076417017 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082591596 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084043728 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110011829 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102037383 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095406742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070724642 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101937532 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10301183 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068662943 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095151522 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090845811 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102031652 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067806225 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070279138 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068183532 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070800003 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077270701 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078497654 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070053199 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102187126 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084500403 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078361063 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067152428 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06754735 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067975947 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079007431 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097580476 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078802104 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077670302 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067523177 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067761495 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069271277 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090944765 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067446206 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078970947 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080060757 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079226003 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069717586 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070700901 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068354314 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069897015 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079920018 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07787419 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08059229 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080053652 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068204233 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068600096 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071914979 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080906394 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079240787 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079305336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092089541 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079257479 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06813349 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079990418 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084880426 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068083552 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069751083 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06852866 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06968976 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069562482 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078047477 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077946817 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069972272 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069459982 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068483325 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080384931 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078184487 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067997582 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076976335 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067089039 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068526822 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069957305 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07034317 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077938294 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080171723 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070226766 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068193467 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069685509 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068643406 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067019831 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077320725 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079796572 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078904611 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078356878 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069295823 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078975265 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078280273 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069331721 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.206238485 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070019936 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071022309 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070702256 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078721655 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079162243 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080622963 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069931748 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068535262 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079214655 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080998105 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069507765 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078214165 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080763039 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08030337 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067929263 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080889753 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068914031 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079879113 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070290486 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080902107 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069129797 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079534271 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068572319 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068779995 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068464437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079621205 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070056869 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06874016 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070150871 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070642673 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079881295 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083267007 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070870781 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081401862 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079174884 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070817818 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079847708 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06933659 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079867863 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070348661 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070352554 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067490162 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08305901 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069954791 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069067606 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070106153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080909691 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069021047 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079889384 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078242064 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068211423 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081605338 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080640627 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07682966 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079696635 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070629189 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069330448 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068261643 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069461416 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078434977 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080167433 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070697376 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069091483 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078323292 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080158542 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067804662 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078010404 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078709643 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078635056 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068601086 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069501038 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080363881 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081182149 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078098818 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078175696 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078642498 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06836348 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077593602 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078571894 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067955031 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084065523 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067980068 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082306335 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079687644 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076851119 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078734682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080384638 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080869849 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079859526 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082624503 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067805842 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068025174 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079672286 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06780632 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069572124 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078166435 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069745061 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07022563 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083435382 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068498273 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079468993 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067373384 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078185412 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066727998 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069407097 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.213638738 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069187975 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0698855 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080239033 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069582138 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078156193 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081677059 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078727768 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068710908 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069876996 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080836265 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079580006 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068275539 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068923632 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071047338 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078079394 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077801865 seconds)
  done (took 18.862216497 seconds)
done (took 38.204593716 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208308055 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150314812 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179439481 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117718266 seconds)
  done (took 2.152004487 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121726932 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100650479 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09477074 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064835647 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102030412 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064916241 seconds)
  done (took 1.983072732 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311298846 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211043552 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181879921 seconds)
  done (took 2.139434162 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197700204 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187475779 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393015994 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25274449 seconds)
  done (took 2.569559222 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143956783 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089635523 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066976777 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082958112 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134786849 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161438352 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101007196 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126031086 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07749644 seconds)
  done (took 2.468068824 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147200925 seconds)
done (took 12.892968983 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.168746727 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.209700253 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.09838785 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092640568 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172517301 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.228811098 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071449837 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.0821633 seconds)
    (9/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088557236 seconds)
    (10/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092217768 seconds)
    (11/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.192424439 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.212874678 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076921806 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072869088 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12066326 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07628271 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.109328023 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075316089 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.14975109 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.201520306 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.136929555 seconds)
    (22/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089524189 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071131545 seconds)
    (24/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083360922 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.09635243 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152996775 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075558275 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.146304745 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081511138 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076959882 seconds)
    (31/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087213758 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07180275 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170262138 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099500362 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178823777 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.149519292 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064694425 seconds)
    (38/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.156146831 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118893086 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174476156 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073335906 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06143184 seconds)
    (43/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089754289 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060639032 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091238674 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18947359 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.182713098 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072539679 seconds)
    (49/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106074575 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090997023 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089608231 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075576847 seconds)
    (53/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061467291 seconds)
    (54/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.08940428 seconds)
    (55/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066097234 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.184825265 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053774676 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.194435913 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067076487 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077214922 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193832023 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052280916 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095078415 seconds)
    (64/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052529108 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124383906 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068449761 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072582126 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053460139 seconds)
    (69/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.147271147 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064855713 seconds)
    (71/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.114487285 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.148623142 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065575206 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.170814529 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.198718698 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.179777652 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07233486 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09383391 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.065883436 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051206391 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120741988 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147535976 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.242939134 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09551177 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071750131 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095961292 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09984876 seconds)
    (88/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072254605 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091348998 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150435118 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075021766 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065832401 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111913665 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105172725 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072488344 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097601047 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093123218 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091796066 seconds)
    (99/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063972875 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11039275 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.156878976 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074485576 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072394305 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072823915 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063342037 seconds)
    (106/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090997173 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087442061 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140606619 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130169486 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150310606 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.296270138 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067244336 seconds)
    (113/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076656256 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119093743 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.0511564 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.133999321 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073807352 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072345731 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071227673 seconds)
    (120/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072639177 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079282647 seconds)
    (122/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054615377 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070505642 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075651926 seconds)
    (125/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072063651 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065012781 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051376704 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065478681 seconds)
    (129/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156640802 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.175304426 seconds)
    (131/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072399328 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07097474 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141446013 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086569828 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050865735 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071776126 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064650166 seconds)
    (138/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072734536 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070723882 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050624005 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051328682 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.147683362 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064158175 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069568802 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071979787 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136542788 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051412051 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137358397 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064638588 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072713143 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184360062 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066918692 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051164572 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087415951 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113534204 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052029758 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140800683 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073625835 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193079197 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086633303 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075915862 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062179691 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05157542 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069567437 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051136147 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072470948 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068455573 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074833376 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124278839 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052147343 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103082405 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078296213 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064898973 seconds)
    (174/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071028022 seconds)
    (175/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109199048 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064753195 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090228535 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099347764 seconds)
    (179/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097073418 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051238731 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065318061 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066709846 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106847931 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052367131 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068710756 seconds)
    (186/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072212217 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071328597 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.148686546 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050818615 seconds)
    (190/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062441376 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09473314 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067607037 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06700924 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072840108 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.173339418 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.207456489 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080516939 seconds)
    (198/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072960615 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.140418947 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06482017 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067549512 seconds)
    (202/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052072591 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086440755 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185700652 seconds)
    (205/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067345158 seconds)
    (206/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067854323 seconds)
    (207/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069838259 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065875399 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051084412 seconds)
    (210/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069553476 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067375888 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074626448 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072280694 seconds)
    (214/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069682201 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067101948 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052627784 seconds)
    (217/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098274205 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052016107 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065177041 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.196162132 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065509473 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066051386 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071341414 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110279952 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079692439 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052421324 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070911888 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178610641 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16863859 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064940494 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065712032 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079071285 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05263663 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05152114 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136650116 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051835495 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087307112 seconds)
    (238/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118909853 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068193012 seconds)
    (240/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06232297 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08848585 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070911829 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051994675 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052976968 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.14844178 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065176636 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085210777 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051537902 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088759713 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0652938 seconds)
    (251/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060934306 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070661464 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062754491 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064307914 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064441652 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051506913 seconds)
    (257/309) benchmarking ("sort", Float32, false)...
    done (took 0.127603345 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065354622 seconds)
    (259/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174388532 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.19479166 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052673958 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064763423 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071571743 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054618107 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089222404 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072348903 seconds)
    (267/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071679778 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075406989 seconds)
    (269/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066016094 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072762207 seconds)
    (271/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183666994 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060519295 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135846013 seconds)
    (274/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051226296 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065835746 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053464553 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052104309 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065649746 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076329421 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066321394 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051147623 seconds)
    (282/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051775479 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051779556 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071369885 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087845998 seconds)
    (286/309) benchmarking ("sort", Float64, false)...
    done (took 0.125029556 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089061306 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051568289 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072132156 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051266089 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066401858 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063516035 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052606481 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052429314 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063707536 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084985322 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051059388 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072046216 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064338881 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070057541 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051407161 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141171195 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107020812 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 0.139336879 seconds)
    (305/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071851404 seconds)
    (306/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051240463 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070553831 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066278684 seconds)
    (309/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060588117 seconds)
  done (took 30.491520899 seconds)
done (took 31.936112541 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082212301 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091676856 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074439247 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09180698 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079891504 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076031908 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072048939 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07766664 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078866988 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080849284 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077868627 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054453153 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073579291 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073853938 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073993798 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090623272 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077262073 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071760854 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072332206 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064576067 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072108126 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064896029 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066563248 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054354144 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077066713 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070906726 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071765089 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073702183 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065254417 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065194235 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068575488 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072614811 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065267766 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077017724 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071327393 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072361567 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074132575 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075627984 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067327787 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065164078 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073650471 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065438983 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07170866 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072835265 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071682344 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070573498 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072243326 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07712747 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090390282 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067593498 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073635048 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075502663 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075739873 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071644743 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069170081 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072285773 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070447169 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09058451 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072798863 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067474237 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073456088 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073185137 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070280314 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072214457 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073015826 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07442696 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074645275 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070353031 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074399476 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070491896 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064828572 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072231852 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068309049 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065294577 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075197655 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075934703 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06395156 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070562301 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071777885 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070999883 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064022816 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067069086 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06628019 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070637769 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066815565 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054255663 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068164507 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070640157 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063986205 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072259873 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070945101 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071591622 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066266785 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074495303 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064384362 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070208012 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064993929 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064989006 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066503882 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068393606 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064946347 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066756231 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073423566 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066299668 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070889328 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078409577 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064469349 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070849127 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063986626 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064113253 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078577696 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073724329 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065054079 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067146371 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064102456 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071798841 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064573142 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064985147 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064655885 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064823627 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0703989 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064745068 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066867777 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071390972 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076854155 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064611795 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068009246 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066848066 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065126699 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070146439 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064864315 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065001071 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199124709 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061867887 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067266061 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065539199 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072419066 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067813038 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072411353 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067049259 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073481249 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069856255 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070907288 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070200482 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064482923 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058843863 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067379747 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067736323 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067088504 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06551487 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066495633 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064825322 seconds)
done (took 12.395073885 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066734747 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142225558 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099412091 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09458439 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085330636 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066173432 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075531916 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101706521 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067335938 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1019535 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086472727 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084318424 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111988214 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064277791 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065802956 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069214146 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066727585 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081123873 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100346832 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085763177 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115487633 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064994593 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093801129 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089496868 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086735653 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091400745 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066277897 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069367168 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069228537 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099711925 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085965056 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069662623 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066272208 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099680826 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091701559 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082840183 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06605537 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08182064 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066104426 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065442886 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067572721 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098222842 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079234727 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079994263 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069334487 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069138021 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066637563 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083131116 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088390565 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078302082 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086087695 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101912063 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068233736 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065280119 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064384815 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085004271 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065226447 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068318321 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065761697 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067842673 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065540675 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068639159 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080603426 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081513224 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069618821 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080032008 seconds)
  done (took 6.808527056 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082813571 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089534646 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082852351 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083469689 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065275489 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066095363 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066542505 seconds)
  done (took 2.073829583 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066648035 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087329962 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088964825 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088527334 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084506972 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086789535 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075570947 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066307818 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080163534 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067424451 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086841204 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101427142 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06676355 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072310695 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089973962 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066424702 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08948779 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066077549 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068925985 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089246514 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06816416 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081285178 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070122225 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066638776 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080256682 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066644047 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112819945 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070374103 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067677953 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068906272 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064208997 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106445176 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080094815 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075261445 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066108716 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081161498 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080901892 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065120959 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082396136 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071344364 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081050229 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067109348 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06717619 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064288247 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070428035 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076416327 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067177977 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066477726 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068397349 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085140488 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066810511 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079314226 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070301875 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068746391 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067517528 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07016771 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075654682 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067004253 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085238358 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067326447 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08269584 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082006758 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080171523 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082276135 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068564036 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079662231 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080003934 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069126069 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068629063 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07006084 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082284157 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064938186 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067718607 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076863018 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068144879 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089337401 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088772162 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067943615 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075109417 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066613172 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066410417 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066596352 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08852976 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068647195 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066317718 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07094167 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068926918 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064470091 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065540734 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069442428 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06406475 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067536043 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068978603 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069676082 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068499245 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082357605 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068396462 seconds)
  done (took 8.770588494 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068753096 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067725304 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068937772 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067326762 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067525241 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067392417 seconds)
  done (took 1.966180339 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092812578 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069482648 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080299205 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072474683 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103690262 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086665808 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087245678 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07878659 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083356278 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078783007 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086390346 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087774188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092081988 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072347283 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086782779 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071887369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086653451 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075463636 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077667703 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072527353 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086209007 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07304882 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073006423 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081474157 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076223981 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072180734 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067193657 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078406876 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078251003 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078718426 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072335037 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075676205 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070381561 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078377035 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086610796 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070635394 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071926017 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077137949 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072136137 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075283839 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087796408 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073150333 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074806216 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077144508 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078256013 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070009266 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07692236 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075719937 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08636082 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077059844 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076710999 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07145588 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074916958 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076898205 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070211412 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078303239 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076450384 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085807404 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072058304 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069786774 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06877224 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075420953 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077366262 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074565464 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078334945 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076257783 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069855 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071973036 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072749627 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071427539 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076299553 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068650185 seconds)
  done (took 7.108036809 seconds)
done (took 28.253565735 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539043446 seconds)
  done (took 2.065949492 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597722578 seconds)
  done (took 2.147898731 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.613637176 seconds)
  done (took 8.160493175 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390252197 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475650866 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.690738638 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130449199 seconds)
  done (took 3.275332187 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.662722001 seconds)
  done (took 2.221529258 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208454552 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19623483 seconds)
  done (took 1.971545509 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377727495 seconds)
  done (took 1.928847858 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105357596 seconds)
  done (took 2.661813515 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263115808 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162980794 seconds)
  done (took 1.990116407 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460134676 seconds)
  done (took 2.023341657 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.859975079 seconds)
  done (took 6.425707816 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204406454 seconds)
  done (took 1.806475472 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239360526 seconds)
  done (took 1.800739317 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.685891188 seconds)
  done (took 3.244602043 seconds)
done (took 43.279909498 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078547289 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081061565 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080866145 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077602127 seconds)
  done (took 1.863848761 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076552783 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071797742 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075648097 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071801346 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076106291 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071794413 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073357868 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076499779 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07174303 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072389283 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072067348 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071787174 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074394782 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073589614 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070608579 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07396635 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075474056 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071825729 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075338189 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072017896 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070418066 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074225983 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074652055 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071535003 seconds)
  done (took 3.323294318 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076669308 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07234462 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07407561 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070839731 seconds)
  done (took 1.862464808 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077153965 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090609212 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088805627 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077370941 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091517066 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085355797 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068598198 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068791194 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072561322 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076254685 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067797387 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095478379 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087402533 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076095086 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078307605 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065695304 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067452965 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086165688 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077325459 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076736514 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069115652 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07650658 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067434367 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087750598 seconds)
  done (took 3.440930653 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076815764 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102222416 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07673212 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086709842 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089237503 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064960718 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073733668 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088191462 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122524928 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064851583 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069640764 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064874746 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071684767 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064747823 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075333726 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103615399 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106795077 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067787647 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09513416 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064765037 seconds)
  done (took 3.205307726 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072060958 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069761514 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065678396 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067835688 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077490445 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072562242 seconds)
  done (took 1.996665328 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067068682 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066560773 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067284782 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066360054 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070917721 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066116688 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065473881 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066431691 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066422192 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06640627 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065746771 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065199071 seconds)
  done (took 2.367909697 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.421084554 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068520179 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068289044 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065367742 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070135615 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06617144 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079069933 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067338817 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090105879 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065743382 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066015119 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068307262 seconds)
  done (took 2.765596761 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204582027 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075624139 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236403507 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135656576 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110788556 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114620506 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103054082 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112329913 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142757857 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101571495 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167214089 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165216959 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106432667 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136486297 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088413391 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097213155 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155044145 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16135804 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102802309 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164373237 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142883602 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123757144 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145879876 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100588052 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105393135 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121199189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070529845 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079292055 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169819208 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130899359 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146163631 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11034713 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092802927 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175635656 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169867449 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14239071 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133627002 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083626396 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10149995 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132408977 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198812467 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088083157 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162927637 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244659343 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080678476 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13293324 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122045475 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120776467 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106330759 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089499985 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146198144 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183121373 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137764434 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086442106 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111627411 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113988185 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115992326 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102004461 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18210513 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161110368 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126109401 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07086028 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098299863 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153188242 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130561028 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108401478 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12605212 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093058696 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132682895 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153905328 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117836476 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142793889 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127890145 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088102932 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11840893 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139226856 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128113841 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169650191 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12428978 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072070048 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124153683 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102926928 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080352668 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14185624 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074799731 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174874407 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097930333 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105872463 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112288761 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10807839 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108483547 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160699067 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142351463 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242750965 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066627861 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103979572 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119284537 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147813578 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087490184 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108165911 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116149391 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078055087 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138143171 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074933987 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121969202 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075056801 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124299384 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131342733 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07479387 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121181186 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099857336 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098700573 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132512379 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158411106 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088046318 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082357675 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166656589 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12058233 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103880708 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142734217 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1549926 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098249997 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101747292 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148412341 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179349525 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088517419 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162325161 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106791391 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082866748 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08705163 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123080682 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111765224 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121453347 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081782867 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118452196 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167370353 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.0740472 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094635131 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13331608 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078590484 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0801794 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103415044 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099791178 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09427979 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099306402 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103727824 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137305905 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122286238 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103858598 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267386998 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098067845 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170170912 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088558717 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099760074 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103280149 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069342581 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13585213 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157158494 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079126299 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162920291 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123748109 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104788898 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119175033 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082650918 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139869569 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077907752 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070063853 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143993359 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109927747 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109939759 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150627923 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103691986 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126794525 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119192384 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134364209 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132058481 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12806323 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10443716 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087083779 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110841387 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125185721 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072304141 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090628292 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079362609 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103205606 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094800739 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082510471 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141878271 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124253513 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099885849 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111342066 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096074081 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146260151 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075791597 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128324867 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119176384 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094098475 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151971616 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150821081 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130598535 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098746545 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143611687 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069639202 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072897775 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088469618 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265836144 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082753916 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082949367 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116693732 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146980899 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128912087 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138150716 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110353753 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119385494 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154176992 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068989772 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114603041 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14848536 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121682665 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103014415 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089600466 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098709066 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141520225 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108314309 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181503525 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113194865 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125190042 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152478096 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098543489 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079231644 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10725601 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135388905 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103561306 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143613261 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099224692 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087187886 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109771364 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073251298 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100085891 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126800506 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119357529 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135031382 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113423387 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132648891 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076681068 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116768491 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119771621 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122660828 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063717024 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11976898 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160804914 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092994476 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118160717 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152108545 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078886657 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122943726 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319168224 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146242345 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084089456 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109068608 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117794377 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126431605 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119833035 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139256153 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107824689 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134714825 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108354355 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084742994 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087234455 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096690714 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105035323 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094485712 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108373269 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113710643 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094884553 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131002936 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1036658 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109477887 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116433379 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095375909 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088365494 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096912167 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17345813 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119579279 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1714938 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097767241 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14490123 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163444973 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074029904 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078545713 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077485581 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13883315 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083368605 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130006309 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096923882 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104637635 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1233545 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141353137 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09471622 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068163013 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107841974 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134254387 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111649804 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097698355 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107036036 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16316978 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099690189 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078965443 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113061704 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103857907 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101557345 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171115479 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.202999665 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097583628 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075702341 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080778303 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126768988 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152238676 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080098192 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102208468 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118338922 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109876624 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127682597 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100792318 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098915561 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113282472 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149394804 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128464453 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089437022 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110961656 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12871376 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155832076 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10534734 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095413137 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171814369 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151136237 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160438621 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088147863 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130721343 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113319859 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107456052 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138700949 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082810847 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162878777 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081424998 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135738269 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103594476 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08967455 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128918326 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098330214 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087317584 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147320316 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117147539 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081998769 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077382204 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117387567 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120048941 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106349518 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074769075 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138776324 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072019753 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131480367 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168213573 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080574387 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102883617 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094756735 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078594536 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106432023 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101245243 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088099125 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096475904 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167251399 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085602232 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145340684 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137608545 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110113107 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13257508 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097002851 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63279408 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07570816 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147348655 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112501011 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166487324 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094516291 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114021325 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106309652 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119423994 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139238912 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101515233 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174693826 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127132633 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11256545 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077785112 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099378367 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099239864 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086572643 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101876892 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110144517 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111920983 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090868912 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112622759 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119170789 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.07960938 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092267901 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150569179 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113038383 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138631249 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135860359 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082871903 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114504485 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134151523 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077809931 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118385289 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147481818 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101589374 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093224135 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076356683 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.353733926 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172575149 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074186139 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164904784 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120946299 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110196279 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114583475 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114667576 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132942406 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107370704 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122394215 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094236016 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111504094 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112856137 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082707621 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077583503 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105413905 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112224484 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097595378 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098541634 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098232358 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151636293 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071391625 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095537814 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102876759 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144783167 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174184274 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087927638 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082464205 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11844991 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112453049 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113280541 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119890305 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078651147 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081620522 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081078368 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076774716 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108040637 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11153538 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103493233 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110681133 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163147844 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081950407 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224987751 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094618261 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103919346 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069176945 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077805721 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094929142 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096782664 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10767952 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100079012 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169736061 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093985652 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089644413 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091839875 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072395538 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081322303 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126840278 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259055763 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118035072 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096784233 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06215197 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109341251 seconds)
  done (took 58.480463975 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104484332 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082123953 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096418771 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147853112 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121306996 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211328542 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156283078 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198585543 seconds)
  done (took 2.826931632 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068707348 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093158508 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.09874164 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081817538 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065918999 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06774863 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224075797 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079159175 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065781448 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087792537 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078469241 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067929292 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421006923 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065404549 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067492109 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06118333 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067917996 seconds)
  done (took 3.462280716 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36049068 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.360306993 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37196992 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073069399 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.799332297 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087934581 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.080176926 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096090447 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070391979 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267925253 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.706774877 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091253072 seconds)
  done (took 14.068916394 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075231847 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.0691268 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083263898 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083284248 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071781725 seconds)
  done (took 2.084846396 seconds)
done (took 103.339563014 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079480505 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391069672 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053320248 seconds)
  done (took 2.173988213 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082455755 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083748159 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083412753 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081817924 seconds)
  done (took 2.041501877 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073195287 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075813835 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083818177 seconds)
  done (took 1.935321464 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222031361 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13810576 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085978484 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082259703 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077435197 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078304789 seconds)
  done (took 1.945646583 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070766775 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073679183 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072270866 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075531047 seconds)
  done (took 1.994495821 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075286324 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052287948 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054271082 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056168115 seconds)
  done (took 1.940631498 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085709761 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078311009 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077741456 seconds)
  done (took 1.947103736 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105919932 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084400221 seconds)
  done (took 1.894184249 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080587605 seconds)
  done (took 1.785929042 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097681001 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112228502 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127317498 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108366023 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136095643 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110740201 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085021089 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085972568 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076696492 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086393328 seconds)
  done (took 2.731312853 seconds)
done (took 22.614710538 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078967087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46093351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360812035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090869021 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691696545 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355813952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.982120782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091254437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112483516 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067179411 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083175346 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64991546 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.008705133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.413181703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99574816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323074713 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648026746 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067451944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067312166 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067723424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967658604 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066808572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067056236 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067900476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647325987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37048601 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067997991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322285526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067373297 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068981481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354330682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067829507 seconds)
  done (took 16.447228964 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070638567 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118116576 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072654696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08328905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070164176 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068860195 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071525574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068323474 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118981115 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067698597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084025044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067153681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071463643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068166807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086392092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067519303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068494389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067849767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06743266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068242816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085873435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067205557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067840952 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068032405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06741155 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079150583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067839532 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067730904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067665381 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069313011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070133148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068117806 seconds)
  done (took 4.095141335 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114083314 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125245539 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073279879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102034421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110738001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070190682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142655582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092134453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126903983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067872475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083882327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067603652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099987233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068453462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087373045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067978073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06835404 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067885538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067901812 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068242851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086684092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067519983 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068003375 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068567324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067925665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08064581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068217032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068456541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067856168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069782883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071140563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068321991 seconds)
  done (took 4.355244975 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072061055 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074102922 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08221333 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082562245 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068874404 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071313273 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072013782 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069410061 seconds)
  done (took 2.321637772 seconds)
done (took 28.931584797 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078599552 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068354577 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072508747 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079697329 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07288491 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077850353 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066686677 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073823731 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072045779 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072456225 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074218038 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067091804 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070571532 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066707653 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073076501 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067700137 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078638648 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071367702 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078600016 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078569827 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069056964 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07252672 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073541112 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078333186 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078366018 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078237739 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076696795 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072072273 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068459786 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070055039 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076035815 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083560252 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067971785 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078549061 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067421925 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067312279 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070993369 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067161526 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078553828 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076412362 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068965542 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075373048 seconds)
  done (took 4.783855486 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086928948 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090588457 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084686376 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061283285 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065990003 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063860422 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087747194 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059214349 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058939697 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086817797 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055696163 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058617219 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062166527 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053489218 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058841227 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056130401 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061209136 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055640632 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058984732 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059058089 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057885408 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053842471 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059824655 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065172133 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05626799 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06172576 seconds)
  done (took 3.411513922 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073819926 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083868254 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087706808 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125822514 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102724481 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.0762815 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077440494 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09148893 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084538664 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066225937 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070920054 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093451788 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087094408 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07332793 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0672719 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08388271 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081438322 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068827956 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072683988 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090048462 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083833972 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083120329 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091770613 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080756771 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066458383 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069263514 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070721698 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080860816 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07193292 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076041704 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071051066 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070563523 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06919912 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078128236 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070950641 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068607076 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090448963 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076474047 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077457867 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06798093 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070748671 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068035194 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088886103 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121498978 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066568506 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073593068 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074550457 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.087752945 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066913502 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085842361 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078100804 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06659747 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069956261 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066379695 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067173345 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079810664 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068833163 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069140003 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075882887 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070072878 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085392229 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070946955 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082151033 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066530568 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075092352 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066462373 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06779574 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066281942 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091717497 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068405403 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107581322 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067937319 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067935412 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075699484 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074694765 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072790239 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067527762 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081988794 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076907601 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070316873 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075583354 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070469061 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070076657 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087033769 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069005962 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068599077 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068275913 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072974811 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069656579 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068312852 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079654249 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067028852 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070470441 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08320778 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066943778 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068286273 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073092157 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071836203 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066705361 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077646518 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071492769 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067889145 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075554823 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067185554 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069856689 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076954873 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072954008 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066328603 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071480161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073331835 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068487959 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068527682 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070436283 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069161384 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075472139 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073673052 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071703684 seconds)
  done (took 10.585549973 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159492252 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153023482 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069806991 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143903004 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076330766 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078313653 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146428394 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093764087 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06750591 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067816488 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06829107 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109206524 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104844616 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114695849 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078567949 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067459134 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082749735 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113303705 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147974317 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142305745 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08281579 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076152299 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069558949 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068715082 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070900841 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078206111 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084915435 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076331535 seconds)
  done (took 4.458959561 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080153513 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100628152 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073761943 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087949217 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090396871 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06702406 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06950208 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068878259 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079969778 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078573764 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06774756 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072961113 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074010723 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070916236 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068300362 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074172636 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074299655 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068656396 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071283125 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072591625 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076997474 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080506896 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071263659 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066878318 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073539993 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066778826 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064370333 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084440173 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068152873 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089252146 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065757499 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074341958 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081073403 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068071549 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066943998 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067095647 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067103166 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067278382 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069219639 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065846034 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065604325 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057217423 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066364955 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078795369 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073557996 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056142248 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071925291 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072113808 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072122969 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065230856 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07010836 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069855951 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070303402 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074131274 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072271082 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072043946 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068162538 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065328744 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074850334 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066906469 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064178916 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065743394 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071946341 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065820158 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075068258 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071744764 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066080447 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067397162 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068705346 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073227254 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06687293 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070547276 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064443138 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069115929 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071634126 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068763874 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067926966 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065671877 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066998759 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06746159 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055305036 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066814571 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053215613 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069984824 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065016857 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06563627 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066943746 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071413437 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07924843 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06840269 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072608337 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067668007 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0660397 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069942181 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060037106 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069700307 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082011317 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082239796 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066827165 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064992435 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081295541 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07160493 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066657064 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055986751 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074245179 seconds)
  done (took 9.168424177 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094245869 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087298424 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.0700129 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082837763 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090604832 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085608291 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074398171 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076294662 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068775801 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.08162971 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073016086 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076049588 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067773192 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076640304 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092813365 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076146916 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069456667 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075955804 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071552189 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099673813 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082040414 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082063837 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074024254 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067778727 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075110989 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079198325 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088452035 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079680087 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077526724 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075296717 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079355777 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088512494 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073491339 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071406541 seconds)
  done (took 4.460722846 seconds)
done (took 38.592629787 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.811906796 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.065442625 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.813904344 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.191353985 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.890893392 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.960400355 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.87429403 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.804343452 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.052460536 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.843496832 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.043639071 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.845970412 seconds)
done (took 65.945038934 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.831226611 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.946167874 seconds)
    (2/2) benchmarking "String"...
    done (took 2.078634479 seconds)
  done (took 5.770558151 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.093605223 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.47168538 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.053598124 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.807165102 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.810755288 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.114685266 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.610844613 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.328421978 seconds)
  done (took 30.94342212 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.043106596 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.009921661 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.494668751 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.53147569 seconds)
  done (took 15.87595735 seconds)
done (took 64.337555687 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.837400363 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.851774521 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.836500217 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.787997274 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.867201808 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.824719297 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.921758411 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.003457802 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.806430142 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.796297386 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.809014156 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.244555399 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.809011408 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.93935028 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.808045763 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.813989958 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.868197005 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.232680241 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.963849104 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.815505512 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.825853616 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.833952771 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.811459499 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.813346111 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.869712664 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.809885975 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.246089794 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.813746923 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.607444653 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.810585286 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.85273481 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.10019924 seconds)
  done (took 205.978364783 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.808884565 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.915787196 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.996367075 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.849046416 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.382120037 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.012144149 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.944730512 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.405321429 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.812996403 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.821766946 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.073667515 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.808694091 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.08854011 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.816230054 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.817574324 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.818466487 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.090206958 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.075375136 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.812350998 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.086331288 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.833283687 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.935156137 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.891193235 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.038842082 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.836684723 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.901920735 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.825912666 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.819292097 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.996804351 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.059858558 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.840888436 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.822062696 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.010215661 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.673924282 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.813741853 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.812988754 seconds)
  done (took 172.298441732 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.948073485 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.805349024 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.800390338 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.800642158 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.807151422 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.800330804 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.930726006 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.934404689 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.248956932 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.289176466 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.848971224 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626007304 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.797335538 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.865387929 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.808820382 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.799234492 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.812200754 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.823876087 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.79808644 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.798076966 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.925254571 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.808993245 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.004254615 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.804263564 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.796775362 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.802392746 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.16354256 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.797655699 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.803073788 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.040192033 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.797512819 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.797281643 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.698280895 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.158735712 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.886347248 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.800557078 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.803042889 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.798868759 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.018318697 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.799073377 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.797195263 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.798569488 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.800076739 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.797938724 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.977900365 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.798653971 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.924197417 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797606661 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.297651794 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.800322959 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.798456048 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.707703024 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.476467614 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.798709678 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.797103712 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.796979326 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.80070283 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.797380284 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.797518252 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.803575181 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.640989443 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.873218146 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.800395387 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.801908553 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.804116695 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.799898349 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.921654941 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.801122553 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.597011292 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.858762893 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.91911886 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.921771897 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.802354859 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.866431464 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.893803186 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.798918789 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.798971351 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.798626438 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.799561182 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.881188095 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.799156014 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.915127908 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.806970106 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.800198516 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.85021167 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.867806385 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.799863594 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.693823485 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.800908603 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.799708413 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.109066943 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.86675838 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.80015454 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.799620861 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.800344277 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.91651087 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.92856406 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.584932761 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.802279262 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.795581152 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.802422781 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.932173156 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.800440488 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.800193154 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.990297376 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.802304137 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.882791031 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.805212311 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.802008547 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.79967485 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.832754156 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.800980639 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.858521207 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.800764667 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.170917809 seconds)
  done (took 406.819469101 seconds)
done (took 788.84603999 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.477924308 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.438601069 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.542193159 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.45865315 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.436800583 seconds)
  done (took 14.094397591 seconds)
done (took 15.834251548 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.886868498 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.891810002 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827194994 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.891480957 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.822484693 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.890927205 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.872028386 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.826398689 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.858020563 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.827908048 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.860406584 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.827234661 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.813819255 seconds)
  done (took 25.837693954 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.026321382 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.035372568 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.869133812 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.040367854 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.845184223 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.026045019 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.963249866 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.947756917 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.946315384 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.815049924 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.813615733 seconds)
  done (took 23.070809605 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.03266382 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.036870238 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.871880806 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.039118313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.847053392 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.054326438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.963770962 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.949487824 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.951107581 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.814303826 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.812188361 seconds)
  done (took 23.115099547 seconds)
done (took 73.764213841 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.811017114 seconds)
  done (took 3.558475758 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.830325855 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.96949039 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.814523869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.811423932 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.812060391 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.810177576 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.812287152 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.810377658 seconds)
  done (took 16.414461202 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.805830838 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.807269969 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.805590129 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.805194985 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.805735153 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.80773713 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.806161799 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.808048754 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.80537849 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.808447728 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.806541485 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.809267548 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.808622614 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.80906573 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.809459857 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.806513733 seconds)
  done (took 30.658455712 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.807768788 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.806659718 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.806863596 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.806954939 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.807025215 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.806504536 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.807871277 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.806374091 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.807563074 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.80651144 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.808117263 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.806108236 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.806845195 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.80662502 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.806829879 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.807103023 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.806852927 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.807390982 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.811372855 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.807111638 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.807971567 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.807384164 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.808560302 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.807595825 seconds)
  done (took 45.122904522 seconds)
done (took 97.496239879 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.498374232 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.508469136 seconds)
  done (took 8.751904284 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.811662428 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.810592112 seconds)
  done (took 5.410490419 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.809939384 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.810024966 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.810285203 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.81037842 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.811102417 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.810810698 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.810339697 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.810991548 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.811220301 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.811697122 seconds)
  done (took 19.85238064 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.811543002 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.810329314 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.809011836 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.811570504 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.810985872 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.808486697 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.810933787 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.810745293 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.812156937 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.809903701 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.811255847 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.809972387 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.807186869 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.80515394 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.807597989 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.805563451 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.8049742 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.807579625 seconds)
  done (took 34.312087517 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.805779598 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.806294759 seconds)
  done (took 5.353441121 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.805693955 seconds)
    (2/7) benchmarking "second"...
    done (took 1.801833205 seconds)
    (3/7) benchmarking "month"...
    done (took 1.802321 seconds)
    (4/7) benchmarking "year"...
    done (took 1.802446514 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.803258882 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.802047987 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.803323009 seconds)
  done (took 14.362337411 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.805024362 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.957681818 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.025569659 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.489885651 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.802477414 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.804266825 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.769921508 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.803768786 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.807070325 seconds)
  done (took 20.004600446 seconds)
done (took 109.791894428 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.65002083 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.799327192 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.149413696 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.856865122 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.848976274 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.095317982 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.803877489 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.016070941 seconds)
done (took 42.955418894 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.88485972 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.260272434 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.286140909 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.137867999 seconds)
  done (took 12.421061646 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.780399902 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.317889642 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.837162472 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.392587583 seconds)
  done (took 20.073308326 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.195453306 seconds)
    (2/2) benchmarking "read"...
    done (took 2.158245874 seconds)
  done (took 6.094525945 seconds)
done (took 47.210772967 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799743327 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.80065266 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.800098 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.799802111 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.800392918 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.797644857 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.797257009 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.801789957 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.801615318 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.799926857 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.800558983 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.800536778 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799649365 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798076915 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797886304 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.797679203 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799622803 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.79832347 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.797303824 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798094561 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797190311 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798745464 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.797619094 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.797256581 seconds)
  done (took 44.914325719 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.800026046 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.797777996 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.799261149 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.799569642 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.795803802 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.800870993 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.797883659 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.796321114 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.799352474 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.79886207 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796209915 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.797463852 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.798220881 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.794940244 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797809992 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.795110827 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.799281332 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79545551 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797812911 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.794499607 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.797006662 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795834612 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.795441493 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796354424 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.794382146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794013831 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.79630458 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.794880883 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796776276 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.793649935 seconds)
  done (took 55.642689502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.800490956 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.80389662 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.796705806 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.796117106 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.795625339 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.795752375 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.796709928 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.796342102 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.79623756 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.796714261 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.796521744 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.796843413 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.796676403 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.796242846 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.797142484 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.796603306 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.795540164 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.796688219 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.797246778 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.797041294 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.796437318 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.797322224 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.797397381 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.796284929 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.796838714 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.796310214 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.796306639 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.795908011 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.796174258 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.795909321 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.79692275 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.795867259 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.796076786 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.795685734 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.795881579 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.795455229 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.801741266 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.80209061 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.79621122 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.797101509 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.796379123 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.797353656 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.795519203 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.795650363 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.796254505 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.796261722 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.796010677 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.79641392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.795250969 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.795603117 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.79586659 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.79589726 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.796676615 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.796707775 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.795833873 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.7969312 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.796761445 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.796329896 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.796698849 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.796467444 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.79605759 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.796095674 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.796861108 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.797903497 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.795929672 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.79546666 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.796298252 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.79569344 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.797011581 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.797374502 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.795203191 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.795719687 seconds)
  done (took 131.094039688 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.795350441 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.794126665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.794298185 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793195045 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792979785 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796009971 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.792525441 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796459802 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792202791 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.796949818 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795893076 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.793789254 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793589988 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796951355 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795347776 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.792926943 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.796000401 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793782827 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.797375832 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.795329305 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79573904 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.792990386 seconds)
  done (took 41.215860067 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79479585 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.796044188 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.792651769 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796191584 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79170314 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795988336 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.796215474 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796368393 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79521007 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792869933 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793150917 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797155531 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794319614 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79316486 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793369373 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.792724166 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795623518 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.79257205 seconds)
  done (took 34.031751417 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.792972124 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.792635765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.794873281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793309619 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.793240896 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.796141676 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793229955 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.796399593 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.795299389 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.794167494 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.795953647 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793899174 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.795021121 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791967449 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795521209 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.793838699 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.794752998 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792430715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795292319 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791993321 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.791514792 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795718671 seconds)
  done (took 41.202483535 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795018841 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.794553709 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.791780012 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.793168118 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.794100141 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.794770185 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.796265391 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.793529026 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.795478737 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.796533236 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792450973 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.79445452 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.791875479 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.792641107 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.792048456 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.792690294 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.795348135 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.793865476 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795046441 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.792162594 seconds)
  done (took 37.609164688 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798715894 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797964249 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798410233 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797654917 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798248252 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.7984486 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797046786 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.798917447 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798834923 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.798844646 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.798751079 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797738576 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798075928 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79833586 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799048436 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798756195 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.799568312 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797853357 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.797671003 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797055934 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.798163504 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797977333 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798614806 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.797758688 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.797629432 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797895093 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798921056 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.799947869 seconds)
  done (took 52.085687122 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794144267 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794207657 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.790366014 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.791164696 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.791598467 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.790489075 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.790717051 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.791676875 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.794347409 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791468293 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.793370096 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.792926702 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.794329837 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.794365382 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.793761693 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.795947962 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794353652 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.792394121 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792085574 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791340811 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.793793899 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793929864 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.794934542 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.792011962 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79178847 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.795374049 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793029207 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.792044086 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794798057 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791829308 seconds)
  done (took 55.519187473 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.813222305 seconds)
    (2/2) benchmarking "in"...
    done (took 1.814720275 seconds)
  done (took 5.358183368 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.792183989 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794866457 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.794323215 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.794428773 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.792410251 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.794563866 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.794405379 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792119385 seconds)
  done (took 16.080537786 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.800787557 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.795610555 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.795823959 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.795673408 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.799129538 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.801527732 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80744673 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.796045224 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.803036504 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.800166056 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.805096133 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.807862203 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.804591726 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801746649 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.800636814 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802440621 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.795763096 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.801402883 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.800494098 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.797955845 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801589933 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804470929 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804047184 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.794058445 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.802098288 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.81188181 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.807065538 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.797111732 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802898079 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.806351565 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.801885219 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.794513203 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.800426618 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.801520742 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.797325079 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.801716779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812044673 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.802985725 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.808562427 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.802153944 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797207231 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.795430819 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.80362587 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.805697644 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803930804 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.802213382 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.797547439 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.795574887 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.802142059 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.804672654 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.801940461 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801804395 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.796101291 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812592346 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.803484726 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80906292 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.80181767 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.805352669 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.808667483 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.81318456 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.818880827 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.808902824 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.803873474 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.801926601 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810705379 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.823463773 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810059562 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.797163324 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.796835998 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.79970401 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.812408158 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81761546 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.813010728 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.804012863 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803646764 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.799199285 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805272849 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799805957 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812527361 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.806600983 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.803178501 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804167929 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812336521 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821359708 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.804375694 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.804490207 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.803659445 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.80326342 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.804785371 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.814484212 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.803542181 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.799545402 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.804279919 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.804021552 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.807131853 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.805446559 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805042035 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805510143 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.798882388 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.801200294 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80424893 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808624605 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.812821293 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803948677 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805253593 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.813934907 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.801261524 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804484758 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.815442788 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.801427361 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.805839439 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.805728927 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.812802315 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.79900822 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.808039556 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.811705177 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.805617003 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.806631157 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.805406981 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.803100609 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814478586 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.828641005 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.801327378 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.803023549 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.808986877 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.814378803 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805193827 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.809959261 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.803004923 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.799790315 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.799297322 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.808987951 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.802788717 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.808767754 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.80801485 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.809433467 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.799964092 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.80338932 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.80742621 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.808542274 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.81024253 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.809196933 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.809455988 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.811629723 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.806498148 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.809348758 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.817563716 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.80811402 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.809076059 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.809149697 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.800912936 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.803299242 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.809974756 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.807169589 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.809663658 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.806916669 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.806722041 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.80796816 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.804034923 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.80368653 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803662784 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.80773386 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811710472 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.808825321 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.81404967 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.807856408 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.800501379 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.80410034 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.80439674 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.808537067 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.804324832 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.808059847 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.810250958 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.814393252 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.804715917 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.808541492 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.814676433 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809477387 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807385173 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.807806177 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.811015048 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.816712792 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.808071056 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.817474898 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.809080142 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809121884 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.805860002 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.810651125 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.809505906 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809349721 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.810617009 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.81143917 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824566422 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.819015784 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.811110649 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.809590574 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.811207594 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.812602748 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.816423952 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.810040926 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.805779886 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810297028 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.8089975 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810885544 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.812082105 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.809175176 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.809850621 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.806232267 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.806510246 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.809953182 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806679576 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.811776052 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.813988585 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.803909268 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806009925 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809846534 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.809845548 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.804057071 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.810207845 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.811559562 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.807597747 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.810844868 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.821519708 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.804159146 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812140851 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.813667851 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.812341294 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.81120627 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.806251502 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.813512953 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.812593275 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819233891 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.813506011 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.812398649 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819690526 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.811455466 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.81193213 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.8165297 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.808315939 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.804342862 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.813816026 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.81403305 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.80937945 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.810978393 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.811585163 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812089768 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.809107567 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.819361816 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.805077557 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.812330805 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.809105064 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.816050402 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.807160249 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.814756618 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.814965824 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.813251287 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.815570925 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809740966 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.808654377 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81567827 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.81404827 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.812893165 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.8130386 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815008887 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.818703934 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.819777445 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.813361737 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.81829242 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.815101768 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.812403093 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.814907549 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.8132965 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.813906306 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827930049 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.81970041 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821276781 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.816882828 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.809878358 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82090431 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.814944427 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.818110736 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812962633 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815564607 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.813900778 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.812951001 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.807004757 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814772593 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.810515578 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815046581 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.814769229 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.814113674 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.812027363 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.815530799 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.815026397 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.815953977 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.811345141 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.814300876 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.811365715 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.820368293 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818372731 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.815359067 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.815603776 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822745624 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.817018693 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.818598494 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.815666818 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.815806169 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.815851805 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.81853443 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.815784912 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.818832916 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.820975051 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.818283709 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.825185494 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.815810012 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.826578019 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.815251059 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.819051859 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.822271654 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.810236889 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.814236663 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.818039288 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.816182825 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.82589612 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.815543676 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.81573359 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.819790831 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.816120367 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.815698539 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.812190528 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.816009313 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.814124395 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.817876372 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827231034 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.817932184 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.820605626 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820032838 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.810514686 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.816957532 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.813581971 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.81715092 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.824863025 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.8186195 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.818385082 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.818640792 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.818849788 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.814220251 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.818260917 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.814906026 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.810611208 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.813701547 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825953055 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.819361479 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821358075 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.815612575 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.8312058 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.818635347 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.825438056 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.818906904 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.820409857 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.817560036 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.813883056 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.823310434 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.818756032 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.819881376 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.818553402 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.819978735 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.817774921 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.818561872 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.822107427 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.820011166 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.82033325 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.819248784 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827863489 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836905535 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.820757422 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.819229475 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.811642588 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.821203052 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.823497658 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.820651424 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.81943297 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.822213197 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.827500883 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.821023328 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.820851836 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.819180507 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820918637 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.820398065 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.816486229 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.816483154 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.819637364 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.815897131 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.823678608 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.821783109 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.827044705 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.816486887 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.822289149 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.822436598 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.822623611 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.831881975 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.820166005 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.822892179 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821750724 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.817288599 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.82237418 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.821950886 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.821367592 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82386339 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.818346154 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.823405106 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825566243 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.827389463 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.824269658 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.822013968 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.821645452 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.823125613 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.825215383 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821455476 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.821306217 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820791881 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.824381248 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.822944889 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.825963626 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.820555284 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.819177447 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.823295254 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819128809 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824902296 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.826353438 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822518752 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.814263515 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.817704529 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.819249289 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.823398555 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.824138291 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.831969068 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824062803 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.830058909 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.828983235 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.827252722 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.823580676 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824695413 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.830615075 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.82407586 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.82550755 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.824353885 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.825781894 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.824228272 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.826096714 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824150478 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.833016537 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.824718634 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.82432107 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.833872835 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.826647151 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.823218843 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.825831623 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.827519534 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.827315879 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.816644193 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.820016873 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.825661268 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.832337738 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.826810203 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824500064 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825877292 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.824408724 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.824981431 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.828312441 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.821191368 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.826441684 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.818932683 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.827291892 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824784325 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.820080632 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.817394528 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.8250021 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.827370831 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.828682932 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.830243974 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.819063694 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827315322 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.826861256 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.827990918 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826823407 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.820530046 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.820701496 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.818474809 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.825408316 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826243516 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.827263274 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.829232288 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.825496142 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.826056414 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.821815502 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825672324 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827413759 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.834481849 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.82639878 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.820322485 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.8274439 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.827611863 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.828899336 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.827000681 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.82679488 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826903288 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.829723535 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.824874257 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.826355657 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.824304535 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.82912045 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.842595773 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.824126446 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827659393 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.828706156 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833748319 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.823846691 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.821341599 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.823907805 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.831864818 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.83173336 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.832929983 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.826441609 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.83540575 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828726708 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.828107614 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.825861872 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.830675099 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.834051826 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.83020936 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828109148 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.826941346 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.832057489 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.842989337 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.823624493 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838578175 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854013043 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.829800982 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.831194976 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.828632431 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827799589 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.829615729 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.83298278 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.828992062 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.82435779 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.826410813 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.828611716 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.828072405 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.83290655 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.831796751 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.824614122 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.824102992 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.827535317 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.833829352 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.821637106 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.828258062 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.824385785 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.828603089 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.829490791 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.831285383 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.82936633 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844016122 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.839230813 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.826077955 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.828036936 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.823653782 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.83392333 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.831164192 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838737467 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.830650309 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.830674411 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.830825797 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.832116056 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830679955 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.823424931 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.831206131 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.830754452 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829651231 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.825336708 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.845274094 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837779834 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.836428385 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.831151062 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830914155 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.827683716 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.832751 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.829970502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.833013472 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.834845772 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.832422645 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833663438 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.827465718 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.829247509 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.834626073 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.833970248 seconds)
  done (took 1084.333718996 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823688082 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82529579 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824957245 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823954914 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823701118 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825270557 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824369754 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826478722 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.823001628 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824710141 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.824167754 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824707749 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.826370853 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826648887 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825829656 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825805284 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825721269 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.82531144 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824677493 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824262835 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.825852413 seconds)
  done (took 40.088681431 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.829925241 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.825568347 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.823773198 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.830718453 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.826590414 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.830296107 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.825404487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829446607 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.829832293 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826066678 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.829022647 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830006383 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.827201131 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.827299337 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827351095 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831011411 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.829685578 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.825861437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.830684877 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.826813366 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831502131 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.826657495 seconds)
  done (took 41.985399135 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.834691865 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.834479614 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.835065735 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.828598008 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.829966866 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.828012345 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.833834174 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.829936927 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.83113972 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.836829245 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.834166912 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.837055075 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.839216008 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.835525782 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.838269209 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.831264031 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.976250997 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.836070937 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.836491938 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.83601573 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.82924121 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.844341399 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.829155144 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.82893048 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.8357 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.832758216 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.83327827 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.830305055 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.83446642 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.836413784 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.837259555 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.832669767 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.836136756 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.83948348 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.838373965 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.837329843 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.836587707 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.83758455 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.830309459 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.832431501 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.846403283 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.847711292 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.836480793 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.847461814 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.833981652 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.832746022 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.839587103 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.843040953 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.83038532 seconds)
  done (took 91.839558196 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.832847509 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.833640631 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.830831829 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832593659 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.831210354 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.833455289 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.832628545 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.832447859 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.830096441 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.830165236 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.833910354 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.830765369 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.829735168 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.832695435 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.831973732 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.829602445 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.829130921 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.830274493 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.830529071 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.831125715 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.830555357 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.831858102 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.833835934 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.830294073 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.832524878 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.830439477 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.829790162 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.831383321 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.832739541 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.831083069 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.83271 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.831985963 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.834178734 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.831582711 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.831423114 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.833321506 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.833491511 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.829594989 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832803909 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.831644593 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.833117622 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.834957646 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.834194375 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.832729484 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.833698439 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.830381304 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.829974928 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.830332669 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.8315836 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.833461904 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.834037034 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.831344613 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.835751538 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.831986834 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834297262 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.833087217 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.830342231 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.830930324 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.833013977 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.831726841 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.830944449 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.8343801 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.832888232 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.833535667 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.834529001 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.832812546 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.832327845 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.834778965 seconds)
  done (took 126.353920337 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838748884 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.837695433 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837906671 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836300454 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837900647 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.837755777 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.838251416 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.837955667 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.83962249 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.837421361 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839438816 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835983738 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.840820911 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.837083937 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.840123786 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.838784063 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.842204479 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839903343 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840210812 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839837215 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.840586655 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841949318 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.840549656 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.83968884 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.842352561 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.840986102 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839179619 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841148413 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839716513 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.84141662 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.840246225 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.839832061 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840257323 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843684897 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.841652738 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.840152026 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842040745 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84130119 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.842773572 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841474442 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840796894 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840109378 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.842300286 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.843068014 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841944993 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841748057 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.842605984 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.843073565 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836301786 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841115161 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.840645789 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840614289 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841257141 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.841653806 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841215323 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.839009618 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841818635 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84123454 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84340387 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.843178387 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.841537986 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.838616833 seconds)
  done (took 115.874011683 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838852673 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.838571373 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.836252219 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.835782071 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.839361069 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.836028988 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83736746 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.837867349 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840039209 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.838493894 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83798123 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837170234 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836521191 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838402486 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.835539565 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836821511 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836005603 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838301903 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840609092 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.83642434 seconds)
  done (took 38.525057527 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.838301842 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.839072526 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.838879201 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.838348992 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.839878204 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.838576737 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.840510091 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839859218 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837924026 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841269509 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.840625833 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839373151 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839040736 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.838853632 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.841519131 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.838655745 seconds)
  done (took 31.205401683 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.838529644 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.840126578 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.846028961 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.845172862 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.839064754 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.836395401 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.840397141 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.838066896 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.837830725 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.840429045 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.839937783 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.841489822 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.842254661 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.846278385 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.839398587 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.841538217 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.839872684 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.8387988 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.841215698 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.8448247 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.837997725 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.840238522 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.840653628 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.840997394 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.840982426 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.840449448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.83882537 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.839790167 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.839456181 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.840418396 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.838454329 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.839707805 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.840480094 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.840278009 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.846742369 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.843038054 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.84198895 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.842439566 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.841500148 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.843362391 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.844116226 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.838740013 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.843474416 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.841215731 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.841564543 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.843165903 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.839661152 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.841969144 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.84093776 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.842741897 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.844035162 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.847135732 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.842733473 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.844110734 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.842470265 seconds)
  done (took 103.050635256 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842567999 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.843923749 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.839169572 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.842007963 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.842607123 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.841285575 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.842643718 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.841841613 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841671771 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.84476994 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842663098 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.843197088 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840338153 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.842566696 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.842552142 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844534351 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.842828467 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.840883532 seconds)
  done (took 34.941910684 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.840944735 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.842755168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.844851623 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.842112623 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.842210631 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.844316666 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843346741 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.844770502 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845717125 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.845584731 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843860199 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.84512813 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845279359 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.845141251 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843151217 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84316576 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.847305999 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847221049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.843570646 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844116508 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.846839095 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845721099 seconds)
  done (took 42.356733953 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.850048601 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.8489455 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.866049818 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.890309358 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.876392269 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.850028135 seconds)
  done (took 12.9637037 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846214499 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84560713 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8438222 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846945102 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84556392 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84392101 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844192402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843793281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847755374 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845652482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846912938 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848087648 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845920882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844089708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847183247 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847535783 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844945061 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844151675 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84641636 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847921282 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843450161 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845786777 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843211661 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846394567 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845164076 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846139361 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847093961 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844389095 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845506994 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846832803 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847775223 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845584312 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847009158 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846806327 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848726119 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846765397 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844786366 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849698073 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848285355 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846778448 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848349011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848699174 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848044007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847751078 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84893627 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847044052 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847042452 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847141304 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845641594 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848471621 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849361845 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846543868 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848560953 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848684763 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848910931 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847991262 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84813953 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846883525 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850919088 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847122159 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847281922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847107336 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847875252 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846160234 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847697654 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847393436 seconds)
  done (took 123.670398044 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847837021 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847143542 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846828749 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847377682 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848370936 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847958249 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848411708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845551669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847963866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847448395 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851090176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84667093 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846702604 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847431536 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847047644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847873579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846428239 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847972556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848412317 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850263631 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847576303 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84855223 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848058907 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847352027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8472577 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851999903 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848076778 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848643773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848499293 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846460825 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850303746 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847863012 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848421099 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848831606 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848379983 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848995776 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849262327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848920508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84861768 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851871867 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849633856 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851534913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850108829 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850420872 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850549427 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848127069 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849675347 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848736726 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85063302 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850202054 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849181774 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849749092 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8505079 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850356427 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848678574 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850570051 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849177754 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849663834 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851194636 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851319526 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849520654 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85271251 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854335036 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85150696 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851822559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852598865 seconds)
  done (took 123.82831815 seconds)
done (took 2527.506746904 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.913974253 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.891874475 seconds)
  done (took 15.592488139 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.016515201 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.970103581 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.85219789 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.861902019 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.852282556 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.875139344 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.870092333 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.852909526 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.853345106 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.854824018 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.852854689 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.039706953 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.873789672 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.853566418 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.85184458 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.946019343 seconds)
  done (took 52.070716771 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.856376819 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.858962412 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.866289267 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.860210821 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.855372418 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.868711763 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.888481091 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.859928872 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.890240252 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.869365665 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.925303418 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.865973659 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.857723101 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.906693673 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.870164581 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.873777051 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.943796269 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.933655116 seconds)
  done (took 35.6348181 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.935046931 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.857436558 seconds)
  done (took 10.585976064 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.85091114 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.873703307 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.853079311 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.876475732 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.853769016 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.893552451 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.88682035 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.883510846 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.859296604 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.853669586 seconds)
  done (took 70.484192881 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.861241269 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.856941705 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.858147817 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.854710041 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.849944257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.854325407 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.858302675 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.857213953 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.548293593 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.893993938 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.865599696 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.863193123 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.857925101 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.861058149 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.852837991 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.879714856 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.974389111 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.853678413 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.854581588 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.863737906 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.856828485 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.949343032 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.871509564 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.856232222 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.887476438 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.546467801 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.864989257 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.865400818 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.994791967 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.853992764 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.860084962 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.861939432 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.860266815 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.248272913 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.159338648 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.859053255 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.867689507 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.867390266 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.852580743 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.031476097 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.861422473 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.866881795 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.852739494 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.136690776 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.943285577 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.901542014 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.225513038 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.863856029 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.861298343 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.889577015 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.861345302 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.862502188 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.871897466 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.369391617 seconds)
  done (took 132.194238829 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.855089961 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.442447793 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019294714 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854955562 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138225582 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098415363 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.858368235 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905130356 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.858043209 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.103683267 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031925657 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.980196063 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.858539211 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.856645517 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855424088 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.854746422 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.009533264 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.926026295 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.856424379 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.856297975 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891836043 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.120532006 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.984963628 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.857460897 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.879280323 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084384277 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.982831918 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.97359776 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.372890411 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.853676284 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923551606 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.857738243 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.855955353 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.853792198 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.022184156 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.96418997 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953329495 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.858041591 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855756456 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.854564784 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.520074994 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077817575 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.968461703 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.99314885 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104297214 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.085085903 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.505884761 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.854815272 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.492943453 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.053779518 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.065607748 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.111370303 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.985756406 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.85839027 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.103959977 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.854698223 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855484916 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119262265 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084811759 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.972879461 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858989312 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.8567333 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85638221 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.173467545 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.859454481 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.965152031 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860696611 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.858271898 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.967981837 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974441297 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.088990686 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099867084 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.888070903 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.768694497 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.368049634 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140336387 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.929608787 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123650589 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859628687 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.856801373 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951773155 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.617877217 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.033410476 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.174516901 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.125257526 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901071917 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.462394395 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.85659294 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.104491786 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.10746283 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.087693628 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.101763082 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.024338699 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.17817118 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858362041 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.856074225 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.063107635 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.991853158 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.861203206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.220777491 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108205104 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.58947105 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.890023102 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.164745425 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999277388 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.862598052 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.485730466 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.858091853 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.059523352 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902268465 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.859156735 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859752028 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.106892547 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.729461006 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858544085 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.65107244 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.925405137 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.862994474 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.123066041 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.861403242 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100736891 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.862336376 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.170031841 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.4598533 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90304784 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.051998321 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.105074855 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.648786828 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127074127 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.172384533 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985559535 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119682207 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.677086195 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.860259445 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142834742 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.862815136 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.859930857 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.029736369 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861413248 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.015288317 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.863067065 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120060027 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886437292 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032046304 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863022848 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135903399 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908049277 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913286222 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.862382962 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980051046 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863259779 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.906472029 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.043793844 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.8629671 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.859100822 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.43102781 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.861074377 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008988881 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.160346214 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88526954 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.932820028 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.392913714 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860558035 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956488308 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892317165 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.462825775 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.860899683 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.031123074 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.863731954 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.838399585 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.860556794 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.17284144 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.09026686 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.862255164 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.861373789 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.660493432 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.565015157 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861256825 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.039126739 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.103747219 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.511408145 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082573635 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866639154 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994644266 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.865090937 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.94702408 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.213268014 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.86210109 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.863240988 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.861818311 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.865166608 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862657498 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.08991418 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.89156655 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.550858612 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.00201448 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108269504 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.17873505 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.126193754 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.913848233 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.863867298 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130236046 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.867208683 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.933454544 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.866965612 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889272393 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113041976 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865578177 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093871159 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.152008632 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.914284804 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915359275 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.865127136 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864044566 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.862821756 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.00896584 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966551268 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865414183 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.863605667 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.982369924 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993417091 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055502909 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.456086955 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.040870998 seconds)
  done (took 902.099548024 seconds)
done (took 1220.449807601 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.865304615 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.86817996 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.851042057 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.866650203 seconds)
  done (took 29.251239518 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.87026321 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.872332301 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.871031977 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.872007298 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.869281517 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.870138224 seconds)
  done (took 13.02443458 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.998785184 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.867466808 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.865980199 seconds)
  done (took 21.532754879 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.939376509 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.280918173 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.975301656 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.316850516 seconds)
  done (took 10.311464407 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.871799814 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.871777648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.871386129 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.870211527 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.87083774 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.872215241 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.870172522 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.870987701 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.872461497 seconds)
  done (took 18.644514571 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.931216814 seconds)
done (took 98.494736361 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.877331352 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.069034463 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.537313224 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.898715189 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.866395353 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.849100648 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.906768077 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.995738356 seconds)
    (9/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.876161207 seconds)
    (10/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.372104355 seconds)
    (11/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.149596632 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.969096975 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.977183458 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.88877456 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.204051314 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.640286034 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.627406913 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.99798143 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.259478147 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.226899273 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.203661764 seconds)
    (22/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.883161129 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.19894781 seconds)
    (24/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.698909605 seconds)
    (25/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.81087566 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.923646387 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.000696827 seconds)
    (28/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.139510342 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.697141253 seconds)
    (30/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.985462084 seconds)
    (31/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.879229599 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.992913627 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.818560218 seconds)
    (34/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.007433001 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.869504718 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.998037285 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.137946696 seconds)
    (38/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.373958193 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.919417865 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.866838559 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.987300337 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.072325613 seconds)
    (43/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.897722699 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.364526033 seconds)
    (45/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.8708249 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.084825574 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.260809105 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.97987148 seconds)
    (49/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.029785636 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.151722245 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.012590539 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.880963467 seconds)
    (53/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.185004594 seconds)
    (54/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.382888606 seconds)
    (55/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.958082078 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.165892423 seconds)
    (57/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.853576438 seconds)
    (58/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.750284776 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.922742573 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.951561432 seconds)
    (61/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.22098274 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.231399962 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.246178469 seconds)
    (64/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.2188345 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.974103559 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.449481727 seconds)
    (67/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.984408585 seconds)
    (68/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.851543058 seconds)
    (69/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.033446635 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.201337658 seconds)
    (71/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.853834366 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.961646503 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.143603025 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.216032828 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.398954298 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.162115269 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.98260671 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.260553478 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.557075495 seconds)
    (80/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.009744439 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.234139929 seconds)
    (82/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.041042208 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.871727028 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.472158616 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.094866998 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.259846044 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.873164952 seconds)
    (88/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.990054756 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.658477038 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.100323813 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.87812877 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.218025656 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.9418486 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.04367851 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.12563357 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.544737227 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.918190753 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.560583373 seconds)
    (99/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.965560578 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.940410773 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.147845423 seconds)
    (102/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.974593986 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.276389574 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.086437167 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.10200153 seconds)
    (106/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.95677779 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.810122994 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.879341429 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.97069521 seconds)
    (110/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.166445413 seconds)
    (111/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.025519921 seconds)
    (112/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.074174928 seconds)
    (113/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.873902143 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.921054587 seconds)
    (115/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.937091864 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 2.327175306 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.892712627 seconds)
    (118/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.146402154 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.967347374 seconds)
    (120/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.898165799 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.996158004 seconds)
    (122/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.854665784 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.531627771 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.113353666 seconds)
    (125/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.129585862 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.27418495 seconds)
    (127/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.8724552 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.878398753 seconds)
    (129/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.072036638 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.24660958 seconds)
    (131/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.043665697 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.066740348 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.980049243 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.857123146 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.943438135 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.075083325 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.094553997 seconds)
    (138/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.899800198 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.018293683 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.076246333 seconds)
    (141/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.156434588 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.022763858 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.013153676 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.746559852 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.881936128 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.874349802 seconds)
    (147/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.240122708 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.894220157 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.256977923 seconds)
    (150/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.895722443 seconds)
    (151/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.856038762 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.933916946 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.257536392 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.786262077 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.862730879 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.289035885 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.879904846 seconds)
    (158/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.90111973 seconds)
    (159/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.857206153 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.141221454 seconds)
    (161/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.905331579 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.056430085 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.859814706 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.957134888 seconds)
    (165/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.244602873 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.899858106 seconds)
    (167/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.874236746 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 4.515624095 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.005247673 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.753292751 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.091845119 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.441683184 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.56097197 seconds)
    (174/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.936103896 seconds)
    (175/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.184868285 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.16594022 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.266702961 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.006942898 seconds)
    (179/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.010374784 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.056355944 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.100046643 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.877731625 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.866019133 seconds)
    (184/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.492876887 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.034461586 seconds)
    (186/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.881540496 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.896456442 seconds)
    (188/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.136458996 seconds)
    (189/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.971997047 seconds)
    (190/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.37384444 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.95105702 seconds)
    (192/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 4.26095801 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.889842717 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.079524649 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.035447024 seconds)
    (196/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.463814244 seconds)
    (197/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.958899537 seconds)
    (198/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.89751535 seconds)
    (199/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.267490446 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.933764655 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.930695454 seconds)
    (202/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.017080119 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.791485914 seconds)
    (204/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.482119861 seconds)
    (205/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.539225775 seconds)
    (206/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.019003662 seconds)
    (207/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.974425697 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.476187876 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.059366469 seconds)
    (210/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.967039461 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.955054116 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.591984493 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.082116664 seconds)
    (214/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.475808266 seconds)
    (215/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.934764846 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.044207008 seconds)
    (217/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.218685676 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.308249481 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.207523641 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.860533732 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.281959292 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.88139574 seconds)
    (223/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.967130269 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.950486175 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.809144487 seconds)
    (226/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.116720913 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.90167046 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.877240893 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.880264327 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.920440342 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.254715952 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.565254161 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.504393577 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.982727969 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.765568849 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.178565035 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.884327657 seconds)
    (238/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.911206002 seconds)
    (239/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.031314762 seconds)
    (240/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.089562787 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.546301391 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.911650103 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.170750425 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.400264227 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.981298816 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.13004683 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.892917928 seconds)
    (248/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.086756863 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.176881328 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.177677915 seconds)
    (251/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.075323378 seconds)
    (252/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.00572855 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.417705851 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.97603582 seconds)
    (255/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.963527753 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.182409187 seconds)
    (257/309) benchmarking ("sort", Float32, false)...
    done (took 5.637320232 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.223677557 seconds)
    (259/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.882216436 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.892876094 seconds)
    (261/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.867298935 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.080429736 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.907512018 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.861685843 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.976812449 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.263251755 seconds)
    (267/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.902215796 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.880407545 seconds)
    (269/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.999561156 seconds)
    (270/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.901350036 seconds)
    (271/309) benchmarking ("sort", BigInt, false)...
    done (took 6.881752531 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.090582106 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.885917914 seconds)
    (274/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.980422736 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.885879949 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.876055664 seconds)
    (277/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 8.112773929 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.924282049 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.891858515 seconds)
    (280/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.650559627 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.314191317 seconds)
    (282/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.012953582 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.013466574 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.907464841 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.139862996 seconds)
    (286/309) benchmarking ("sort", Float64, false)...
    done (took 5.67975918 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.692056247 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.210509749 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.969751957 seconds)
    (290/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.763032814 seconds)
    (291/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.622697594 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.04400276 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.863429406 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.4383386 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.993678194 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.893404737 seconds)
    (297/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.489056731 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.041314441 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.816502552 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.923088297 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.190542216 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.888955777 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.869530912 seconds)
    (304/309) benchmarking ("sort", Int8, false)...
    done (took 4.887026868 seconds)
    (305/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.908359614 seconds)
    (306/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.987256992 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.904827795 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.882184078 seconds)
    (309/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.43256408 seconds)
  done (took 1026.270290377 seconds)
done (took 1028.083417284 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.914903906 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907759799 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.892370706 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.914355436 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.003577442 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.923950461 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.903012134 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.894444826 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.942001659 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.940865266 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.890780288 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.924725648 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.893500381 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.89134324 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.890842216 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905527886 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.199793547 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.920265952 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.907839595 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.90106554 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.908734825 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.890627819 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.941903958 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.924956871 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.897173697 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.895726348 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.895163975 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.909624887 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.004867224 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.894865402 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.89695006 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.901682248 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.200140676 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.920408483 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.888376777 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.910716989 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.903500154 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.903778413 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.894935139 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.924105129 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.342024106 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.898741656 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.893319641 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.89506635 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.894077874 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.897689837 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.894940275 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.89985674 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.905480418 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908461094 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.33824006 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.915098484 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.895630903 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.894994084 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.906206808 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.89211317 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.898340742 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910499649 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.913011335 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.909367086 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.189373647 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.929040041 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.896351726 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.910543194 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.901177044 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.377840844 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.896567779 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.900134657 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34285641 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.906997917 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.376900296 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.910095447 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.898347672 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.908392186 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.926571082 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.202699628 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.919976543 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.893804533 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.900156974 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.891540457 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.905201706 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907702858 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.901222644 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.894790131 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.909020497 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.928057597 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.906784188 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.895991667 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.904642199 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.914453841 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.902497967 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.90582147 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.900692875 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.890641955 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.906112381 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.900192261 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.898440748 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.898202488 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.90230009 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.906503541 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.342559161 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919448558 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.894428782 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.894636574 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.89785784 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.909739599 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.343376035 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.901688228 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.920091169 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.944973141 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.899825165 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.194105466 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.927764366 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.911986942 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.906865682 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.90114458 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.893749344 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.193298342 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.37071841 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.916696843 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.900829891 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.894824494 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911643513 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.900566765 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.895911263 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.206694857 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.928179993 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.9104476 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.019183987 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.909454649 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.926327476 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.896037038 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.902807892 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.926778284 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912280036 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.930060045 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.902924037 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913199373 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.91409523 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.895405912 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.908647395 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.911445716 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.901179186 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.905279635 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.893797662 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.926019289 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910972278 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910280627 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.919969443 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.018564906 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.896620308 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.19561496 seconds)
done (took 297.94072293 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.970350585 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.888635181 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.999726102 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.894474607 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.984091747 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.985335953 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.891891038 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.889806279 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.890623101 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.278912846 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.890773558 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.889879371 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.895173961 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.891473936 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.981688725 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.893272614 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.889635863 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.331986222 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.898061475 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.96906747 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.897727883 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.891458803 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.89454509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.385069091 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.894828478 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.893933475 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.968656127 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.894611954 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.247677067 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.899779107 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.898345935 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.33478081 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.990391877 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.914883344 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.905104431 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.901545333 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.987715412 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.900509793 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.982223275 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.982217931 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.002481314 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.940726946 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.897489231 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.89847878 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.900599599 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.898668604 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.893026989 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.922776119 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.892274724 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.89217919 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.242523237 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.906688585 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.903464501 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.893828321 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.893671402 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.920959693 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.893655528 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.901630997 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.989006726 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.900147362 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.964141262 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.283991313 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.382336071 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.896180767 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.898174648 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.894323062 seconds)
  done (took 186.601162986 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.966962 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.976153897 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.970332286 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.904539781 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.950355851 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.972918219 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.904025381 seconds)
  done (took 15.472513064 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.908488823 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.899230934 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.953333436 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.951764645 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.900633767 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.053283831 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.898279467 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.912637897 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.893404169 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.959186116 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.898756295 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.897864491 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.904691771 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.901274113 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.950462425 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.913101458 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.015224405 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.901662898 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.902814115 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.0578307 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.896474159 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.904654245 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.95691901 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.913875684 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.899992051 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.90865723 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.486011167 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904201412 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.895726239 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.898718342 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.89694077 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.944435532 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.900792003 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.89867715 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.895941979 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.02509007 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.902691452 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.897017012 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.899365608 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.904021628 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.897879135 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.901101986 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.89934333 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.896496175 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.900447093 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.928061413 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.900817048 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.898203268 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.899718529 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.899717952 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.95559586 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.901902646 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.898821152 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.89706241 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.961681227 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.906209685 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.906346347 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.896952684 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.898858751 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.898390403 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.059518214 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.953360125 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.900179551 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.954644586 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901974275 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.901810704 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.901109963 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.89996786 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.962090485 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.900300476 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.951636965 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.897320506 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.064445437 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.928012428 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.901003947 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.908426119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.907582641 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.90526634 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.904230234 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.912467551 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.899326331 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.905960397 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.911222611 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900308613 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.317543451 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.017881092 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.019608664 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.897889406 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.918147049 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.912027483 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.900291 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.959095834 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.903393278 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.90237223 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.958460314 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.021778072 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.96499819 seconds)
  done (took 209.404716363 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.915048675 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.912386544 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.907422259 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.920289657 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.905708257 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.905875378 seconds)
  done (took 13.29999482 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.91023969 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.902419993 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.903810466 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.903650656 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.90614507 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.902960792 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.906971134 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907572509 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.911566868 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.902126733 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.906605486 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.904710416 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.905103809 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.906975717 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.907920739 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.904249174 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.907192926 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.899667941 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.90609716 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906366704 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.050616516 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.90780081 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.908455523 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.90845561 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.908122895 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.902070552 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.914363911 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.901264637 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.904406986 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.917143292 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.911668445 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.904858728 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.909600924 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.912079712 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.912931842 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.907904735 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907424072 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.908655986 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.902306517 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.907442863 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.906983626 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910386094 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.90663767 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.906333809 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.911118296 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.914515417 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.912234096 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.918145775 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.909101067 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.907089789 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.908447314 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.905167967 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.907997072 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.908176682 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.913176989 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914768056 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.911828464 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.908279118 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.909055577 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.911230446 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.906289805 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.907310884 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.911594858 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.913552823 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.913922348 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.906463308 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.910535868 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.912256276 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910376045 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.904036398 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.909466318 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.905175749 seconds)
  done (took 140.367244353 seconds)
done (took 566.98970176 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.14423147 seconds)
  done (took 8.980989066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.089876782 seconds)
  done (took 9.011394439 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.575026299 seconds)
  done (took 10.409018094 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.915345748 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.933067534 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.914897319 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.907356462 seconds)
  done (took 29.516639922 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.237118504 seconds)
  done (took 9.074106765 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.913371084 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.900374908 seconds)
  done (took 15.713672109 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.063874711 seconds)
  done (took 8.900523774 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.106063777 seconds)
  done (took 8.945908108 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.911947206 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.915457114 seconds)
  done (took 15.677684005 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.887479852 seconds)
  done (took 8.724396902 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.619878551 seconds)
  done (took 11.467233984 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.909663583 seconds)
  done (took 8.76164705 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.946704317 seconds)
  done (took 8.785738852 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.098249 seconds)
  done (took 9.933774988 seconds)
done (took 165.739348021 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.909731075 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.90769963 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.907465322 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.90823493 seconds)
  done (took 29.472417628 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.940798894 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.942835714 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.941321007 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.950514211 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.943983801 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.94056342 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.93390556 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.93261076 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.952976597 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.94313584 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.942914671 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.943567672 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.941902239 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.931887922 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.942733014 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.943515112 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.95231229 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.943031707 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.932287535 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.943614227 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.909358285 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.951587594 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.945924504 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.907387503 seconds)
  done (took 48.39195947 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.10958512 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.981933128 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.06549017 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.965754721 seconds)
  done (took 9.961438643 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.959612351 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.961640314 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.974413559 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.011633553 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.039046362 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.970204101 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.936296665 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.930092675 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.917348579 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.962156592 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.037501321 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.977006821 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.044371706 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.908333085 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.095245446 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.909367882 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.908701759 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.961485052 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.0121417 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.026390355 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.909274822 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.960691435 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.962936696 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.978268692 seconds)
  done (took 49.195268538 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.908329113 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.9164138 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.915761021 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.908193849 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.907414534 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.909509782 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.913822044 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.910119692 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.930563738 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.910306575 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.906405411 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.909097612 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.905902118 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.907442741 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.908379149 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.920435869 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.923760959 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.909240394 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.912094571 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.916337434 seconds)
  done (took 40.091351509 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.90537026 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.761078832 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.258062679 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.164132465 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.908558161 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.906439654 seconds)
  done (took 31.74497506 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.927491939 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.978658499 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.923674451 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.971173864 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.053956496 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.921555944 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.914861481 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.983601032 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.027060222 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.990472239 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.935242007 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.941321308 seconds)
  done (took 25.411710275 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.923140626 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.908390024 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.911788825 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.927118897 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.924076194 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.922082445 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.922399504 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.907959931 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.929823997 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.93401428 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.922532992 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.928860071 seconds)
  done (took 44.906970587 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995008605 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.956312977 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.946074557 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.586631746 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285029853 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115519648 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.515726447 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.237826939 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.909894204 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180413843 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896827657 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008722858 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.164264241 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459425764 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.941484304 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.364626251 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193227126 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114807448 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933637774 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535991243 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96688282 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144896105 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.602008696 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.957191488 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119403222 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.041461786 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.168791221 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907672405 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041578781 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942300688 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918158075 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90614177 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179918726 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280442326 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010994558 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91750324 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.525917103 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.631092686 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.951261466 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.583418762 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.569434099 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.016088766 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918942032 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906976794 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.841493973 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.112930061 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28498464 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.913168681 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.617297437 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907151863 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919099044 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000747281 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.911464643 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.726214255 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823454949 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.912828237 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.906792637 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918272077 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475607843 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.961520759 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.145839044 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.886064115 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.003364696 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.595634758 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282145609 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.048446437 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.913571234 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912454394 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84450557 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.608976082 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961045472 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236512417 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.928189851 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559302053 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204490587 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.944087152 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851575305 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181277027 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.495092881 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.885201583 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138231583 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90806652 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844061275 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.854039634 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843947709 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15889348 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943612955 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.675175575 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950767443 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.236184277 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921920308 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928103206 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932589698 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135259786 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.794350851 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910552302 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.665814993 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051866928 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934378153 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239439655 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84709282 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.914541613 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169555005 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.122970101 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.045385945 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.40104921 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058883043 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.518511794 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.964859019 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.131525419 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959779343 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.171557755 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961450921 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97089192 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964602281 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.910619717 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206434499 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.540686839 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.051660971 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.918571991 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037420691 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.217529868 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938834965 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995358461 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915353147 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911672288 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.66657562 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460443292 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.912433632 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.914062019 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041473525 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96186978 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.917314872 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855686869 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.538216043 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899699811 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.925053136 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134873825 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.530639883 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228822671 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846932548 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262423694 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003490725 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.136530506 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.547505016 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.978626538 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175327535 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058167402 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.080749721 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965867711 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933876466 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012953468 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935180221 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.123863841 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209197213 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.917676889 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.919468015 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.644613439 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.94822582 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921414412 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.918771969 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.669420123 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176248654 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930710401 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.924105063 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.803401419 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.926599449 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979502003 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920467125 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.92614415 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.454650626 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629736503 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.923285649 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.508169425 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140268249 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925206729 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.606123135 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027792364 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.997833622 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179131334 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968386519 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.851066863 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.6278027 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.608046494 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916825932 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850112499 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916528101 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92417149 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926989626 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.117516563 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.180571937 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954680727 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.54591078 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.954154503 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926112254 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.921882422 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917767674 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.42908817 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978692377 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.159452436 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965794495 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061398915 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.931015354 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850294007 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920678874 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922612536 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.916471738 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.917623689 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949650025 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.552415994 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288318541 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177202793 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.5313642 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931076545 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.59624867 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.972197316 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.918876074 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.682425224 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141353875 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.951404656 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947959572 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.929040047 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.625625065 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.622828625 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483045731 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218577522 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201146624 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333314347 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.177226976 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.950533537 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253633139 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851795166 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476108301 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976801005 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260218381 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863498567 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005176506 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.555033636 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252127966 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932506971 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146759311 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302345564 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.61615297 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045843892 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131043867 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957724094 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.122310127 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882843506 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.445340404 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058769914 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.550497087 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113565884 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251113177 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.565793611 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.029889391 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.920364948 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.595380544 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000583562 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.630319594 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094217357 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.161439656 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.832556288 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372046312 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92780013 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144427026 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26097896 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.139034143 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.041769801 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85576886 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931098486 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929591992 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.920263325 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.919270342 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.791966242 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.176644754 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929794566 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852612354 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.084842553 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2056881 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.810203207 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.926188782 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91976461 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202155568 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.51649108 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087967518 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.071037548 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.448517037 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927474866 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853444851 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85583625 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.61395799 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.928014179 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894368664 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117162887 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.02508161 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835095209 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.050612702 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171881809 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178931161 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.935499133 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.179012772 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18884168 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.622263164 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94756413 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.021031905 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.559429679 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.014652073 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923228462 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158000453 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.675032147 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.151219606 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.954578218 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.868302151 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925066319 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138010473 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922863165 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.797051681 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134076081 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.647151197 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.928089034 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315981351 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990022189 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.803450171 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.954787699 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.019391412 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939058363 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000605212 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933171511 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.933040598 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.932828693 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96917721 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80782244 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.033933946 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.93572813 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018002337 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.986243392 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.451421886 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.92858696 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187994061 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264835241 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.231966036 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976953752 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.923943 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928219486 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858478833 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074458446 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.150004093 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196481855 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.056019269 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.045112922 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949409329 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.563753069 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.176667713 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167368415 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198854045 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.819478924 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.48569931 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969840157 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.926108671 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936177929 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.136899569 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12594992 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210295381 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076695002 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.059816065 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.286107188 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199286575 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.926224311 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925240696 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515874698 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.97109427 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.610441448 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.961458139 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.809481512 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186247305 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934328274 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299756327 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.948747556 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.080723119 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.697738331 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.652191471 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.213759438 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.90346305 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977584535 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186189504 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.288561038 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229752169 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992180952 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937253192 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.038422483 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074565181 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.794417354 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.928579037 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925883717 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976567435 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.635643221 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938078536 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193986739 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228866461 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.924789841 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.796264955 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953356894 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.937566778 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.150711033 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179673962 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177719239 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936016288 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.933274988 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.744913814 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192286965 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976617875 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861576909 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.933048608 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023396362 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17496002 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948255985 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.381163736 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.637745855 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18897939 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.925334457 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949979211 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141923674 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2844854 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233992366 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.460474719 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139403659 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.511827393 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.552137388 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232559144 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.933679153 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.143193861 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234721629 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.934043823 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.068354064 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971745364 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.187807556 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233869268 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.937040246 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575148142 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.89720288 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270504818 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497208079 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87027401 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940343431 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.991475571 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930059407 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.059043571 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943417434 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.801700235 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.1420787 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.712224714 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208087032 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.934390572 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.917164772 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.649350574 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.260007684 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970613548 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072817824 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940267432 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.607022528 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.282526211 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.185595392 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.067192969 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.942065619 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.936819277 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932895012 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918307105 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.126193069 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.134725405 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196210589 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.091321211 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.969437556 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935351174 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.146188717 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141558188 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.808215475 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054922733 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.070185272 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973459327 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.839149977 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.433742889 seconds)
  done (took 1697.686454378 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965532868 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.98348442 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.943529045 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.02283445 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.975236536 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.054171621 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.995411105 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.042609702 seconds)
  done (took 57.851761213 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.935656751 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.157575235 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.945349145 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.951500566 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.946621252 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.944527163 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.105422143 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.948552129 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.946610981 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.94696134 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.939237772 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.936855435 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.242945217 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.961681454 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.936827684 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.930337718 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.944094998 seconds)
  done (took 75.608082175 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.937811541 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.994173074 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.964084388 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.946335442 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.008849825 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.946628823 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.806697223 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.94905439 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.941651325 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.085348556 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.572938292 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.942821227 seconds)
  done (took 87.965608575 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.948310219 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.94293543 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.94600254 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.944093281 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.943421761 seconds)
  done (took 11.596123147 seconds)
done (took 2211.749429026 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.195478578 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.145504175 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.166102982 seconds)
  done (took 6.182557344 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.089311993 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.137599222 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.257137622 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.264447275 seconds)
  done (took 10.625070156 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.226564807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.327026827 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.153471682 seconds)
  done (took 8.580507039 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.3446897 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.939447767 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.050358442 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.93678245 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.937528748 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.939772137 seconds)
  done (took 22.687413683 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.942034527 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.943500486 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.941806995 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.945273448 seconds)
  done (took 9.646637442 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.922659456 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.73154934 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.925711407 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.937981919 seconds)
  done (took 21.39245574 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.694633921 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.707007051 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.68518389 seconds)
  done (took 9.961079921 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.514331767 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.857638774 seconds)
  done (took 9.247081685 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.207236359 seconds)
  done (took 4.082028 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.073807832 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.207608421 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.401181696 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.428518698 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.484614825 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.824978955 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.260684524 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.198334524 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.333996227 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.379671046 seconds)
  done (took 25.468595471 seconds)
done (took 143.27515422 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.329201766 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.318441865 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.165604469 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.285399674 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.189135991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.167263597 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.101650206 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.27070209 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.800252845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.791824656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.328015582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.196558803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.27248002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.318451822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.277590846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.188360258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.189537703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.347644124 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.980830824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.218387826 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.118241454 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.926918122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.169048182 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.942079552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.191589207 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.114663858 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.519895617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.187496653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.13316867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.525791872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.11628402 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.371147729 seconds)
  done (took 173.930570162 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.718988813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.945741248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.943805794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.943942967 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.367180935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.945040425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.946417498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.94562858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.129944707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.119625327 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.950234513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.356776756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.947762667 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.946832608 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.948787646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.945284904 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.257352892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.743560075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946589058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.947481428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.951778911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.275202675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.950495961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.3159315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.260495737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.959298108 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.944954005 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.964545481 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.951126379 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.95705644 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.960542432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.94596276 seconds)
  done (took 210.31354983 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.946584815 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94777651 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.949125264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947239805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.952741719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.948305232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.952545201 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.948075022 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.72000056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.736189346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.980368607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.952962442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953461003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.948082869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.95416915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.947851144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.95799005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.956821645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.956097482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.958487201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.962864925 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.674431474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.97524823 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.668372696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.974523257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.958094984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.949913365 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957004745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961754425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961820754 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961222589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.94900873 seconds)
  done (took 223.464725007 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.141042201 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.951309448 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.952950234 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.88457238 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.951923458 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.951217723 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.947976631 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.140924979 seconds)
  done (took 19.82467378 seconds)
done (took 629.421723432 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.418160277 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.264958817 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.133033394 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.976352079 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.234713331 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.015221441 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.973033729 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.034914283 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.696095831 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.042265679 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.66132547 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.992558193 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.754564162 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.995319984 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.096300666 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.028792719 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.521128795 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.605165856 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.152103566 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.057817783 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.145913096 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.932026772 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.045982438 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.731269085 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.7815516 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.985428278 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.168861533 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.523275071 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.982227858 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.134114871 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.743363151 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.385367937 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.990173101 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.975017247 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.025552951 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.006555197 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.337081381 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.986420754 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.102251826 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.740084697 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.051956936 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.580899632 seconds)
  done (took 106.891982472 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.944189294 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.942705465 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.942265589 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.944079144 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.943069322 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.943590979 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.943982248 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.941654901 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.945322742 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.943050954 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.942044746 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.944800285 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.943011242 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.944784512 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.94433032 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.94260791 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.944978952 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.946623128 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.944035743 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.943445019 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.943997388 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.942581063 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.944034458 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.944492619 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.944175524 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.946779236 seconds)
  done (took 52.434305943 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.955293699 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.100420149 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.184410469 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.977978297 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.957947522 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.963058827 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.978212992 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.960278437 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.961260683 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.962677218 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.055017803 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.962841028 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.978017234 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.18366443 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.973885914 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.957966164 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.957081153 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.96062907 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.109292431 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.97730219 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.982193779 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.961644326 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.981751649 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.973946869 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.961560339 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.962002424 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.965106338 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.394630032 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.97022867 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.058669234 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.003819749 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.983797857 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.350203947 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.194654661 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.015498588 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.9635176 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.958856763 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.061513472 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.967797697 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.962856329 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.977815684 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.96750561 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.185682438 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.460402668 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.97590643 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.957623666 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.405627987 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.078538268 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.003608803 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973631099 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.190688321 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.977198317 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.960881497 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.96192025 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.999135763 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.971616879 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.962156596 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.271419017 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.974705434 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.981611352 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.964939541 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.962805469 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115627527 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.970874111 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.104713165 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.970804238 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.970641748 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.963404204 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.191201543 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.977679051 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.460616045 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.978764871 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.962068439 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.06155037 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.112730097 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.434054478 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.978634794 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.122732572 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.369299157 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.989362502 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.974244235 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.385873421 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.993673082 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.973458389 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.963638985 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.962247487 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.961459025 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.007109546 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.982967677 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.406083549 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.465458304 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.286615305 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.991798875 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.980391216 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.967332056 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278458425 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.970695277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.963528796 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.184689106 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.478005539 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.979154396 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.972720978 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.4516654 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.98007967 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.98609719 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.975353787 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.195260291 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.981646429 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.007920393 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.962541632 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.973408135 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.969986034 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.985728354 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.973968743 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.963497045 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.441261827 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.080430514 seconds)
  done (took 242.640481603 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.963172694 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.9618106 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.962681421 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.961980444 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.961385054 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.965948804 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.961360988 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.959476355 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.966558036 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.959865972 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.960352402 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.964590782 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.96282633 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.970527117 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.432112195 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.974023854 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.582018206 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.967951039 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.96910123 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.970511514 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.650597651 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.976464818 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.967704193 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.969661673 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.969152767 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.96807241 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.971626313 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.015750047 seconds)
  done (took 170.763115864 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.970775428 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.158883023 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.991000886 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.010358014 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.982186605 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.969456494 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.99806779 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.996036614 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.980541587 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.971064887 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.9693117 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.03738115 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.984268819 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.108378284 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.007837251 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.003080508 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.08264278 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.980531602 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.972472286 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.971765232 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.005736005 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.97006806 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.0379901 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103908024 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.991868997 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.094533421 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.982564145 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.973371648 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.976920674 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.096626713 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.991666297 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.034172232 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.006219762 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.997659879 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.099612433 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.098921956 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.082179348 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.003805581 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.982034134 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.9712326 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.971500347 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.962133318 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.096127486 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.994804755 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.978321601 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.083069897 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.995262377 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.975640359 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.982769705 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.973830218 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.992509942 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.995049582 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.046237977 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.111210513 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.009885313 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.000423867 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.002977693 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.257810621 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.988606265 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.078660426 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.969447918 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.089605026 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.996966153 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.963597392 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.972957407 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.979649542 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.002623704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.00835218 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.085613267 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.986732 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.081831721 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.010122851 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.984017876 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.972257076 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.976419183 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.096098656 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.100336576 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.009159339 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.018751677 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.014109717 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.971019876 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.979061252 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.966952605 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.997620491 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.981070153 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.090363535 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.097824637 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.985639207 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.977580369 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.976467668 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.976300756 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.007129252 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.103555896 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.017379361 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.076381987 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.047454409 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.054660278 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.990716985 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.988344823 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.979754664 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.046337944 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.991892964 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.987080691 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.305538646 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.052522169 seconds)
  done (took 214.01586884 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.075736817 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.454561033 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.02829434 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.036395543 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.267687948 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.413791619 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.808032336 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.029340491 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.024235192 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.057874689 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.185880716 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.087524022 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.041288479 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.016244202 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.430231141 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.020829801 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.024889624 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.052542084 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.029341894 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.618188845 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.328934038 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.146558012 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.02679967 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.188364964 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.01214293 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.313540507 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.351960678 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.413297004 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.061850549 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.375381199 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.359314459 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.707481521 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.235360444 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.265518134 seconds)
  done (took 78.401896183 seconds)
done (took 867.028264868 seconds)
SAVING RESULT...
DONE!
