cset: moving following pidspec: 22319
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.891412164 seconds)
loading group "string"... done (took 0.536150609 seconds)
loading group "linalg"... done (took 8.765566754 seconds)
loading group "parallel"... done (took 0.166905479 seconds)
loading group "find"... done (took 1.409429481 seconds)
loading group "tuple"... done (took 2.055034876 seconds)
loading group "dates"... done (took 1.34610291 seconds)
loading group "micro"... done (took 0.214538982 seconds)
loading group "io"... done (took 0.619324214 seconds)
loading group "scalar"... done (took 41.843096042 seconds)
loading group "sparse"... done (took 13.098162563 seconds)
loading group "broadcast"... done (took 1.059786376 seconds)
loading group "union"... done (took 14.30408465 seconds)
loading group "simd"... done (took 4.946697509 seconds)
loading group "random"... done (took 9.98146078 seconds)
loading group "problem"... done (took 2.216205424 seconds)
loading group "array"... done (took 25.417182521 seconds)
loading group "misc"... done (took 1.084510599 seconds)
loading group "sort"... done (took 3.633485011 seconds)
loading group "collection"... done (took 21.434199681 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.644759929 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136069412 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14871747 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.194320846 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207054727 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145746971 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.1642877 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.559616672 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.022965125 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20843274 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142691885 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.54478604 seconds)
done (took 5.844003656 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.238022953 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.43251727 seconds)
    (2/2) benchmarking "String"...
    done (took 0.127012759 seconds)
  done (took 1.232732044 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076143198 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1774254 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093023951 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111469978 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110477868 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10987737 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109117691 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093856436 seconds)
  done (took 1.481504766 seconds)
done (took 3.710578645 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.482068848 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.876459212 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.491206858 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129091332 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158714941 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148226897 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.317616311 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.166011589 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.1203415 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114078219 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170254724 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.349802082 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.481303611 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.936309519 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.108755763 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127639651 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.083071769 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.706922814 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08075165 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.138408169 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526935507 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112041366 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.122467555 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141211363 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204420692 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116494328 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.179104329 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.112043327 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.687131756 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102691686 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.184981755 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099484712 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162003914 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.250750665 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.095615642 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093647614 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689174662 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189423549 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113857807 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095413755 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685263331 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08016133 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.19116313 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107586325 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113282899 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191458273 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114515667 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078871688 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102210262 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101151392 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156307656 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.454199905 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107084558 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.145040718 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108811072 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688644387 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097586022 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.156252215 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14225336 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097360161 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097116218 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.111517072 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154685527 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110416151 seconds)
  done (took 19.576529913 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116547564 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139904165 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094209005 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14064444 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1410511 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097126325 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082346092 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094887411 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126289831 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186483401 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.137920693 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125985307 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09209163 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079057773 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117678735 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248675096 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12128777 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105111389 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098518317 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089967092 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140603108 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111402716 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092226047 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109470189 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169535161 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206029741 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.120484859 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122479166 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078043249 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113714195 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141853087 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161005975 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077133648 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094173722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.182338234 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120190014 seconds)
  done (took 5.166120656 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196873929 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115465775 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.19093296 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178723038 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145539898 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181367041 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117161221 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25017872 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.249817096 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18517763 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128418344 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095962995 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095103336 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080347908 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093926554 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.679742888 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.178547857 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.14809238 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.123318268 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087733488 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096788204 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375708667 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100696125 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0803079 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102093776 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.071150844 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173884244 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103166473 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.254085737 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117659589 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088421346 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134287001 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207510323 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114635996 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140187865 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10216293 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081008615 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.234048505 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091662758 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095574084 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10649708 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134214934 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132542653 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099420669 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111274592 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223550522 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.133661457 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099923038 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099253914 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.07937626 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197439975 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094436876 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09676045 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.348277747 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117782463 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084169273 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098473387 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.302757031 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131083902 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081757316 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095224223 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085228175 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094727796 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.398661626 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089039679 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.999514745 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096337044 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156568608 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098818763 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105653716 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083567748 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102569058 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.1004062 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097658373 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076213344 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097157767 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077599303 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100948256 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114296162 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08340332 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095900633 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147277499 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116087937 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116250733 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108698429 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101844211 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094346041 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112318138 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097825197 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08063738 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.143878049 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104142991 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113475564 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099272003 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125961638 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096639455 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178652109 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080386674 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122310914 seconds)
    (100/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099593264 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.112977564 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129200312 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119377271 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078691506 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101115206 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097560346 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077553025 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095965099 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1478596 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079959779 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098352753 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080072781 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097837641 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110337989 seconds)
  done (took 23.694161369 seconds)
done (took 49.110078583 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.440087007 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093552799 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112140207 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.111745315 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110325223 seconds)
  done (took 1.619516259 seconds)
done (took 2.343978396 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.350722457 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175173316 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.120193581 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.177725496 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.10348917 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.185329583 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164260859 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117053637 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.194321573 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100754194 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.174164795 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099694207 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103471574 seconds)
  done (took 2.81770029 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093469526 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117498379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080503229 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109489809 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07490519 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108688472 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090706723 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12934375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090796994 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101700797 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073961455 seconds)
  done (took 1.790377919 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089676202 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112404873 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080174382 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106085868 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075681489 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10496607 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088828923 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115751584 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089192509 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102341079 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075139585 seconds)
  done (took 1.764669204 seconds)
done (took 7.086851116 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.033191443 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.27417708 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117854204 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.162532474 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.337214432 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209588931 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.519324623 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131168702 seconds)
  done (took 11.692348885 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111097186 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113695386 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100656862 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079366634 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098351507 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081611494 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097866015 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.080248059 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098053284 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083222375 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098256348 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081256485 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094628828 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080228152 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095796835 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078695782 seconds)
  done (took 2.254738735 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116068744 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114520971 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102337608 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107675442 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.082884594 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101636031 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086391515 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101735732 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.098248166 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.084079583 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.106161035 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088665352 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105629882 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098501266 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086133497 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10696004 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082509805 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102148823 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102648973 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08604407 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105482134 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.083158922 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104044586 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104899182 seconds)
  done (took 3.190703271 seconds)
done (took 17.862769612 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16754538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083551268 seconds)
  done (took 0.976806538 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101013639 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117689856 seconds)
  done (took 0.95221835 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105059429 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097485438 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134156171 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11289738 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080989295 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097150187 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.129652812 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081556226 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097302377 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08097702 seconds)
  done (took 1.750143676 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084918444 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.101084675 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088716342 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118547491 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109003768 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083212195 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.10295215 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084174748 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102795921 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079326349 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104770638 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117031299 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086307584 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11796213 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102669337 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086826235 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107801171 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10120025 seconds)
  done (took 2.514495838 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080667925 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081842979 seconds)
  done (took 0.896313039 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082536283 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095221765 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082853424 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099430719 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078944761 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.096113428 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079678608 seconds)
  done (took 1.350909221 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.678420493 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239352891 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335401262 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.115060831 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.133875871 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.386269937 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135823617 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112132573 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.215255238 seconds)
  done (took 3.127965586 seconds)
done (took 12.298370527 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091358059 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.18811085 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.526285385 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118551037 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078171072 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158507631 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.25829522 seconds)
done (took 2.160698238 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352400337 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122426963 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088688256 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078319912 seconds)
  done (took 1.378000071 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0794152 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102773144 seconds)
  done (took 0.925185227 seconds)
done (took 3.049408588 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077940811 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07766873 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.092476594 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.127463967 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078323589 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094195589 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075755672 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096165268 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077440397 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.077644772 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096891733 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077331429 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092037528 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075676712 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094688213 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075835583 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092080076 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078579481 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092485687 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076148232 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.077869672 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094938895 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075786816 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092745853 seconds)
  done (took 2.844283465 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098703058 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096657914 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083509153 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102143813 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099169679 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083707358 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100243958 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078720049 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100784501 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.080600238 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099448322 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.098905668 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.080604397 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.099003605 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080481534 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098940708 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083853937 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096090416 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081141456 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098611779 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100746503 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079340002 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099564379 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083510687 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099561891 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081451531 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097698658 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095423655 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083584751 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099387023 seconds)
  done (took 3.503445425 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087186694 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075539273 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093685165 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105039348 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076334909 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079652641 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093672234 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07654599 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094274464 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07650786 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095272771 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075473577 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093859869 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077131308 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095069318 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082594932 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11175742 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.075655749 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093522414 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076452629 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099837513 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077386154 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095858987 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075895732 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092302736 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.075356127 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.075458928 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.094041823 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077323474 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092668815 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.081472323 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099888221 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07576321 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106042192 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083310352 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09269401 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084547522 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092997356 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076639556 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093141979 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076248336 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093992625 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076080091 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104136992 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079597424 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094507798 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076670051 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07727793 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09438165 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.079371787 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093237838 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076437853 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09643607 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.077100184 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098575422 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077771801 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094751434 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075949267 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096422858 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076049369 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092716353 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076098872 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100109719 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078013293 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117999326 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087494506 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093086778 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077842809 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097486873 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083999025 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095450149 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095359013 seconds)
  done (took 7.034053663 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082019684 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104762174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077929892 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095803609 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075128635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094628618 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082838938 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093657494 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078307257 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11319267 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07659714 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095641649 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078424505 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098119119 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076649081 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095936018 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088136371 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091655354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.076449606 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098023764 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077005745 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100387671 seconds)
  done (took 2.701372311 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21947459 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103347675 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142663323 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113926343 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095517015 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110071975 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100538445 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084499086 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102702238 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086570279 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104268927 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100926326 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09585956 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104078435 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104077039 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087265819 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100788285 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104842497 seconds)
  done (took 2.710688471 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095336295 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096996044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103705413 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097233375 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080308978 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100342183 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103405403 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094625047 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099122036 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080313297 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.107514064 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083076351 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10074959 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078997814 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098715606 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097158022 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.081866746 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097747352 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08977839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103511456 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085569321 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107199084 seconds)
  done (took 2.834579389 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095807169 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099683597 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109216214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101449781 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092584642 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078225819 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10505099 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080022428 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106127593 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081205366 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097112516 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077566853 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.104165178 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079711904 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102872866 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080451215 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099153236 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079268428 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099095631 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075120129 seconds)
  done (took 2.599020708 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122907405 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113565436 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095994881 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125056223 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114003849 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095629033 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124271488 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113219603 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096525491 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127430892 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114033012 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096574111 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123459119 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119381963 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096333988 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123711899 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125165442 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106627304 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11521191 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113396856 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108521154 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113994373 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124018648 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095734639 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115551349 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096918435 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113459622 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120104625 seconds)
  done (took 3.907267017 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079916626 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078939657 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094667116 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076853011 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094434485 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077341616 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095409005 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.076591393 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096727418 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077292032 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07906842 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097302211 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078858218 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09714068 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079712837 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097134181 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079448165 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094812012 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07759446 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094437608 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079408413 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079486086 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096799177 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076633423 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095186601 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.079535131 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095486161 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077552339 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097349679 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077174668 seconds)
  done (took 3.334889557 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088839163 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10291718 seconds)
  done (took 0.951351018 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077303419 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114527983 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07686075 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101315013 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08630774 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098025366 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089566909 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103127656 seconds)
  done (took 1.504396758 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104685133 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.117998357 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086304946 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11010143 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098557145 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.116735895 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164279864 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10414785 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087741769 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099250693 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098485074 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098802542 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089897257 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104051967 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089060783 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112595208 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078313173 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108010004 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087544086 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10081248 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085700462 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114705759 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109812552 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.089137182 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101298227 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092189679 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11318519 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110182823 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086340352 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111393589 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088076217 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092500068 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085314902 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104081107 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078155735 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11573383 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097672003 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104003754 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107774068 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086367881 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107406898 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076536222 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109360296 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088075812 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110735413 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086123863 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104387362 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075895309 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098773443 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084126553 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094384467 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084193626 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093157967 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090670547 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108253824 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116349947 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083163734 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103167249 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085132543 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10193235 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087981093 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103173613 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091325099 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102857136 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108324067 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0913295 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106672406 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076215505 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093021372 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079084047 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108157495 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105279628 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11071337 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085692922 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105338859 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078025936 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104528556 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104513527 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089221753 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109626284 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084853908 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105808695 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091985586 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102577976 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084021371 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107248947 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082482559 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102284361 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080282989 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119246744 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101056599 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078654602 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099598887 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091980919 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103478869 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084275138 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099702556 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091101547 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092284077 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085809206 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105384335 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088211324 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111361068 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104355334 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086997234 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108198699 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092682834 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104793851 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084194795 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096120919 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086617264 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100945392 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09037719 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09339858 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086654179 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.102663568 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087018745 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109831251 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082809742 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103711502 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109568202 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093283336 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101331444 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077481507 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103553482 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086271227 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107895589 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093168701 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102404934 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077554468 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094379798 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089727171 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103147763 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087202402 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105408405 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085865427 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09369629 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.087768628 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103734305 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110427518 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084208724 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105840095 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0912614 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105975135 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084455791 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110303931 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083659665 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099469301 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108231774 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085056987 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094804683 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090350848 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102419307 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08374358 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104433348 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090289066 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104066583 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086351629 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101839418 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086727198 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104727497 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08185687 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105018985 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083301102 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11248499 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085721779 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095657735 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077979216 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10619425 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083346874 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103431708 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081333664 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104259355 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087077853 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0986012 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084912387 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104610191 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116597821 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094084794 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105133385 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08856005 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11130334 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086008394 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106039318 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085469558 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105269885 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087005881 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108997675 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106369034 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086192181 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103945451 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078642165 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105720064 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091671117 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099337159 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079307385 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099442582 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085742539 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111492212 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085933944 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105054093 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083562886 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106178433 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090866996 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104464623 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084798691 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099525196 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086218387 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.109361411 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087715759 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106443318 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111247855 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087144505 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094835085 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090189745 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10135666 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090400605 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094828772 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0824601 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100829664 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087451476 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102208164 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084320001 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093571045 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091117706 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11009558 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086712009 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101247474 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086067571 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114298423 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084781913 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107724161 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08537278 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107600399 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118466588 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08247265 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104085599 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093966823 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104434717 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075493348 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107918513 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083830525 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098773439 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08436693 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102192335 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086278419 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106784464 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086751194 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094859482 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085843502 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103222032 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082916882 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096052447 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091258736 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105305925 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104594494 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096130137 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105986502 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087074609 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105919084 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085687137 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105870289 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089838956 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105490979 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086895483 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103268645 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080988194 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105225866 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080921505 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098865987 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084525564 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105902401 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105779331 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087932956 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102861046 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091044774 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104714711 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087615538 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123563501 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102029098 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083029262 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105557253 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089257344 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103700831 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085976509 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095807711 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092014027 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10497035 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09186673 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103970667 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078444548 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104997211 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085072088 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106271791 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086836582 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106783139 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102958355 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085888405 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104334408 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096216159 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101301246 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093391789 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107554257 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088534841 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105057092 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086415966 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104149072 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080865279 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105177671 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106253181 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087226339 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104763947 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088647893 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105035794 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086644788 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10328495 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088283416 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105400578 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089048643 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095319282 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082297395 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102006956 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086503559 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108426495 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087406591 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103434899 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085012592 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10724089 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08582224 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096989471 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090885484 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107146808 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088050562 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114418571 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100790648 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086797838 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11500905 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.075952349 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102470257 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080188435 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101185422 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092154046 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106021128 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092586255 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106202902 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082130413 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09764008 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087834334 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103718541 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076248415 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098747913 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089959465 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10334167 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084777403 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106093738 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089324948 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106927723 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089868841 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105648776 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085794908 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107274405 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078228245 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103127019 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081467661 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105782851 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106502963 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083980715 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07864745 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105552244 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104508054 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088079328 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10509258 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085847369 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11108283 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087331124 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104887169 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091988982 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096225493 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086950019 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104834127 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086777702 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101545726 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088639318 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107796615 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089660622 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111250218 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086189333 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108615235 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086234365 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10103123 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085893499 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10638363 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086241907 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102465746 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087479352 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113433962 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099473112 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08825194 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106645015 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084769346 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107089544 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088494613 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105718107 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091097235 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107009043 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086827694 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109410833 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086340899 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107692468 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087150941 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105347335 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109913565 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082343308 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112520374 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088262256 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10633775 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085645856 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101834692 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08699712 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105147132 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086828277 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111715922 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087802206 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102726056 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082824235 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099207183 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087086003 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111871558 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112046776 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087713672 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106914512 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078875558 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09796653 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088622283 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102525458 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086311395 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108449103 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091872402 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106935817 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084712688 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10485539 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092318087 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111916484 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089344406 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103688028 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108221361 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.089370981 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105532484 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085284382 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105502685 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088757407 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10817745 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086207746 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101894566 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096512495 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111748625 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088346105 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105784685 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108173403 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086948001 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096987848 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088983008 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105961267 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090511118 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105812663 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087154892 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116007297 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082247416 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105743708 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092399503 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105421568 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111057527 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078819271 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106781259 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088945321 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106800932 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078587566 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101677131 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084052775 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10600161 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083121361 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0967418 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098292775 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111603665 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088208831 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105040192 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085196423 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097503721 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078469887 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102081964 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088333052 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105498102 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095404982 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102541557 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082785164 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097285249 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087722019 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107667872 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089427414 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099637349 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077980161 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103296806 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087756389 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114067115 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105209398 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087638486 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107504472 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088013838 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10022731 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093029654 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09839433 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089020732 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117844386 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088193998 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109380856 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090209693 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114208634 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106960491 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079400355 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10755742 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088100916 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106906233 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089101469 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109084896 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10248161 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109302705 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082867287 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106804931 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086445853 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103310509 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113777786 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089040184 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108107713 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090156124 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104820284 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08972161 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113884808 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090247687 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107556395 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107062554 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08658792 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106721451 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08555355 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085125072 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110346909 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107877525 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088209958 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109734935 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084290262 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117286164 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095075432 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109277931 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081140138 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103196984 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084508978 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098562968 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090202904 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101253869 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085593302 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104562994 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087604724 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108937738 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089653539 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106672406 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088738589 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106054196 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077752616 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11150304 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087525415 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110183337 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082557621 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107353676 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089041226 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113304228 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110616136 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086162825 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106987859 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086717368 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109902857 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080192797 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109444918 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086558753 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105319187 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084944079 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106189314 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088612355 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10778661 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089568926 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110779462 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087757769 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.111927105 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090113264 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10091093 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081187421 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111118822 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081845843 seconds)
  done (took 58.420623549 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148921175 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08586949 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098111871 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07960626 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124229897 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079509783 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098911629 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080541553 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100231698 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112758316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07960234 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09816855 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.100760155 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12699383 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123442558 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112874261 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078410475 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099796899 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078667486 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099023884 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119229587 seconds)
  done (took 2.933188396 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10509329 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117972984 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114668516 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100417016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111773751 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116290781 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115433429 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097229787 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.12090734 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110026614 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.100146439 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116721289 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111165939 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110366737 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091530799 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11360447 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120466756 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090297629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117077659 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115781627 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0947814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114720506 seconds)
  done (took 3.210935994 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092110619 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085712364 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112467531 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081089492 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107323043 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080613632 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111306115 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.082547562 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112256489 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.106568491 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.08431861 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.106563321 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093625836 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.099544165 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.085192817 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083157783 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11153913 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106451744 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088714817 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.080318591 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127945067 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100743909 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.082167991 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.103668584 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.096756248 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.1083961 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087464308 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106394529 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.084455961 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107217822 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.0842052 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108552835 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09121683 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.104452977 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.084258412 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106911169 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087480939 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101671613 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08466574 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110036012 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.08164055 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108297795 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093698837 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.103925746 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.082970864 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.109095441 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08604222 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.101922255 seconds)
  done (took 5.456854245 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.120148709 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156598372 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092260285 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155308533 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125445713 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121837408 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091977141 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1467286 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10547389 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086939102 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124403778 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121949469 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088092854 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.117714734 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107731202 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089146027 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111073687 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093760358 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115383445 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111806366 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.096692083 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110679382 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121450522 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100081621 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112704119 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105555094 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088465043 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115805676 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118814047 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094333535 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112589352 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.096365591 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128510751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111812089 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089364076 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11118208 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122826385 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087912295 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110625991 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08518503 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110607071 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115372482 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091797213 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123453376 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107881452 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090673171 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11031341 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.090791304 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125450106 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112213628 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096879741 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121133066 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111120794 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088591397 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113371077 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124231035 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08774416 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10749567 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111195815 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09915165 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107466794 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098788482 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127257781 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111829748 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096285269 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122232467 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110258824 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111405236 seconds)
  done (took 8.388251434 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094845545 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.130992589 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124181248 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103829766 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112818982 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112172099 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093561652 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112568854 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092578491 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121168966 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111870651 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.161812939 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086714031 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118045328 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112095255 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09267254 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111649355 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093220434 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114195471 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111772628 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093377898 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123235215 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112746771 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103591132 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126211712 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106234908 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092456057 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114121262 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123507482 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111994999 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106595782 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112369237 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111913098 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104221695 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126336936 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113475798 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083978443 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112957606 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112449217 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093053991 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10547377 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104132127 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114392991 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105800184 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092726135 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113519247 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12275466 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125897398 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09872226 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119015411 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113227405 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104520006 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113220749 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112922467 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104903472 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.131666947 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124638506 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123609709 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093057799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124397828 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124038421 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132543893 seconds)
  done (took 7.720574227 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085540795 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083685981 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10310554 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082227215 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104294918 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083602222 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105007274 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085489252 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103965924 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085171137 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104198194 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082333779 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081969156 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10452539 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081909183 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101592516 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082497998 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102312921 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085383123 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101475032 seconds)
  done (took 2.672834602 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093253639 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125450443 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085695458 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113843336 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087029365 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114173385 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106254642 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08858498 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105779825 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088705152 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118752169 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117652545 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086646833 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112108084 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097356711 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113875575 seconds)
  done (took 2.476022584 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105717367 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119319482 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131449536 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090776528 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104197352 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093915969 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105533082 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.081895697 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101918566 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.093981188 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.111948176 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.095578918 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107287143 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08318295 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106603532 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090598325 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101564801 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.108655587 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086991447 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12982987 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.091007877 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108365413 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086382565 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108281665 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.089610198 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112241509 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112905456 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083753414 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103524754 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086149029 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107865902 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.093966459 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102525596 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089691609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105692228 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082869879 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105822168 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085033973 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111872405 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104905036 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084353635 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107706735 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086500306 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106296687 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081855305 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105902965 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081469195 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112294815 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.088488729 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10869282 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085607953 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11371935 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092695358 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118441905 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116122662 seconds)
  done (took 6.340018992 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10089346 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109943183 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090554473 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10334009 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088327547 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113655611 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089146834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10833797 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087085746 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103577271 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087043594 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110177713 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086836849 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111418537 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107714688 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090652852 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100136787 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087789287 seconds)
  done (took 2.602406367 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09148528 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10519681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093652396 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105694318 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085732982 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108967445 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081698358 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103140249 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084749665 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105969205 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086253585 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107966014 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084850449 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.107931021 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085727082 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105164349 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.088356101 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082527727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106591861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080664688 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108832869 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082999625 seconds)
  done (took 2.925444036 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104191805 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139053108 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100004529 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150246391 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111449865 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.08933404 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.122384481 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.110409143 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.109961231 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109416282 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089432062 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.109634397 seconds)
  done (took 2.179912519 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112373703 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145022422 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083404364 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110635134 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119951722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091176953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111153057 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090523632 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12441344 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123517249 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11058577 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102906523 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123694246 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12276984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117958055 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098825202 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111438126 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111778155 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087095674 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132820311 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11147117 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102456744 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111904722 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111626059 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091633591 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122405857 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123144265 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104190109 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11210105 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123036592 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119293606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091325364 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12282271 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124993325 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089442802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123356839 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111045462 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131854827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09995025 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122770787 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1079324 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099673896 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122886954 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117677191 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103352007 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11271791 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117451236 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090910165 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111525334 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140120563 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119459356 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101831148 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120982808 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123192375 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123105403 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139502075 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125109218 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102079097 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120134084 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124495691 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12186455 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099653149 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122665148 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124621358 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119944796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101404008 seconds)
  done (took 8.331298787 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126269396 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105495688 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111433362 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104717227 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123721714 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111267774 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091455921 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112249653 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111572646 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087755316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159129688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110984229 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123024266 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102459254 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111522001 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090996837 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113009946 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122130668 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087422957 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139802752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113844609 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121938282 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122246531 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102769213 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125253227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119678628 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112041968 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091895987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111589558 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091812366 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119800966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111939264 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101258926 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106953 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121702205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090899725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112566772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118376686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0914955 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120351815 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122705883 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133406813 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091472224 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112188051 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125843618 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09080273 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112275479 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087035188 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113525815 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107824814 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104779359 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12573406 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125460272 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122269459 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11190404 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092326363 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112268374 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091922414 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112875962 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119595865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102311093 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1133101 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139807321 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111969434 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092547032 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12319371 seconds)
  done (took 8.195313658 seconds)
done (took 156.518685522 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104548533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142670883 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100353227 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170957878 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086206313 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143000413 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118529142 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123683101 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085067617 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109112853 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085615285 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111082207 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15271666 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109094035 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085602004 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111238057 seconds)
  done (took 2.675822822 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18099921 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.292554978 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104921196 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.115038237 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091851248 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111010229 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113188798 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.094035859 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108176935 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.10011401 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.11070268 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089561419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.121347222 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088330382 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109756827 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108940175 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.100908243 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.109553325 seconds)
  done (took 2.996030062 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119015927 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15124179 seconds)
  done (took 1.112505818 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123667336 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18800731 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31243145 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163166826 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.116546723 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130050088 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164282264 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127424934 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196502812 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130354741 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129587946 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094791962 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138858403 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119714815 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097504624 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114446383 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119600249 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117373011 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115500946 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095375152 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137793082 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094461151 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120355109 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116050004 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184818055 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128633331 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095450849 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.116229412 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094858169 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116341184 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.098871194 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129920979 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129711771 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.170651716 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121957726 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.185715272 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102787561 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113952664 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095780679 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113369684 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09664982 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120607138 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128977182 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093447371 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115946246 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121268215 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095952159 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.355290608 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100683415 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124040105 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12186409 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098130921 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.190145175 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122720302 seconds)
  done (took 7.989568796 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.8513759 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.131517139 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113963998 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.953851336 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120235661 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129494016 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.824049047 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137814433 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241086221 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.852354454 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131039224 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127166228 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210979834 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.279872506 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.146509872 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.338123943 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.706790215 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127844491 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.119139508 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155715824 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120174408 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141356691 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132684846 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.422966021 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091907876 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113334618 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117630313 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103960372 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164223258 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113926707 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115802071 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188215822 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269722129 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205555213 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092340822 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113945444 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089468504 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19731152 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271467448 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198208703 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175757723 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109082283 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089702674 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125435311 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132945606 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088353446 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19128729 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178675335 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178796449 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116094054 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124217973 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099923824 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125638469 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166022503 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.109953319 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.339274846 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343782552 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091001228 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122326665 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109104425 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271989009 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113138657 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229027365 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118401546 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217554431 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111759934 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785338738 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.194638567 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090666775 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122387851 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097275253 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118927531 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124393479 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171537012 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381412617 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126957811 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095513842 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11278677 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226094109 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.112983312 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090350024 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168265514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115443505 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121995657 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107530841 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127704866 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175540351 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.277219949 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105417748 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122041281 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118075576 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104495284 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115035907 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.220708776 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222053189 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163288796 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.239968852 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104539626 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.192822066 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171917244 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124583475 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177248756 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121905814 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109485254 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127636462 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219183983 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147289035 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091447474 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117766231 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120014026 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150144268 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094922485 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120062551 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175097456 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.470510239 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173255783 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088016145 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117893839 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120421932 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168934855 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097456709 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266976316 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122563009 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173458694 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120386738 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088628704 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121624817 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170231052 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127610927 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12165164 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104674893 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121485417 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255287887 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227060568 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128939527 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216704445 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179946847 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124760558 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178811582 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121798876 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174293125 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123986039 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125181214 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093041502 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819493997 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127274131 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098478991 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119071074 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195873556 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090915587 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116008744 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090215087 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110619603 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812370636 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094734228 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.109670726 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093913616 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122119831 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.099064413 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120529175 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116843187 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167920632 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237845461 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103477758 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122327561 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.112919112 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.167555647 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092378979 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113542179 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091686565 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114176586 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122389226 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09649726 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115146863 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178812692 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164765 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22399107 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.535880989 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092316823 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.112907496 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233490253 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092026541 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309369182 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120397167 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207440067 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195882349 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088622144 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.339544484 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.196258229 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197861628 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095249771 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177377862 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111467716 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097030519 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.190134643 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092003396 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121554602 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164281071 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131345836 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128415446 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.131284267 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114733196 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233568704 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110703536 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176541533 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115582324 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10438105 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312099356 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113675186 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111936969 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.189891483 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096034667 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114383323 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.604548074 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114863424 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102153621 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124401339 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228346423 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.171754074 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122215373 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122248378 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105308032 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190275523 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.219823086 seconds)
  done (took 44.96972954 seconds)
done (took 60.583930828 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305805703 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26839648 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.309490838 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.222114878 seconds)
  done (took 2.051713423 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181976546 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1561297 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.150926065 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08988576 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157588859 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111213475 seconds)
  done (took 1.716185435 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.488494191 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.401997786 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.345133479 seconds)
  done (took 2.104897664 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265226011 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.284120407 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366283532 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412348846 seconds)
  done (took 2.305655283 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209333573 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128823494 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102317739 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143380198 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.174360886 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.179134204 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14632579 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.155384291 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.13313798 seconds)
  done (took 2.290005238 seconds)
done (took 11.342209558 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.290220411 seconds)
    (2/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.146247518 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.22356391 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.188746684 seconds)
    (5/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.161543096 seconds)
    (6/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.266090586 seconds)
    (7/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.131236157 seconds)
    (8/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.132787404 seconds)
    (9/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.245403222 seconds)
    (10/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.262824814 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095844597 seconds)
    (12/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.27731666 seconds)
    (13/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.211422271 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103132956 seconds)
    (15/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.128413889 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099601697 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.166230761 seconds)
    (18/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.211831871 seconds)
    (19/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.128578492 seconds)
    (20/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14470353 seconds)
    (21/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.190774945 seconds)
    (22/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.105745386 seconds)
    (23/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119316345 seconds)
    (24/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.205990213 seconds)
    (25/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.282589326 seconds)
    (26/286) benchmarking ("sort", BigInt, false)...
    done (took 0.231700862 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.152918755 seconds)
    (28/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.153579875 seconds)
    (29/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.10380674 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.226967417 seconds)
    (31/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.160611278 seconds)
    (32/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.219650103 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126488509 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.234828765 seconds)
    (35/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104273265 seconds)
    (36/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.2042753 seconds)
    (37/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.101250724 seconds)
    (38/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.113516599 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.213560415 seconds)
    (40/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.125560989 seconds)
    (41/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.207185985 seconds)
    (42/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.123976854 seconds)
    (43/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117175322 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.12899309 seconds)
    (45/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.197956012 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120429622 seconds)
    (47/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095052268 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.122703613 seconds)
    (49/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.076992742 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.144372846 seconds)
    (51/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.146489333 seconds)
    (52/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.153334369 seconds)
    (53/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.103176903 seconds)
    (54/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.099465244 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097061663 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.21686327 seconds)
    (57/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205025883 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.152560356 seconds)
    (59/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.169715069 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.097431832 seconds)
    (61/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.197933749 seconds)
    (62/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.202344812 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11703243 seconds)
    (64/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.173965602 seconds)
    (65/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.185219874 seconds)
    (66/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.207143143 seconds)
    (67/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.112065639 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078375302 seconds)
    (69/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125333224 seconds)
    (70/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109284163 seconds)
    (71/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.237965261 seconds)
    (72/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.10005372 seconds)
    (73/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.086769646 seconds)
    (74/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125107538 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.110864431 seconds)
    (76/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.128439729 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.104148605 seconds)
    (78/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115439527 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.191703627 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.090423156 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.119779897 seconds)
    (82/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.077222733 seconds)
    (83/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118712699 seconds)
    (84/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.224729269 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102589948 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.129495932 seconds)
    (87/286) benchmarking ("sort", Float32, false)...
    done (took 0.177557209 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078631346 seconds)
    (89/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077646784 seconds)
    (90/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.193545362 seconds)
    (91/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.107444334 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097538203 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.166713927 seconds)
    (94/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078424159 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128560113 seconds)
    (96/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.127435195 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123323129 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.119556015 seconds)
    (99/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.104805723 seconds)
    (100/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.125034589 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.143795005 seconds)
    (102/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096293457 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146502437 seconds)
    (104/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.122254959 seconds)
    (105/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.102496335 seconds)
    (106/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.219357094 seconds)
    (107/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112632207 seconds)
    (108/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.078007584 seconds)
    (109/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118723729 seconds)
    (110/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.102574964 seconds)
    (111/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.118558304 seconds)
    (112/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096356319 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.190979425 seconds)
    (114/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.100721959 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.10325755 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126922797 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.145250926 seconds)
    (118/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.131755049 seconds)
    (119/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11919642 seconds)
    (120/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.193992245 seconds)
    (121/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115630323 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.120005988 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.103975062 seconds)
    (124/286) benchmarking ("sort", Int8, true)...
    done (took 0.249001994 seconds)
    (125/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.093787218 seconds)
    (126/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.076988706 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.120944236 seconds)
    (128/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098641639 seconds)
    (129/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.119193163 seconds)
    (130/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140429413 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.103028238 seconds)
    (132/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.125019258 seconds)
    (133/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.141804952 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.147564251 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128895896 seconds)
    (136/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.077996102 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.100525522 seconds)
    (138/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.077825358 seconds)
    (139/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.189888237 seconds)
    (140/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.156043437 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.122180561 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.113546085 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096734371 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.208429111 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120544308 seconds)
    (146/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.130425922 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126425423 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078947671 seconds)
    (149/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.102440412 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085731875 seconds)
    (151/286) benchmarking ("sort", Float64, false)...
    done (took 0.176458115 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.077167738 seconds)
    (153/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11853765 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120747249 seconds)
    (155/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078609461 seconds)
    (156/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07777607 seconds)
    (157/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.20128993 seconds)
    (158/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.116936746 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096781633 seconds)
    (160/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.108151248 seconds)
    (161/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078672618 seconds)
    (162/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.157993708 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.129520416 seconds)
    (164/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.081554389 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119581395 seconds)
    (166/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.085393214 seconds)
    (167/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113214599 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096085229 seconds)
    (169/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.175788657 seconds)
    (170/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077831489 seconds)
    (171/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.208107709 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.128061328 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.106169396 seconds)
    (174/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121960579 seconds)
    (175/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.125499835 seconds)
    (176/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094812972 seconds)
    (177/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.10357135 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091114926 seconds)
    (179/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119211742 seconds)
    (180/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09724687 seconds)
    (181/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.166379973 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.077628576 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.225945033 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.117900341 seconds)
    (185/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.145166946 seconds)
    (186/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.200523013 seconds)
    (187/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.111688717 seconds)
    (188/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.11809279 seconds)
    (189/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.106632519 seconds)
    (190/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11662047 seconds)
    (191/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096238679 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.120305663 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192508151 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10422528 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129214423 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.121318214 seconds)
    (197/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.097914953 seconds)
    (198/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138366384 seconds)
    (199/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078724827 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120267874 seconds)
    (201/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.119822784 seconds)
    (202/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.171493187 seconds)
    (203/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.207342506 seconds)
    (204/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.115550928 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091854188 seconds)
    (206/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.195422424 seconds)
    (207/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.118017672 seconds)
    (208/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09347042 seconds)
    (209/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118705421 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07943718 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116554638 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079719785 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119759642 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096461741 seconds)
    (215/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.117790657 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093611579 seconds)
    (217/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131028194 seconds)
    (218/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.07865224 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119815667 seconds)
    (220/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093968433 seconds)
    (221/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167561378 seconds)
    (222/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11876916 seconds)
    (223/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.254615755 seconds)
    (224/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077961801 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.197069952 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.132052176 seconds)
    (227/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.09770522 seconds)
    (228/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12031481 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09724426 seconds)
    (230/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119184122 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078583924 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13239125 seconds)
    (233/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078595499 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.101632621 seconds)
    (235/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.11047725 seconds)
    (236/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.109864204 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091297962 seconds)
    (238/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.109612852 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098583187 seconds)
    (240/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119473107 seconds)
    (241/286) benchmarking ("sort", Float64, true)...
    done (took 0.235936542 seconds)
    (242/286) benchmarking ("sort", Float32, true)...
    done (took 0.236279588 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119253037 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.078998612 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078501487 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129838725 seconds)
    (247/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115067709 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078958315 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11880382 seconds)
    (250/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07792263 seconds)
    (251/286) benchmarking ("sort", Int8, false)...
    done (took 0.200385592 seconds)
    (252/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119507293 seconds)
    (253/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.079540588 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114806342 seconds)
    (255/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.077682281 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.143826569 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087161359 seconds)
    (258/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.101484939 seconds)
    (259/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077974357 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.120250917 seconds)
    (261/286) benchmarking ("sort", BigInt, true)...
    done (took 0.25618406 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103479688 seconds)
    (263/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.120247331 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100496734 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.116729982 seconds)
    (266/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102052912 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.115846932 seconds)
    (268/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078620787 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.130538283 seconds)
    (270/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.085725327 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129164411 seconds)
    (272/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078541037 seconds)
    (273/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.10227167 seconds)
    (274/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079639423 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.101217163 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091517069 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117404357 seconds)
    (278/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.117867739 seconds)
    (279/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.101661965 seconds)
    (280/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079320075 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117535145 seconds)
    (282/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096249192 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.102365377 seconds)
    (284/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.125373253 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.103654052 seconds)
    (286/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103983643 seconds)
  done (took 38.634574583 seconds)
done (took 39.511688969 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103472277 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.156968352 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102910047 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.145663408 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128153514 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.108166535 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.125193424 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102674311 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129372201 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129180896 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.105964183 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.109284365 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101877318 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.126033232 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103844766 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.147166936 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.128688678 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.098268431 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118051381 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.094322712 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117802506 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.094316497 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120719235 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.085509394 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126903265 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124610334 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097753642 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.125483004 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.095349957 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.116036747 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093784849 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.121948796 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.111746463 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127432917 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09634456 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117590082 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102360236 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125108756 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.095866814 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119735386 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.122681039 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.095324176 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.12049963 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09954186 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117684366 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094131009 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117145458 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104759353 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146965512 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095219238 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.12387658 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100877999 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.127335992 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122948326 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092857401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117881423 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095904159 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.145710903 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.093639878 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119977755 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099190371 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.125467695 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093718535 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119580003 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117832473 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102065118 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124878708 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094434068 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125226834 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.097783644 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113078641 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094285383 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116811848 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092266079 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.12471278 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102528106 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.113013219 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095740667 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.12210896 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097373191 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.118562945 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092424881 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121217826 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095573762 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116563599 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085762364 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116684365 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097518651 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.118231918 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118019415 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097460674 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.120565948 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.097483846 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12515201 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.0950343 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119817804 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095397327 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119496045 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097144084 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117827539 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.089942718 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117418802 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098827656 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115967388 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095226789 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128567446 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.116559549 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.097681891 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.117297047 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.094356636 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.13040228 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101825567 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11943065 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095600935 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.115002305 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.099022316 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117076497 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09257132 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117064569 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095161665 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12046248 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.119287447 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093590826 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120763264 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104111168 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114803376 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.094459684 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116582513 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.095602649 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.122202208 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.096840636 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.11723187 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094703844 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.113083987 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093730552 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116336141 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099147042 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116864652 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094225982 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119600752 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095164929 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.120331371 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09620133 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120260192 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116918679 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.090113172 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095191462 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118420278 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09652919 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.120687447 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118743244 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090853401 seconds)
done (took 17.705394314 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10161158 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188210874 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150652022 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.154242701 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.15204996 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111538482 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130514562 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150657159 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.126917075 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124427073 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.149486067 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.14076182 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.154738978 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103112415 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137558901 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126257852 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.100941612 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136896989 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.159873095 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.122273351 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.151221329 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.127187889 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147325879 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122219984 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.125215447 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154900372 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104614166 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.127056565 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128648593 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109483855 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142658572 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.128729258 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.10525737 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137900285 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108125826 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125800736 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.13610773 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09796199 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126795118 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.126143879 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113338039 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136159084 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.12256619 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109625328 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.126162411 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104948974 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.126511132 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12433584 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.102406626 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.120451438 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.106657809 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147032551 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124109855 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104107516 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127437271 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.126858577 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104416047 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.129917791 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127615951 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.106177144 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12589301 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104846418 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132979312 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142926665 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.124824588 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104789973 seconds)
  done (took 9.310292261 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117475628 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157700854 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.133585813 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109790264 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.128359305 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091213813 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.116319568 seconds)
  done (took 1.797035092 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092712124 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.146899736 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125502363 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.150352101 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138932495 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.129409422 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136274875 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.118368043 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.116013518 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127203303 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.14494849 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14725176 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11946302 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.129175506 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.127297816 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117362189 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.151840914 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092739094 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125106962 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.125615103 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122823997 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.139269712 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.106135349 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118170503 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114925489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119206256 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185502828 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104765753 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116877149 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09993615 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123987933 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.189259009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140016099 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.103482912 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115511803 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120780607 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140017803 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122813193 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.118622034 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122247244 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.138509873 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100775862 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125250427 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.099889418 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125050184 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107070206 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.129545671 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.127018904 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099009711 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.145233836 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.103465038 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.140237103 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119257333 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097276291 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128879894 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100396503 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132809474 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098471911 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146119165 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124672444 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119208332 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144480737 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.138736329 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.119904607 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136311901 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139937013 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.115101617 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.124023024 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100513229 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125985074 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.144592203 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.096797839 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.128916366 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108350702 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127747828 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.145311912 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.120889076 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122628979 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106979882 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123366853 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096448922 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.118225245 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.109109329 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12220757 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096198908 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136198083 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129628674 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.099963089 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122115431 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141136116 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.098396997 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.129873525 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.105843983 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122281793 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133752914 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121667048 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.130492977 seconds)
  done (took 12.922389034 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095363098 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094216274 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.125031463 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120211294 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095391661 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.120409441 seconds)
  done (took 1.598391087 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.124585342 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12259111 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109333938 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127651207 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162150402 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.117689876 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.14411608 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128586493 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114131496 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133671823 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.142320273 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.120031139 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14947139 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101331306 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.143267436 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126813012 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11906175 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122480264 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.109164346 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123299152 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135193204 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101418136 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12279269 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.116826529 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127081655 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102748354 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126897063 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.135015329 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.109095162 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.128315412 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101575582 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.126838448 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125205117 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.103996396 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.14334906 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.101373446 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122899512 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.1279053 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102603001 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.129421067 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120240029 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122794376 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1080014 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.129202315 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129140662 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102434849 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12883016 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100656169 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143265286 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129603885 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.10426383 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12585304 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102567774 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.128533685 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.102670427 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129253273 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.128240024 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.120216479 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126703513 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102376254 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124212116 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.101445032 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131416131 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126456295 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101882278 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128300526 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101120514 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123072828 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098105067 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125769974 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12850735 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.098530035 seconds)
  done (took 9.653737365 seconds)
done (took 36.217254115 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689284228 seconds)
  done (took 1.635723746 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.85515487 seconds)
  done (took 1.803442055 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.376747845 seconds)
  done (took 18.357278385 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.539549553 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.633473116 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.976581732 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168438597 seconds)
  done (took 3.266992636 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.973216454 seconds)
  done (took 1.941874365 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.314193657 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267059265 seconds)
  done (took 1.534165812 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.834135923 seconds)
  done (took 1.796982522 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.568743701 seconds)
  done (took 2.526721194 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.352765611 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.203760317 seconds)
  done (took 1.528293951 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.588338132 seconds)
  done (took 1.553468589 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.713325312 seconds)
  done (took 15.683501012 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237589305 seconds)
  done (took 1.215957035 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305745299 seconds)
  done (took 1.273439623 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.63141336 seconds)
  done (took 4.600663653 seconds)
done (took 59.677531576 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10524648 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132874489 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10888188 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.130273828 seconds)
  done (took 1.440762211 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.109636425 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127782873 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106717663 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128162379 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109971946 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128107831 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125884264 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10883413 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.128852182 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103624384 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.128489709 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102689432 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.130998904 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.126206913 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100223811 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.129269754 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105461706 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.128091755 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101715119 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.12955612 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.126210441 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103610682 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.13042027 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.102975955 seconds)
  done (took 3.796072288 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105100695 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124180407 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101112052 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122527875 seconds)
  done (took 1.43005423 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10952973 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141080465 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114852589 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.134520755 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142132097 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115728673 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123738859 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097889268 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127128502 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.108785978 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127054123 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14386558 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11568618 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119655083 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110003156 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118502583 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094910647 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143015972 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134373504 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110814067 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.124001405 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.108115855 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.132101577 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138389804 seconds)
  done (took 3.908111046 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.209617689 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.112293927 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.148398965 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.10465854 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.178047409 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149648085 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.12292602 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.125031278 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.123486609 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.121229955 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.127736968 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.178255233 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145708016 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.10219282 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.125251865 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.105579888 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.144429034 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147650379 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.099752307 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.137622266 seconds)
  done (took 3.683348125 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105853748 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.123105724 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094262982 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.122527822 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.105475166 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.125765205 seconds)
  done (took 1.657574901 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094974181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.093034446 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119309777 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093237957 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124014915 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09399393 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.117532759 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.093147755 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118232011 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.093746319 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.118728536 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092020889 seconds)
  done (took 2.232810399 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.549097977 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096872276 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126960752 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.122764205 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.102833432 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.122137409 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.112938863 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.122767121 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180377525 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.097785971 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140752674 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.177156432 seconds)
  done (took 2.938570285 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215385128 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102630637 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278776033 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.442188867 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163555857 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171497487 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.359660691 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171816899 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.191632061 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142740294 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210662343 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16377604 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132700921 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212180858 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120335627 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.190559661 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18217188 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233348344 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127951443 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246801821 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170827079 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173482469 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197399987 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158090521 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117705472 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166320323 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124752402 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133077964 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180534058 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176020842 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179542983 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15503183 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143480793 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207955976 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243830806 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184444808 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.356549765 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137985515 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198640624 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19911072 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284518777 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147473262 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200480777 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160603513 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137044331 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186630408 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162648004 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186784665 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137614742 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120637982 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218114351 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18399286 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.187729636 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144294549 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351735781 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149792251 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.151839164 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190716495 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196551919 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231276507 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173428177 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102979989 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256076224 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197889426 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186557849 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152961976 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.175076289 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130563756 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184259402 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211308932 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184592348 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174367807 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.2258023 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140483233 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170536828 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18574672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159877096 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185717364 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138851796 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.129676626 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156633401 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142279465 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10823976 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192204856 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102436287 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247568406 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114241894 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.324282913 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217051503 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166177571 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167483685 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17047355 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175040429 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152440727 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097564463 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152417335 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178519072 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163462346 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13870137 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164503348 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126049711 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134460727 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158221117 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101831917 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166122956 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.140962335 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173040032 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170205684 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134573325 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170152967 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128771112 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164721305 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176449293 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227507943 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112312892 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138449636 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210512893 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164179809 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142263539 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192680535 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203170498 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178920853 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14398499 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176192937 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202704208 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148794239 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20407334 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150009336 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112590587 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157025029 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165104871 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16369016 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162603335 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13487911 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.130150427 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237811933 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106286987 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143459947 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180516292 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132242616 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10826377 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152042353 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142329513 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120600888 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15742541 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146207465 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162198429 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165284398 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160516535 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165102101 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15004357 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200629917 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139308682 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.139264876 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154534059 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124035311 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.186321212 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20158283 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135709369 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195331718 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175038068 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274461174 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171483696 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109263031 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187499043 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136547312 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097684068 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172280514 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166843529 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171770493 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.225297464 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238848707 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.171070341 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1596626 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15558245 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173360916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.191814499 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164187458 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15322034 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170408048 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174421758 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128713035 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102883862 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134586021 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14570579 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110698056 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139728003 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188146206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170769926 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259512913 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16836405 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117831968 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226876953 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105082986 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171740209 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178621695 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145858717 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200230528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198820455 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173262558 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149942665 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176546425 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.127309559 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104366459 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140620104 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17314527 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13859479 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113542743 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150611936 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198969936 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181458778 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157798467 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279045863 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172701424 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207371662 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.130016624 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169217637 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187455212 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164176786 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.167820114 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138354353 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.166943887 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194780842 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151460962 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201414467 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169672624 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175304543 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23652406 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135326729 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138117372 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156130746 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17487519 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147030513 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178492646 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124005683 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143379512 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160723028 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143665968 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103530588 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214032171 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121116449 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21600764 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.172761332 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182010497 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132382503 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122727632 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168191293 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15215513 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095681823 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205194603 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20473626 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150852386 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165959753 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192283414 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136261207 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.367982147 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204302902 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2195207 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117233241 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149905048 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167594798 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177249375 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170513908 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192048679 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150685848 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186938079 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165355997 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.122155812 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14149781 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154060203 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156662104 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157910934 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111436857 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160832352 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1496472 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190390762 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151777284 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166133772 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172008716 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126743853 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.162200574 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147382941 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218716848 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165832498 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184772841 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163957014 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.183921216 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194647902 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131870549 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105791743 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13468906 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19036852 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138948263 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137472982 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.268200458 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28536462 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166943801 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176597948 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144338528 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.103639731 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167578798 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155996066 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269956191 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122294919 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.14406168 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2058896 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.158168926 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138902601 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170788547 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333307953 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15042005 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19023166 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.127342021 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.323312564 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132715659 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111156271 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177166227 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178254445 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140395158 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188374321 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173174054 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123480941 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178719507 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144485268 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.261663116 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219156029 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178054018 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181444298 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.150420565 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165347517 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170454916 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192685328 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151369792 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150921249 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140886127 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22649256 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.202142813 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138964922 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142254197 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170857583 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167365738 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208987104 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112632332 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194124815 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139830986 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172630963 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147130784 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101888904 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164419423 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.258813329 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139601181 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191406144 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164007899 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110474933 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133653897 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159683868 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164231243 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122197634 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.137401373 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185281387 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13555981 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169412754 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161313116 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137958252 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161223267 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153576244 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108761386 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150642582 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152730455 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14158909 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.151891219 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197783009 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138824242 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193226557 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17901232 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171233663 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16748728 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152354736 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668873639 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107194981 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19916501 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155595209 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194966396 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157848785 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17294633 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168734185 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156073981 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175764558 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156168685 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228657303 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173363031 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165498898 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110003931 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152772607 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152559467 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.109910387 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158910531 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170573257 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147967077 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142663602 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.135143539 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154508033 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151978329 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145125745 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20151711 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154394746 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190172378 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192272879 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144398671 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172481889 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183240129 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107596987 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.167830164 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178169754 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151064616 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158615933 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13693085 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.113974716 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187760707 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.131402667 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168378983 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166377076 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168866898 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142879494 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.142563386 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167251934 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150189077 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167511404 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103665456 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161471326 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166019181 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138288751 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104965149 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1629492 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165659362 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166199308 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133303177 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152221146 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19699493 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.13378989 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138962661 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332085705 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165118297 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200674824 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.160129003 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141947081 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121883616 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162233532 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.159115712 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166121003 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135153295 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110079317 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138196964 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192110354 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172389649 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16326035 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194896105 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166041411 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195933242 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112368624 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.270244391 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145562899 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160657536 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.108956452 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134638641 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147616804 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112249544 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152329273 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260219595 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187953995 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156897559 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123292615 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133416033 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105400812 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140363944 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178648104 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160172508 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165596818 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14920302 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.096553755 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151575797 seconds)
  done (took 81.850238737 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158498564 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.159112873 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169658702 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.212763309 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184767238 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.276843123 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.223552599 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245944477 seconds)
  done (took 2.695401787 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.107108995 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.142946179 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148740501 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131618853 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.098205091 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.375600664 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142526464 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.104659804 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157866699 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.13977144 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.123539845 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.597573873 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.128924147 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128259869 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118311336 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.096778835 seconds)
  done (took 3.804943438 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.445517881 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.554360196 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.087386852 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.256399071 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234990913 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.183794344 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.764840867 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.172875405 seconds)
  done (took 12.769320891 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.130628889 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147144904 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145972169 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.172982044 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.158840692 seconds)
  done (took 1.83190965 seconds)
done (took 125.003358035 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101864546 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.132143766 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102849217 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132697675 seconds)
  done (took 1.528116144 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114790897 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.087190903 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.117048658 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085425897 seconds)
  done (took 1.473781056 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.435019751 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.11672854 seconds)
  done (took 1.658534383 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.134659221 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.152449383 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.120270663 seconds)
  done (took 1.484299437 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.111040125 seconds)
  done (took 1.189354551 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105429472 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134471109 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.120643359 seconds)
  done (took 1.436937686 seconds)
done (took 9.841109318 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117249639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440976432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391986822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144565698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729068437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385077718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.081655871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165146839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172745466 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096853483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.144515414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677036317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.032980822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349767849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019186809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376954534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679768431 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126079265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104639889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126538229 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.031913122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124711904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099257888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126855075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677008982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430726764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09775029 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.39209046 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096167804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131324497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.414382222 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097947414 seconds)
  done (took 17.147782747 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099586449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18957445 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105311653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127303213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100316899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.1287868 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.134438087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.111892245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187725853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126140685 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117287296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125338007 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102480703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126634354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11898186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126580584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099797638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129139234 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104401001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130073045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14454652 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097375796 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12722393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101387818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125296784 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11192138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125598842 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.110903911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12615234 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102812643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131998592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097771741 seconds)
  done (took 4.976727585 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148810869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.199450973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138035575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133542384 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.179416985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12902275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.2136993 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165481166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191725325 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098683489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146299385 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.097947987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.163960234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09813183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.149785801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097201227 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130365878 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128299872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105097091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126843165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11839304 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125198452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099572566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129370926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09770173 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140864591 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098129159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140867222 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124477019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103426783 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130854278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099172638 seconds)
  done (took 5.335367184 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106303272 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13511498 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115332663 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143976446 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101186113 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.134857402 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.106362594 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.129531636 seconds)
  done (took 2.060031476 seconds)
done (took 30.597259639 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116183553 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13191381 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.112175669 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139636574 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.108834931 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.163427223 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097382092 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.138857401 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.112171166 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135227547 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114992306 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.127191224 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100053841 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124544073 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.111889599 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.131627467 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.114547712 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.135362641 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.120397041 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.142417931 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.100346634 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.138976152 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108417287 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.14971382 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147700156 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.120310892 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.142964253 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104628653 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128078635 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099273227 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.144775396 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.124350452 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130680839 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.11508789 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133249635 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102584603 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.128996808 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.100025188 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.143067031 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108673772 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.134753328 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108487128 seconds)
  done (took 6.268785373 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.126238257 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.172312545 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.095043858 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125485879 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.095664578 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.167743232 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.163030519 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.096687198 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.126178701 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.12383719 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.153783435 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.124875788 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.096953546 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.095836719 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.125495471 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.096326692 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.152313041 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.151754883 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.130151054 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.159450866 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.173339102 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.130721624 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.163047362 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.152042331 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.141072624 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.164046905 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.149961693 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.13529556 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.15581791 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.124304048 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.130019793 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.161410457 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095920265 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.125720997 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.168503656 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.135097267 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15648594 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.169475733 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.130081756 seconds)
  done (took 6.436975508 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108311859 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146864162 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.131368376 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.270891894 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.141402979 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.146840746 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.113871937 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.149361661 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.15997806 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.099563484 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.140437602 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131242566 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146279622 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.111783076 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.135611047 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142809286 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.120096898 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.129294464 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108985074 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14913841 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117774896 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.14262261 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.117718165 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140052626 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099725934 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138504539 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.136688469 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11475819 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138167556 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.111136252 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.13311905 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103917291 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.131351818 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.11078515 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133832478 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.136347017 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121869783 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140654497 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.114560161 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.163631356 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.140220147 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.103841108 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152621752 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.180295626 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103560383 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.135431151 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110984946 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140947317 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099962475 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149459999 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115763879 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131837598 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144907072 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.098874027 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128850581 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109440901 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.131799219 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10339472 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139789583 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10485658 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.149841449 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110437714 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139306078 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103866726 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.139171417 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.127952795 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099951751 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.133695247 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.126447882 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137373683 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136669617 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.132906173 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.133873622 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111413898 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.136694689 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110961301 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12796637 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109523884 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140234092 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107322966 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.141105688 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103178376 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.132550573 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117922216 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144759737 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.136235081 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104842515 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135258526 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102693566 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.133373583 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118101442 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.132188965 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.103734721 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.14387133 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.131625764 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.103458457 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13474915 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104603362 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127653389 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123871342 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.135064161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098718888 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.152451217 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.101599166 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.135762074 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10919717 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.144170235 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.129372685 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105147619 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.13437006 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100006162 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.137935346 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103692522 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129048853 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.113779979 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145707145 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106748197 seconds)
  done (took 16.035173634 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.251492979 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.229207602 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20280792 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315660587 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.15301578 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.156651231 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.227204944 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.180666616 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100943508 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.169758793 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.186095967 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.197118387 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.185993477 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.196524536 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188590047 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.130274304 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.136601862 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.18409992 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.229237176 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.311658632 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.166866361 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.114387469 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173881998 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169938681 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.149471189 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.146367795 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.12439853 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.153875408 seconds)
  done (took 6.242868505 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116507255 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.171648036 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.137452202 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.129814067 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.156708547 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.131495153 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.105951579 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100303325 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146109178 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.146440607 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100695034 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137037776 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105751652 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.14043788 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099618777 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.139270472 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.109604505 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139062935 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.131299375 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.105190923 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15044376 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.1167764 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135113791 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.104925811 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146582131 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.136363443 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102259711 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.151016561 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.13945968 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.129164657 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.127539951 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108482449 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.146206453 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098992258 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.13884642 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.131932184 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.10307699 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.101154097 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.134396286 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096490331 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.129101877 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.089872664 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.136406026 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.144337249 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.107482932 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.130735243 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.106489734 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.135105237 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100646398 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126367518 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102956564 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132970475 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104411208 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147114854 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.104019427 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.130803864 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.103791485 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130060669 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.11009764 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.132379636 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.098217038 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.134640851 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.107124782 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.134968787 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109141067 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137353551 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.104783312 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.132771193 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104716021 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.138991552 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102809129 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.143091178 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096326972 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.134864213 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.110502361 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.143192464 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.13385917 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.105767847 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.136690367 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099596031 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.119671076 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099205233 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086202308 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134412962 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098472286 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.136742455 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102163446 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136858839 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.146400626 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109357069 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.138784276 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.100125682 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.136619932 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103461937 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.127100135 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.104488339 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.149430755 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149707531 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.099031473 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127636136 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121947007 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.131894289 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097792041 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118365488 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110218494 seconds)
  done (took 13.967888381 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128351339 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.168918478 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101100429 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.149698838 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.166453741 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.129498402 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.146443016 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108958488 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132538065 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120601275 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.138421653 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108538373 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.137911408 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145075091 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.129538012 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.144564401 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101179849 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146493658 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105834888 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172243276 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150976355 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.12693304 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163658571 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.141985429 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105745839 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.155273782 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.131654617 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.145902647 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112726499 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.163340635 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.145093033 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.131587351 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166090021 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.135568906 seconds)
  done (took 5.783722524 seconds)
done (took 55.815919859 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.221549085 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432970906 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.186362971 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.185920844 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.220508267 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.215667485 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.206602624 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.383358756 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.929646346 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.167099474 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.187378051 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.187234999 seconds)
done (took 27.633938629 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.304807293 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.799010357 seconds)
    (2/2) benchmarking "String"...
    done (took 1.499171146 seconds)
  done (took 4.418273766 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.180360262 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.18014223 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.428589676 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.17974323 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.20054084 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.201510498 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.180333983 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.210150035 seconds)
  done (took 15.688807014 seconds)
done (took 25.700923313 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.180971195 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.627146141 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.516127449 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.212978563 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.180378862 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.193122016 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.182709597 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.192007967 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.206245334 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.190399243 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.197744731 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.540175804 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.20191389 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.679151667 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.195623122 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.196045143 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.199207308 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.619118257 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.181821563 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.244704793 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.169872779 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.193781632 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.20473767 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.201453514 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.192594091 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.182687129 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.202208207 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.194159369 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.545369354 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.202878841 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.230606038 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.186112262 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.204476472 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.196924368 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297221796 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.216606106 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.492838716 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.194904094 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.177250027 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.198006402 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.501192773 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.609742848 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.185263246 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.207778559 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.187652708 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.185575848 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.179716197 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.920852462 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.191312751 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.18916057 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.269877053 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.60216309 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.187524614 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.198106996 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.213439341 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.537249878 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.186987311 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.271012197 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.228624923 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.189186333 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.211119423 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.185400594 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.261208681 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.189106138 seconds)
  done (took 143.821011795 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.185374516 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.189573433 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.189909718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.208942837 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.190545333 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.188977983 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.186654583 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.184703058 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.189659092 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.190924909 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.190511921 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.186677199 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.202745594 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.143373094 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.189171701 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.208109282 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.190537118 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.222698593 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.189063653 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.186367171 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.194236964 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.1904112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.203535488 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.187853627 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.198406059 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.274573815 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.207979883 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.21573214 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.185274795 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.186458768 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.202473793 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.195385604 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.830228793 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.044238709 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.199213253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.224878474 seconds)
  done (took 79.667824935 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.186587605 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188501666 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187703109 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.219867022 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.187642572 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.782057469 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775445484 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.981478787 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.613645372 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.63976506 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51540146 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.191853704 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284431384 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201769766 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.192513359 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203567705 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.21617909 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18860411 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189123506 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788623344 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204475559 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.503082047 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.372780671 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207185089 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22297983 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59024399 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.189510926 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222603347 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.528731418 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240695998 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189917427 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.570930428 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.351271169 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305859836 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191792006 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223993613 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.18904236 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.47613065 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.191338245 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.190391256 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.193125486 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.866857827 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.190491719 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.783017404 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194016175 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.177381052 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190088883 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19064751 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190419106 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.434448401 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.907834981 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.20807803 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.190832132 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.192448999 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.191698089 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190010449 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230901608 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.598156278 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311614995 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.192027054 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.195414383 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224584456 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.191705813 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.306178097 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195741235 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.711213897 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.254618304 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.410799956 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785702295 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195867023 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.291791668 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314054467 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191856552 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191863845 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191650705 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.190519583 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.304201694 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.192664449 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.637137206 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.372784375 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.210692598 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.704679904 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.2952195 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.192531728 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618808164 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.196836142 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.193584475 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961780722 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292460521 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193983832 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193894941 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.192689437 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.64277463 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777886249 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.511835716 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.196593259 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.66673157 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195968498 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.648660194 seconds)
    (100/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774319803 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194431802 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.876068967 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194660962 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309539039 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.374978234 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.210781082 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.194824001 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.193429036 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.705506045 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.198939014 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193747507 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194001815 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.250952987 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598939434 seconds)
  done (took 366.344784823 seconds)
done (took 590.940379097 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.909034396 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.855509423 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.983981695 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.882662153 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.847909242 seconds)
  done (took 10.598009053 seconds)
done (took 11.716485694 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.390851889 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.390820643 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257037064 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393110042 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231614632 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.41466894 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376592413 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.218243061 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.309749558 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282739284 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304711915 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255115884 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235939791 seconds)
  done (took 18.182497815 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.471381551 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.197763274 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260368821 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.436347659 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23488656 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.456844364 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.506569777 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.19746687 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.338863233 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209984882 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21040626 seconds)
  done (took 17.642753234 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.462911112 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.198399325 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265527747 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461449651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237919995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.46078486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.50816385 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.198634796 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.358184353 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211131552 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209923474 seconds)
  done (took 17.694498877 seconds)
done (took 54.638774526 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23723346 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.365870043 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229585259 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211089376 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.207488011 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208037221 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212051184 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.208487814 seconds)
  done (took 11.00299575 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.20399275 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.206779346 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.206319213 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205304378 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.203548897 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206817536 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.205419136 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.204154225 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207088689 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207495225 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206269094 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.206275681 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204210026 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204086545 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.204281547 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.204532502 seconds)
  done (took 20.409428344 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207688942 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.205274335 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.204862049 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.205844405 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205173824 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.205538531 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.206950021 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.205839754 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.205103594 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205697862 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.206155381 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.206057762 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.205519716 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.205335451 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205541152 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206708967 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.206119873 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.205294783 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212384608 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205242963 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.206445292 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.205972109 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205229328 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.205381403 seconds)
  done (took 30.073016049 seconds)
done (took 62.605962174 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.200623985 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.218613974 seconds)
  done (took 5.545397608 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.26831274 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.269247238 seconds)
  done (took 3.66453516 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209438735 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.208444168 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.209760809 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.208541601 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209036125 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208577772 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.208694952 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.208894832 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.208518978 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208942622 seconds)
  done (took 13.213740123 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.209112156 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210419374 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.205930128 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.209987369 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.210582599 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.206843497 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.209622132 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.209646454 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21052439 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.205990629 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210516039 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.208234963 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210140972 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.207710167 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.211540587 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.206997655 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208127488 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.207190912 seconds)
  done (took 22.885181719 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223728919 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.231299754 seconds)
  done (took 3.581456631 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.34933039 seconds)
    (2/7) benchmarking "second"...
    done (took 1.251072094 seconds)
    (3/7) benchmarking "month"...
    done (took 1.323966482 seconds)
    (4/7) benchmarking "year"...
    done (took 1.315925962 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.2497899 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.23003412 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.250165712 seconds)
  done (took 10.097110856 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211445816 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404819249 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.512528927 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.775588312 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.211661573 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.216344638 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.089617571 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.215417424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217351445 seconds)
  done (took 13.982874871 seconds)
done (took 74.094521022 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.203250278 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.283536513 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.213183858 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.220256371 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.504045891 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.240789222 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.208755883 seconds)
done (took 16.000490234 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.201811449 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.20815364 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.200598363 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.207251171 seconds)
  done (took 9.947266396 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.209667891 seconds)
    (2/2) benchmarking "read"...
    done (took 1.571791937 seconds)
  done (took 4.91155631 seconds)
done (took 15.986904215 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21325425 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212391107 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.211993034 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.210214307 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.213740197 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.209386798 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211548176 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213649284 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213585152 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.212736463 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.214395702 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213186805 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211132363 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210710903 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213706619 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.211716121 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21190987 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.213077341 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210677223 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.210635335 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212762335 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214091503 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.210827113 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.211562688 seconds)
  done (took 30.222934601 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.21366779 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21107502 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.21279123 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.214799167 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211882559 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213701042 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213191226 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211065309 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214812777 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.214163279 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211150387 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211710427 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.214744552 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212442502 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214811732 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212235758 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213820052 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212006054 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215433381 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.21239389 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216376181 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213278677 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212040071 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215098238 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212348872 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21470494 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215585547 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212679988 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216063151 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.2129274 seconds)
  done (took 37.534365192 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.221021601 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223680435 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215783952 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215040982 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215794872 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215967019 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216722054 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215495858 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214348166 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217025921 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.216645553 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216589685 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217188207 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217149603 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.218244567 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.216781591 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216414687 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217167866 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.216779212 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216317793 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.217994683 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216474109 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216627524 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21647491 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.218325319 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215828102 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.217614557 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217126247 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217319876 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.217890366 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.217547779 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.216057389 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216599593 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.217696595 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.217496698 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217424051 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.223522983 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.227556709 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.218053379 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216777464 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217934332 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.218167178 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.219304547 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.218981543 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217685152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217338569 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.218654685 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.217501566 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.218329533 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216823877 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217809661 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.217144593 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217759379 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219270263 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.218502238 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.218425491 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.219121378 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218333338 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220574329 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219456258 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219441533 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219460695 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218692767 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.220007617 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221188007 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219756048 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220572953 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217748266 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220270709 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219477838 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.218852464 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220083562 seconds)
  done (took 88.837169572 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.220256376 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218121166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217576731 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217842612 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217933326 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.222045481 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.219012733 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219579933 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218210327 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22060959 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22021725 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.220733846 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21730602 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.221564414 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2218907 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218805945 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.222319272 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219112143 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.221642831 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222495729 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222137307 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.220459751 seconds)
  done (took 27.975451671 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221988208 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222253193 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.219473811 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225033352 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220834507 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224710032 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.222363521 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223779793 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223025371 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219113622 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720072657 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221810651 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222081715 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21963256 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221310767 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221697952 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221926004 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221520298 seconds)
  done (took 23.629749041 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220918955 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220424762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.221864859 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218937742 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.220653074 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223639656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220362363 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222615234 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.223683667 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219911028 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.223313257 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223798579 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.224180862 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221333543 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223305858 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220504604 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.224196292 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221288597 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224079652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222779682 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220954325 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224441907 seconds)
  done (took 28.026072167 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223669002 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225327833 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22228727 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.221233143 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220650654 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.224931608 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.22571542 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.222467657 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.226840095 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.225233651 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222780337 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.225236811 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.223648251 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223509922 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222762605 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222786406 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227743173 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221817993 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225396403 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.223296676 seconds)
  done (took 25.61759006 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227808311 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228356117 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.227564635 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228785083 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229516392 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.22822702 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22975959 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230554208 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229197679 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232033311 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229790882 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229191184 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228931507 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23018047 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229577825 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228905033 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229185175 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.229701483 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.22921279 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229828456 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229317741 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230009627 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230021109 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229308095 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230595224 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230287381 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229606026 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.229394826 seconds)
  done (took 35.56657051 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227879261 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2277765 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.224743662 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.226220036 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.226714766 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.226293171 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.226731908 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.225706155 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229362787 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225508022 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.228427114 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.22763001 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228546827 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.228677487 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229056643 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.229661782 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230024249 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.227427208 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226956629 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225451913 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.228557723 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228311696 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.228511538 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226755885 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226648531 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230903364 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227248031 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227197513 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230190471 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226928132 seconds)
  done (took 37.974509999 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.275289915 seconds)
    (2/2) benchmarking "in"...
    done (took 1.269123213 seconds)
  done (took 3.688583729 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.227367113 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230401247 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.230236977 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227593077 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227930598 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230507428 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228540518 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22803304 seconds)
  done (took 10.975809479 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.231566804 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.231269223 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.232029761 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.229736917 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.232766386 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.231954914 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237738813 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.251541288 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.230904503 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.232962424 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240716024 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23939952 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232681651 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231576175 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232028492 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233829803 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232521814 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.233522358 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.234346012 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234014923 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233598594 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234687789 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233851886 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.231599994 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.235166742 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.243524797 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.235382642 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.23362624 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233613576 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.235178159 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.231926419 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.230071295 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.234771358 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.236657793 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.233803112 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235261645 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240476637 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256951542 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239767951 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23427533 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23447026 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.231479481 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.233891498 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.234267771 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236048173 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.234624322 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.234784949 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.230709245 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.23351705 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237750592 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.239947357 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234058667 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.231991641 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235889646 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236339415 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240735066 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.255696074 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.238959667 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.245560116 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245562574 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.247465021 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.26073283 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236318839 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.236955922 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245897206 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.258789899 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241593846 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253789016 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.233604054 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.234569412 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242173753 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249739398 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262125566 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.237155017 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237704299 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.234570134 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237254745 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238002405 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242427741 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258299537 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.236206705 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237607591 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246933718 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.261148002 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236963772 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238744942 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.238607946 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.238193234 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.238389719 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24767397 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259243824 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238565526 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.236058919 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.23571909 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.238282037 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239531857 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.236553287 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237731792 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.234900969 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239025888 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23855812 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241511494 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.248034773 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240070003 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239971122 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.244722186 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.23933743 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239853103 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.243504142 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.238368069 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238467914 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.241046037 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.243735152 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23668025 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242108302 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248457826 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.239004046 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.239933988 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.239379344 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.238866333 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248174819 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265729595 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239540497 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.238712296 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245465471 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.251157877 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240376096 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.240610537 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240266222 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.236085424 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.23750322 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23884765 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24117472 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240114776 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239852856 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239935349 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.238758027 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.240216245 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239782612 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241139994 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.240861334 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.240884644 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.241398262 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.241888809 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.240497588 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.241985957 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245798035 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240399894 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241656503 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.239987982 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238870212 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240985084 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241988471 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.241762651 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.23983209 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242497844 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.241268804 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.241778445 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242750164 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.240549924 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241038244 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24168231 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247060248 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243254123 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.245303629 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242419581 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.239523424 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242771834 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.242595246 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.240978225 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.243564642 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.240818442 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.244998132 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.25335217 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.243138763 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.24554825 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243788083 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243849561 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244641206 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244435807 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247053915 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251729792 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244724318 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.249735017 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.246241324 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245081154 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.244131833 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.243714963 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243515106 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24457586 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247279301 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.252486667 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253782879 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269432235 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.244906804 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.249041091 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.24507051 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250339046 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.247581536 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.244029952 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.246650768 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245043609 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244037246 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245070528 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.245305372 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245019938 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.243234302 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.243892321 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.245682085 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.244562088 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245147649 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.245363063 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246128586 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.242329916 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246735209 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244685855 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.244362264 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.242949622 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.243489481 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.244877213 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.244743365 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.246827394 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251661731 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.243335589 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246967982 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246001231 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.244394606 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.245238395 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.246323327 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246494859 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.245178267 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252529277 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26677637 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.246836477 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252965826 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266232495 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.245855308 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.248529817 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.246899633 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.243998257 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25056271 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257331303 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.247381449 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.247882682 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249097782 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247592208 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247726236 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.254649103 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.245118663 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247531453 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249191725 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.248329995 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.244945446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.250292895 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.248926699 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.247991719 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25113816 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248470512 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.248084019 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249978898 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.249593946 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.249862067 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.248156889 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25287525 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258830081 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254011643 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.25011527 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253765978 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25086719 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.255347499 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248829989 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.249887443 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.250564563 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262013393 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276603821 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253298888 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.268639537 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.25002344 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254172826 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.270688028 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.252660576 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249333555 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24967905 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25103906 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.248078595 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.247941085 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249431789 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.251178911 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250012437 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.250905638 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.254893886 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.250843985 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247543306 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.253331638 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.250459153 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.250924688 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.251009489 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.251212198 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.251854897 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252021308 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.249827797 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.250481101 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258023436 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271409203 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25311552 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.251723877 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251394279 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.251045898 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.252790466 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252518024 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.255971143 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260736118 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.255469044 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261256092 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253715865 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261536385 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.253049572 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255715526 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261129068 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.250167689 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.253679031 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25462754 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.252280364 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259831185 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.273526015 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.253934332 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.257552117 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252842396 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.254625589 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.253019027 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.253971242 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253365417 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.253254405 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261243438 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.275747175 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.256409119 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254238783 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.250949997 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.253029999 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.253832592 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.252796469 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255233309 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.254773339 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255044649 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252886791 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.254127724 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.25497227 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.254549906 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.254719965 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.251666258 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254560366 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259716368 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.276261319 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259279069 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.255679673 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.2601897 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256262402 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260283819 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.275852645 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.255073841 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256994072 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.254930296 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.25558177 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.254415756 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256335939 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.257265713 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25697585 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259315607 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256813751 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.257293541 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.255148224 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256568239 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.256082454 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266339452 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284125931 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.257476154 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260754093 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.252322466 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.257080168 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263364968 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.258950226 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.256347544 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257504692 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268521619 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265427868 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.25651091 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257014507 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256808273 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257612737 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.256565083 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257178566 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.257906958 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.25659334 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.256620588 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.257204186 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259476456 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257006211 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.256498286 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258580419 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.258005588 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.267428674 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.259539996 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.25846866 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258383125 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259624502 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.257591214 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258163869 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.25944744 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258465566 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259955748 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.259364396 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26580824 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.265214251 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.259457966 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.257577848 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259446802 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.259356498 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.258441522 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260551483 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260665582 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260841661 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.259073731 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.260987839 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.26114155 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259059446 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.259521121 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.259992458 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259827094 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261718422 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.268853216 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259290474 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.256863432 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.260465259 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260433049 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.258061942 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.260086691 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.267050786 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264397422 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.272825331 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269718773 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266350267 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.26004447 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264553863 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269497689 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.261207238 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.261747581 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.262181822 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26282939 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261922016 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.265697719 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262484682 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.26641902 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26221608 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.260524263 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268989554 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285210228 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261617966 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.263799455 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.265828105 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261617494 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.259265237 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.26114759 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.262425526 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.266696808 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.282898319 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262561053 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26399711 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.260888758 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.26332575 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267990117 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263870861 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263657426 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.259522433 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26275615 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263735002 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262153978 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.260271002 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.262191914 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.262423033 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267189793 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.269108436 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.260709482 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263087944 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.261776145 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.264430041 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263105849 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264281014 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.259747468 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.261138459 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.262826482 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264037255 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264241054 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.266483062 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.263065245 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265190958 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.267024993 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265717629 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267745023 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277202145 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.274455802 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.261757341 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.264184038 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.265003593 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.26672028 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264685968 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.264711102 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265764744 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26614529 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.264147905 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266263468 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.265988604 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.268765473 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281882032 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.288629858 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265988185 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.266782258 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268458098 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.264774033 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.262768608 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.266452478 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266063839 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.268919289 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.275301949 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.267007742 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272364955 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285441789 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.268003012 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.271708444 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.269253864 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.274354051 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.268487898 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268149854 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267089679 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.27087402 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.282688943 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267583457 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276411877 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296597159 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.286913264 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.267675557 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.269064031 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266963228 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.267983267 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268636626 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.267585622 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.269082583 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268681458 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.267522745 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.267372798 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274225137 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.268839636 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.269611337 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.268540949 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26831157 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.269323264 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.265572508 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268400214 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.268409811 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.270833717 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269194652 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.26939707 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.268572084 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281687247 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297207054 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269970482 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270578981 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.266567878 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272271824 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273256084 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281968308 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279944465 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.270770791 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.270926982 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.270472501 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271168761 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270566873 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.269751965 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.271423885 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271387603 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.26821528 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283345696 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298284945 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.27420012 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.270290169 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272322538 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.271668897 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272965028 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271195826 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27298917 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271806078 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.274827712 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276440806 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.270790514 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.270974497 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.274432552 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.281337039 seconds)
  done (took 748.470257208 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26950576 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269810772 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268239874 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269609684 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269338116 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26973745 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267943493 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268582759 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269473396 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269693879 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270659241 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267925685 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.271055826 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270389052 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269960124 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270047316 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270022126 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269197516 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27123333 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268204618 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269703007 seconds)
  done (took 27.842480619 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.271773375 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.269893433 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270392121 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273378029 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270917237 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273858665 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.270612939 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273920877 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.273454116 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269403153 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2732827 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273422804 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271845013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.27154216 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271239097 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274358367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.273736322 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271642754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.274444797 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272021344 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274136379 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.270669311 seconds)
  done (took 29.173697539 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275465269 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.275994994 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274384668 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.27193825 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274716868 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.271540439 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274670886 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.276083637 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274856718 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.275516706 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.27376986 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.276288909 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282896305 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.281967211 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.277547663 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.276208354 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.278426367 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.276586822 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.275701272 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.275418434 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280272046 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.294058595 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.274089227 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.275975319 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275692442 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.276236005 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.275182931 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.275734887 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.2765736 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281692334 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.276052811 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27520414 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.278685919 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.27580574 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.278075517 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.280588605 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.277710719 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.274775535 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.276612521 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.285225336 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.299825164 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.27740741 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.281484466 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.297124896 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.27864353 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280504811 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.286808523 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.274924714 seconds)
  done (took 62.547201982 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.880521763 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.900221126 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.899354237 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.907628321 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.910649763 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.917914363 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.914938943 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.896394206 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.913124947 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.901583412 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.89654958 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.892231894 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.891229862 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.897025935 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.910526219 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.894241315 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.891467319 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.91224534 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.893004036 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.894541637 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.911558166 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.91735213 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.909778224 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.909135074 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.912090481 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.905170798 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.903458435 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.903812492 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.900915432 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.943127641 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.902377787 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.904844353 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.90316477 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.902798768 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.901756566 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.895806147 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.898692711 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.91864061 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.91728338 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.895319151 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.896478397 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.899028673 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.911372159 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.89681587 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.894317078 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.896208803 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.894303971 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.897633147 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.894381216 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.896433895 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.896065461 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.900864963 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.915867158 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.902763147 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.921209676 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.901489024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.90008125 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.916526553 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.903053306 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.896872274 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.895496718 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.914236469 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.912245885 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.899939389 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.913346345 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.915287241 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.943169985 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.914956809 seconds)
  done (took 130.702317007 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284982872 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283059583 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284515178 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283702651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284721429 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28415605 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284460798 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.283315541 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285120123 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284443976 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284806176 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282601422 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.284242103 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282581189 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284708393 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283678443 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284219457 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285760193 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284287674 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284505398 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.283478666 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284840417 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.282867732 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284670383 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.285197628 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284722044 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284655858 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285049894 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285161383 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284527724 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285464644 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.285279158 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285781959 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285314525 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286456301 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.285007062 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28495865 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285761992 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.284555975 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285952597 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284764171 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285902198 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286786335 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.284713528 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285099254 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286687746 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287058349 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288065011 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284678129 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28607992 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.285395121 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287007887 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285360304 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287150538 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286456517 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.286479673 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287130863 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286134411 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286001445 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287468462 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28786755 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.286159739 seconds)
  done (took 80.876086913 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288062615 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286864271 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.28317316 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.281096887 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287861485 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284694136 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.286567903 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.287230437 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287238744 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.286875453 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288089342 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284744006 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286502291 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288077238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284424253 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284588769 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286120034 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285250335 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287649216 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283779037 seconds)
  done (took 26.914396332 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.285775745 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28758693 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.285139097 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285435271 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.287581291 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28539471 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.28958936 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287412495 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284153912 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288901677 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288119972 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288018108 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286755669 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286002146 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288290397 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286624377 seconds)
  done (took 21.787917838 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.286944775 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.289253247 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.28964673 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.289679219 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285892471 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.285155323 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.289521612 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.286736783 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.287969476 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.289927706 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289571806 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290846727 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.288679175 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.287963585 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.28634765 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.289244955 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.287424343 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.286164728 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.289406315 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.291498706 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.288258966 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.287310283 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.290841613 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.291543555 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.288168976 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287600142 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.288540291 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.287541028 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.287573455 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291769604 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.289344931 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287982927 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288515806 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.287463669 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.291076146 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.288280982 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.291602425 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.290956504 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.292610941 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.292226893 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.291761675 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289502081 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.291328882 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.292092686 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.288680342 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.292070594 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.289104613 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.289840079 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.289086671 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.28964936 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.292161503 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294105231 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.292731747 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.293242437 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29212486 seconds)
  done (took 72.123337601 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291580873 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292178138 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289601697 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292269915 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293153385 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.28972605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.294170123 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290970981 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29048576 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293557349 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292066182 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295016651 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290582133 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294804429 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290277223 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293877705 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289597498 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291153737 seconds)
  done (took 24.455485007 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.291307425 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291834996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295330589 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291380825 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.291656036 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293831964 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29137733 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.293843409 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293980985 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.291406467 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29189923 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.293375706 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295720711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295273682 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291511575 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291776341 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295195704 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294124794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291552764 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291439416 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295715579 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294552489 seconds)
  done (took 29.649645806 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.293197431 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.292429358 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.293075572 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.311970673 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.31690354 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.294098784 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.293612715 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.293749562 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.316974068 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.352333479 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.34642498 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.316986177 seconds)
  done (took 16.924574436 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294017319 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296219492 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2937097 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295982789 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297384487 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293863068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292468438 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294199272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295806746 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29437975 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294159367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296777511 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297528051 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294672972 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296376824 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296687045 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294071882 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294760494 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29413739 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29707199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293842264 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298966961 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295251027 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29417091 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294716454 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294339827 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296273546 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294876371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294236475 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298188521 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297834148 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294322498 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298377544 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294703544 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298605596 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297393496 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296551283 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29773951 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297489121 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295647166 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29801941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298657741 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299277893 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296280361 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299285763 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296417437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295084674 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296075216 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297658228 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300140949 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299906032 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297956635 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299039986 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299764958 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299966807 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300048093 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298129529 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297513988 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299182625 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297433938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29716386 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299491182 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295791537 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298326899 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300493895 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297483453 seconds)
  done (took 86.787792745 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297595818 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297345972 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298674178 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298151344 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297295494 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29673404 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297584668 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297879744 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298296309 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298259334 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29985917 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298277365 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297812293 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297717818 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296138432 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297972861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298507038 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298858604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296886252 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301290412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298811599 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298622712 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299910239 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297095339 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298755952 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302288394 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300708901 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297920413 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29911779 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298976328 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298806029 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299647277 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300723677 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299649566 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298310334 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299926986 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300143471 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298742738 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29933647 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304005432 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299908803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30187573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299805714 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299972718 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299686849 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299606663 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301034697 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300731353 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299134879 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300794276 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301002406 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302021612 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30226228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301037783 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301119428 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302045857 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301006826 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302706048 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301078277 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303111784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301784818 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302244352 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303626953 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302042709 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301896924 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302035964 seconds)
  done (took 86.996949673 seconds)
done (took 1796.429014176 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.466411493 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420879105 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.302185097 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.318410654 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302470453 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.298365768 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.314745497 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.302027071 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.302993386 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.30283417 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303194483 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492219545 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.297072065 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.303990571 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304748577 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.401436718 seconds)
  done (took 26.646675414 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333428216 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310278486 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437102965 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.329223808 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33325435 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.511855421 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369148851 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.307805233 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.505519326 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.356912585 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.29934164 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337686814 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.307043915 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.312354918 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.331472281 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514656859 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.593909929 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.302927052 seconds)
  done (took 29.006276382 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.825374139 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.314790867 seconds)
  done (took 5.35354844 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329118277 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.309160845 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.31161198 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.307778093 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.299990423 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.320170513 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307636805 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.302278976 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.300212226 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.454365509 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.314874728 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.319681056 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331447446 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310184778 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.308844914 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350467556 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.482087865 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.307701987 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306268682 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.315183757 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.31023428 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.402211071 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.355764923 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.311860771 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.453013658 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.32220915 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.317597394 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.318735957 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.441064946 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.307818709 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310772492 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.309577507 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312976111 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.263398498 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.781922215 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.322823392 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.336803147 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31859862 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307616876 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.462266102 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311086887 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.3187544 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.304561503 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.780360957 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468163363 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.448354513 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.332602749 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.316523504 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.312059632 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.384208145 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.314945997 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312686407 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.358112398 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.150004346 seconds)
  done (took 84.192680982 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.307895838 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.303681141 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487415118 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.325554521 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.308764649 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.307977766 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.306708129 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.636523534 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.323999467 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304064286 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.611128115 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.927693813 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328055576 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.352856055 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.16049574 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.36129129 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306584939 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.323050635 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.309597107 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.309372846 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886708075 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31087267 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.325594361 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.399212667 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346265568 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.86446439 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.318797379 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.322283057 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.30901948 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.305846931 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.879548526 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.338585605 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.369342267 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.305386043 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.59702449 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.728127722 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.684082461 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.306388108 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.353078265 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.308868832 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.332432549 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844627612 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704996831 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.307931511 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.307190158 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.852695698 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.306281381 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.310920771 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.306926966 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56024105 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.306949718 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.308466522 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.326827902 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.333415683 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.306413357 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.424398569 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.376587753 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.863514103 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305878539 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.307819958 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349592601 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307279869 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.318939733 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311854028 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.328475347 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711416575 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.521627724 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.311266596 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.707097088 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877666177 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.331481914 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942100633 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.332854442 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.312225071 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.493070289 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309204127 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309734044 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.887315359 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.322832588 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.308357323 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.689012716 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312044484 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.617860262 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.337730852 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.308182017 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898888682 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.318572077 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.310358599 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.308862587 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.31444772 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31066242 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.310545517 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.625562227 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.332873408 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.30961035 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.310432734 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.337096498 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.316042944 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.313321475 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.31164576 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.940536908 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.34242145 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.311328113 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312443915 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310530573 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.333703199 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.310193617 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.31143345 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582107007 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.312330816 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.335431591 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.313325164 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.310161059 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.314115692 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.409224657 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.310749274 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.674760962 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.316576904 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315220433 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.333406175 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311776047 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.385917388 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313557584 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.3163366 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.213817167 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.579697705 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.332708989 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.313604263 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312751487 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313509073 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331205751 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333288799 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.345029441 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.312918672 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128248099 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.342435112 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.317616155 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.311985234 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.326286861 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310899892 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.342949103 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.315164461 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614043682 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.606977132 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.526419112 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.315157438 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.326783496 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.10684749 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.352388488 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496012689 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334363704 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314593942 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566355805 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.536961541 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314424216 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.317689099 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.317239291 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579227467 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.314088232 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628395945 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.91478581 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.338804977 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.326543962 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.130042926 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.069575022 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.317688335 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.31850479 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.620729625 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.338249645 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316013142 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.315531179 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.31597362 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.316048389 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.337071064 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.319333155 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.314566933 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.317629148 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.643467232 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.514758953 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.334481126 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.322079336 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.881273458 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.330553341 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316189877 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.341899449 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.324589213 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.316121852 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.389340685 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.316488979 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.352996169 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.317454734 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.318643563 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.889188181 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.316197251 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.318053238 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.51067897 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.057283431 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.33914991 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317367792 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.335131743 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.206517844 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906239378 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.350971907 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.681370797 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.334342955 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358011995 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318513344 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373175387 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901383432 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320965363 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.33724918 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.024950657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.339181892 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.742248679 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.317873027 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.316625548 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980125158 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.340019404 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.322047212 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.318030666 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338742714 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.622268936 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.318886708 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.324634107 seconds)
  done (took 495.778709793 seconds)
done (took 642.188520932 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.319029309 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.318818421 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.311771404 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.318855605 seconds)
  done (took 10.501025567 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.328146674 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326489917 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328947194 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.325622011 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.329448574 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.328238848 seconds)
  done (took 9.199700838 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.319942398 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.319375224 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.323274245 seconds)
  done (took 8.194456172 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.552325139 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.353103472 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.705886594 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.342687753 seconds)
  done (took 9.18834177 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.328978487 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.327605459 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.329920872 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330469445 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.330582439 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.332684189 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330401864 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.3316858 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332161575 seconds)
  done (took 13.206221663 seconds)
done (took 51.519490508 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.97244355 seconds)
    (2/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.404834175 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.519519371 seconds)
    (4/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.347060064 seconds)
    (5/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.519877395 seconds)
    (6/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.372892333 seconds)
    (7/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.3416385 seconds)
    (8/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.325437108 seconds)
    (9/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.385057039 seconds)
    (10/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.314637547 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.366317485 seconds)
    (12/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.409411495 seconds)
    (13/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.159061536 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.340040332 seconds)
    (15/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.337370893 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.340222439 seconds)
    (17/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.343110222 seconds)
    (18/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.454131109 seconds)
    (19/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.352310627 seconds)
    (20/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.339927713 seconds)
    (21/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.458491565 seconds)
    (22/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.361692931 seconds)
    (23/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.481301602 seconds)
    (24/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.410540403 seconds)
    (25/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.689972879 seconds)
    (26/286) benchmarking ("sort", BigInt, false)...
    done (took 2.343240655 seconds)
    (27/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.538972382 seconds)
    (28/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.348435099 seconds)
    (29/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.425389283 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 1.782909621 seconds)
    (31/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.39924893 seconds)
    (32/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.456300871 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.361515001 seconds)
    (34/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.092321366 seconds)
    (35/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.351004211 seconds)
    (36/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.410564251 seconds)
    (37/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.980944501 seconds)
    (38/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.430886094 seconds)
    (39/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.206843792 seconds)
    (40/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.390942266 seconds)
    (41/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.029227778 seconds)
    (42/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.428481958 seconds)
    (43/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.336692207 seconds)
    (44/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.34861531 seconds)
    (45/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.396947458 seconds)
    (46/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.343693666 seconds)
    (47/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.354307723 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.345879686 seconds)
    (49/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.980702219 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.352787734 seconds)
    (51/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333346736 seconds)
    (52/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.345188513 seconds)
    (53/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.34095616 seconds)
    (54/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.408539376 seconds)
    (55/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.367838033 seconds)
    (56/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.972661195 seconds)
    (57/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.466582751 seconds)
    (58/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.323200564 seconds)
    (59/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.457116296 seconds)
    (60/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.404511671 seconds)
    (61/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.347790778 seconds)
    (62/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.409918273 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.339496327 seconds)
    (64/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.403201591 seconds)
    (65/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.467878962 seconds)
    (66/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.46040092 seconds)
    (67/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.324122454 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.700464491 seconds)
    (69/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.364044195 seconds)
    (70/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.452687243 seconds)
    (71/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.541615321 seconds)
    (72/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.498241147 seconds)
    (73/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.507608713 seconds)
    (74/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.360914407 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.541601017 seconds)
    (76/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.327083797 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.37449729 seconds)
    (78/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.33607615 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.424891866 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 1.529922415 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.436479324 seconds)
    (82/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.091869014 seconds)
    (83/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.3563449 seconds)
    (84/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.494902816 seconds)
    (85/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.326401567 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.552618125 seconds)
    (87/286) benchmarking ("sort", Float32, false)...
    done (took 1.505207308 seconds)
    (88/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.336574543 seconds)
    (89/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.414375115 seconds)
    (90/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.444476186 seconds)
    (91/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.616107823 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.506752079 seconds)
    (93/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.314141696 seconds)
    (94/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.51325393 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.3880887 seconds)
    (96/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.363985868 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.437023042 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.424515222 seconds)
    (99/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.341165851 seconds)
    (100/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.340757056 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.351636416 seconds)
    (102/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.343452107 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.435462299 seconds)
    (104/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.349390299 seconds)
    (105/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.351780304 seconds)
    (106/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.484006024 seconds)
    (107/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.509331098 seconds)
    (108/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.350824619 seconds)
    (109/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.343886456 seconds)
    (110/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.389947874 seconds)
    (111/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.342788071 seconds)
    (112/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.342722769 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.362135593 seconds)
    (114/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.982705634 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.338259414 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.356456276 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.387534943 seconds)
    (118/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.404564102 seconds)
    (119/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.365245567 seconds)
    (120/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.007945315 seconds)
    (121/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.719139606 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.426944841 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.360279603 seconds)
    (124/286) benchmarking ("sort", Int8, true)...
    done (took 1.67554236 seconds)
    (125/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.518988707 seconds)
    (126/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.437957888 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.467119174 seconds)
    (128/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.33072284 seconds)
    (129/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.350655145 seconds)
    (130/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.550245868 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.343232076 seconds)
    (132/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.353493688 seconds)
    (133/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.433857989 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.330020324 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.419704593 seconds)
    (136/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.382057295 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.127633752 seconds)
    (138/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.409284774 seconds)
    (139/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.409622874 seconds)
    (140/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.351016978 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.354173795 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.429849444 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.34590474 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.319398573 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.515592424 seconds)
    (146/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.332085791 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.379380365 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.972949372 seconds)
    (149/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.520566638 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.553764183 seconds)
    (151/286) benchmarking ("sort", Float64, false)...
    done (took 1.549140809 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.540185288 seconds)
    (153/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.352577602 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.384422494 seconds)
    (155/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.413072929 seconds)
    (156/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.434186857 seconds)
    (157/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.508620803 seconds)
    (158/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.37515938 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.383030661 seconds)
    (160/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.38365104 seconds)
    (161/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.471573923 seconds)
    (162/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.418057562 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.429906985 seconds)
    (164/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.102261504 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.464269281 seconds)
    (166/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.384381275 seconds)
    (167/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.397830291 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.347714174 seconds)
    (169/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.232100925 seconds)
    (170/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.565669026 seconds)
    (171/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.239191603 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.36057352 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.333195562 seconds)
    (174/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.352001358 seconds)
    (175/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.332589556 seconds)
    (176/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.350623794 seconds)
    (177/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.173113369 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.430899512 seconds)
    (179/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.348824427 seconds)
    (180/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.348687902 seconds)
    (181/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.49890857 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.11742411 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 1.569043869 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.346019505 seconds)
    (185/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.332940097 seconds)
    (186/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.328065482 seconds)
    (187/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.486698462 seconds)
    (188/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.339591652 seconds)
    (189/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.359112124 seconds)
    (190/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.348259452 seconds)
    (191/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.348836905 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.408443389 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.322359204 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.459166783 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.433900183 seconds)
    (196/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.336363519 seconds)
    (197/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.357432911 seconds)
    (198/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.343755256 seconds)
    (199/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.051137092 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.415517354 seconds)
    (201/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.552569867 seconds)
    (202/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.323338982 seconds)
    (203/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.327133829 seconds)
    (204/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.359669329 seconds)
    (205/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.409956767 seconds)
    (206/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.467280242 seconds)
    (207/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.408511606 seconds)
    (208/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.340824874 seconds)
    (209/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.340345666 seconds)
    (210/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.534656359 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.364635615 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.324151648 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.423730632 seconds)
    (214/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.347907607 seconds)
    (215/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.367673301 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.347839569 seconds)
    (217/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.342248252 seconds)
    (218/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.322965456 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.505078977 seconds)
    (220/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.336407436 seconds)
    (221/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.374647281 seconds)
    (222/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.366620657 seconds)
    (223/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.336872536 seconds)
    (224/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.335429765 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.334921326 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.347153324 seconds)
    (227/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.353243848 seconds)
    (228/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.352130693 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.453180859 seconds)
    (230/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.350926808 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.005957661 seconds)
    (232/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.354236937 seconds)
    (233/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.04669641 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.583003568 seconds)
    (235/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.480885252 seconds)
    (236/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.518566334 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.397625657 seconds)
    (238/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.497196133 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.365688281 seconds)
    (240/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.360028597 seconds)
    (241/286) benchmarking ("sort", Float64, true)...
    done (took 1.947200215 seconds)
    (242/286) benchmarking ("sort", Float32, true)...
    done (took 1.929049538 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353838101 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.242813449 seconds)
    (245/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.144045525 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.399000047 seconds)
    (247/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.357560486 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.356241901 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.342352587 seconds)
    (250/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.424967363 seconds)
    (251/286) benchmarking ("sort", Int8, false)...
    done (took 1.507597794 seconds)
    (252/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.356083553 seconds)
    (253/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.344881305 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.433674236 seconds)
    (255/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.416147692 seconds)
    (256/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.380882865 seconds)
    (257/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.508783192 seconds)
    (258/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.345696934 seconds)
    (259/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.33107499 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.400427265 seconds)
    (261/286) benchmarking ("sort", BigInt, true)...
    done (took 2.338315764 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.557921893 seconds)
    (263/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.355487278 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.359622891 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.358797386 seconds)
    (266/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.423812865 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.367480868 seconds)
    (268/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.460260172 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.354147532 seconds)
    (270/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.39351236 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.527600591 seconds)
    (272/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.385302111 seconds)
    (273/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.540212422 seconds)
    (274/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.347992886 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.081591196 seconds)
    (276/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.42776514 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.368350229 seconds)
    (278/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.565657879 seconds)
    (279/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.103656368 seconds)
    (280/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.514899478 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.368074107 seconds)
    (282/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355419 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.108874923 seconds)
    (284/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.367115965 seconds)
    (285/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.333329988 seconds)
    (286/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.728715592 seconds)
  done (took 472.494500701 seconds)
done (took 473.728805019 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.384966486 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398216892 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.350360253 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.385530279 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.465697332 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.5316184 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.361516897 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.391461784 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.399668186 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40241279 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.358451195 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.52934048 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.352911822 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.352525704 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.353774246 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396064148 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349022048 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.356381824 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.370292872 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.392501312 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.368918546 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357876 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.402586569 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.531200396 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.355104629 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.356881935 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.356134965 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.373116155 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.465521018 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.357489852 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.356924715 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.364884342 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.351867098 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.36118897 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.347332843 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.372493768 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.364679883 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.363377551 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.387622424 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.464984945 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.355927618 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.365705395 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.355160842 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.356574049 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.354973363 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.393900888 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35530685 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.410474225 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396574968 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397963587 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.349758046 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.36818854 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.362668101 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.35578766 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.364791096 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354384399 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.412383654 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399514679 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.376773813 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400899515 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.343398422 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.360929108 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.393972676 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371625712 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.362916505 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.348275351 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.352131613 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.395742986 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.358580256 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.358406827 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.349940543 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.363396861 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.357215938 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.369396289 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.388034229 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.359790441 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.35167664 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.355281963 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.364086847 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.355750164 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.404675137 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399041543 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.405745729 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359291036 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399101057 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.535390261 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.366624202 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.357251428 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.391012502 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.37927941 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.366112209 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36834766 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.391859917 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.359691484 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.404563447 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.415361885 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.375703574 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365537486 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.408121944 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.368500636 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.361643381 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40502237 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35525389 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.354185503 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.357825777 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.479058065 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.361024935 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.35815529 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.392651689 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.404504954 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.419066509 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.350153374 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.365119656 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40438213 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.36801297 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.418630316 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.360400691 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.351585254 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357333192 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.480993281 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.361617572 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.36457522 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405294499 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.419434662 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360509469 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.346813731 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.381339959 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399172076 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.481237668 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36991746 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.470150873 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.359356528 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.364575265 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.395908078 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405261422 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.391764524 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.421292104 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405698205 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377003702 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363115666 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.372137115 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.372039008 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.362153829 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.419344972 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.360202344 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.396119427 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403392563 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403284784 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.394798485 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.482277205 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.367626943 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.357784237 seconds)
done (took 227.609889972 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.421071421 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.356394561 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.461666107 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.359282679 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.46088416 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.46714978 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.357767176 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.35739721 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.355874768 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.746218415 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.357777924 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.35826714 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.358454426 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358201657 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.44367791 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.36131246 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.357253303 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.698810111 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.360867255 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.430939265 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.354979841 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35623917 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.359444497 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.743527821 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.359724668 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.356101264 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.431047553 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.360975025 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.714027749 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.357135969 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.357888384 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.707992358 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452519632 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.376791905 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371289015 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.367791454 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.462178083 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.384559753 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.441637664 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.445445809 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464022963 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.400618274 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.358300877 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.359689543 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.362476997 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.362414731 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.359594181 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.388049313 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.359013466 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.358311145 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.713200321 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.371572212 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35998183 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.359268654 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.358893394 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.390536471 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.359835695 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.365223418 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.453873369 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.363425109 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.425302582 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.753035704 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.740454253 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.361856768 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.3601042 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360692647 seconds)
  done (took 106.323164113 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.431266236 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.4390002 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.48449315 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.382145573 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.414887968 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487571865 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.384789261 seconds)
  done (took 11.288374306 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.370294253 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.365442091 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.412485 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413629677 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.365393788 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.576094961 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364527228 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.377087113 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.361531354 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.440327035 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366239195 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.3656615 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.3700937 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.362729037 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412789369 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.37590267 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479462754 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.366246361 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36632095 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.51641269 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362228972 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37123659 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.438598075 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.376445005 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.367727206 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.371341457 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.317299651 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366546471 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363633028 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.366088336 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361463536 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.474894234 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366795855 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.36593596 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363566669 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.524416507 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.367003252 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365026987 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.365895578 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.357253095 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.365425587 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.367062994 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367225508 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.36290558 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.365538418 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.390640506 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.366018318 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.366883167 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.367206424 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367186979 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.441389868 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368243103 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.364248747 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.363893707 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.443593127 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373884081 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.369464688 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365086949 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.368482485 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364030199 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.518801518 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41633585 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.368548501 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416280362 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368499641 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369459097 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.369260126 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.366987688 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45926332 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.368177723 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.416840709 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.365423022 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.590357652 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393017426 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370740511 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.371759207 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.370960884 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36986347 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.367508483 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.374019663 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.367293106 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.369633647 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375418543 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367173408 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366564319 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.552461466 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.524925354 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367842126 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381555637 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.376853771 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.366081689 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.447020165 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.370604335 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367331737 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420211127 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48528205 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.447626443 seconds)
  done (took 141.385148865 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.372709345 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.376471546 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.372501432 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391078843 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370469764 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370194433 seconds)
  done (took 9.523711518 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.372778201 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.373619305 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37018509 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.369511433 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.370781969 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373323943 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.37196033 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372845695 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.376372388 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.372896109 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.372064765 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.372827392 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375409276 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.372851432 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372315779 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372508835 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372924145 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36953003 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.369961436 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371866097 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.372928222 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373169728 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374090057 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.374074575 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.378772479 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.372769391 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381033313 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.372239315 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.372870213 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.380490819 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.396835089 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374426118 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374724035 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.379447558 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379435094 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375921317 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377093729 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.374118765 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371270843 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.375053311 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375868072 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374847934 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.374498512 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.375230531 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375321188 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381685801 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.37971129 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382387882 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375528748 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.375972336 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.376242172 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.374147801 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.375174843 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.376633422 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.375875198 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397399165 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.379765498 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.375263655 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376338957 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.377427181 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.376822521 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377261407 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376783512 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.38093548 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373650747 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37536696 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.377234012 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381826226 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378747495 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375877997 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.376607353 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.374511177 seconds)
  done (took 101.332163208 seconds)
done (took 371.110575768 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.404779204 seconds)
  done (took 3.680954558 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.491055115 seconds)
  done (took 3.76924106 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.840370022 seconds)
  done (took 25.122580176 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.389513704 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.424962398 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.383472604 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.374337632 seconds)
  done (took 10.848811523 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.757787815 seconds)
  done (took 4.034600061 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.382895577 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.36805238 seconds)
  done (took 6.030408424 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.724026768 seconds)
  done (took 4.000817979 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.811003506 seconds)
  done (took 4.091807927 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.393565982 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.3856697 seconds)
  done (took 6.065722924 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.357360256 seconds)
  done (took 3.633896077 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.605331099 seconds)
  done (took 17.883728252 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.369886528 seconds)
  done (took 3.650328918 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.397920937 seconds)
  done (took 3.674961677 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.428395212 seconds)
  done (took 6.706288622 seconds)
done (took 104.469697101 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.368144604 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.373690261 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.375329669 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.374674657 seconds)
  done (took 10.770168161 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.411658634 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.411241804 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.43204477 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423826487 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415246084 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.41243172 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404342272 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.405070034 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.421625234 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.417466878 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.413523398 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.415076584 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.412560213 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.403600271 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.414160145 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414349874 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.423845512 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.413641292 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.419863541 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41562965 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.381396991 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423505344 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416178364 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.37993028 seconds)
  done (took 35.182739208 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.89730805 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.452978345 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.533621614 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.432396988 seconds)
  done (took 7.595450048 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.457694925 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.44951873 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.463831663 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.500877252 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.522466264 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.45922423 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.407025874 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.400859694 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.387618714 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.449087969 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.506865915 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443507493 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.53137459 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.380545084 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.568734679 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.379740081 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.38036809 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.459175906 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.497972042 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.513836971 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38215013 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439145603 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.458939826 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.440632615 seconds)
  done (took 36.162501033 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.379415866 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.39402095 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.379147994 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.378670065 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.390392121 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.378948558 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.380590132 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381237549 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.380838918 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 2.076702999 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.379151493 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393969994 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 2.0930029 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380721966 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.387950347 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.381484205 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 2.06067317 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 2.062054194 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.382173098 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.388265374 seconds)
  done (took 31.709841163 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.374481667 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.373463419 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727189595 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.63325454 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.37559859 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.379833937 seconds)
  done (took 14.146939007 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.464532023 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.636788125 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.383019701 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.800618389 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.879586384 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.383408922 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38322185 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.661995988 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.040877834 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.036312061 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.44870952 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.463287247 seconds)
  done (took 20.867433718 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.394297098 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.378328299 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.394588501 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39712514 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.445696445 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.406360032 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.390265657 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.376548728 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.450340923 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.469029311 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.405231836 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.447121884 seconds)
  done (took 22.239024944 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473076851 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378355468 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393297995 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509838058 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377417308 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227241198 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.515755061 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.145704411 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.40506261 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652786653 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376408688 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476150755 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637161432 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37848581 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37930754 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.364875147 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611195191 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940181128 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381231878 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387428544 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412029075 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378116288 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404072675 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633907463 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384229954 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380023952 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642158793 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378812191 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708475851 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394188889 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39085984 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378913778 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655394032 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115493738 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505805682 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630485114 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431780061 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380607718 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.391875221 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.385817864 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395306503 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381081043 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391299756 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380442406 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380712187 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39474386 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20427449 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.410890192 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.37903045 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379750057 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686611635 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479611807 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.386047846 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382081936 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439116078 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380581254 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.386069795 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.378959534 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965278407 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385996334 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403104665 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.385064766 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417766898 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390721093 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091214502 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.388069832 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386313642 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386595872 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381250498 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38966594 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398728441 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382116659 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406098037 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383435265 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195302808 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385701744 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38502871 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009795603 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384914179 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.387816686 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61816199 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381784133 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382946812 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.38259623 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383351097 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190708525 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392123897 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.369676606 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381650073 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.174389993 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662399436 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408991524 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415233044 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609417957 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.371564329 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384537146 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.38702246 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386629832 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407163709 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.21049594 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411513784 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.391262206 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647044987 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.596798035 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384991631 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.386952938 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946695092 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412019626 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.409611657 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385415255 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.646205507 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.059574588 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4025154 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387473764 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406951702 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386416677 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22966483 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386796752 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.491488534 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38561498 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698869269 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.277096526 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388345182 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455608544 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39254408 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387275181 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389247726 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390718089 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387868994 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.63483079 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429254382 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.402628039 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.388723916 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387722771 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.395925723 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39022113 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.389487465 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61236803 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387603024 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665944933 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387451318 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388867934 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386840175 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.6149872 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.385533442 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.724832259 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65368393 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400394464 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405330103 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402886342 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407165315 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493454568 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409657079 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.4018429 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651288769 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.393321127 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.393823799 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399422837 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393376012 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394263372 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.394879592 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388352947 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059281172 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361731558 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395997209 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283670883 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.405689119 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458499025 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395880839 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644224096 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.40184883 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413917822 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.417965959 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.400695181 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616971179 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400688879 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.389030661 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470190783 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.950325327 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085719322 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405751439 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.389207796 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.388441839 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.387049885 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390356761 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391196734 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391810053 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644134831 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411700775 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40685131 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086479428 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393482157 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402790287 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.397405376 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405108528 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.397854641 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390982516 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388534751 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403574635 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410704593 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.408517074 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536426273 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.405240482 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392255624 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908773263 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397237415 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394062777 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392749778 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426177913 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401704283 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27167709 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678615208 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429727772 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706380202 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407047822 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.409156372 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.391389444 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408134326 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408444054 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.413197592 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402504583 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.404383472 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399227124 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397996752 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973226529 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228915516 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011578305 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412379032 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.410022902 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398485134 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210755407 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419392106 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394256758 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660097822 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234457095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421102924 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960657524 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.419055076 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281175992 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712008079 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632822564 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405320377 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.401172591 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715765903 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611473693 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430199998 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407316922 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397566553 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.383005859 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041531226 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420786545 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478522155 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2132203 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422418245 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401067255 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.407230601 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.408393915 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875546379 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421001206 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396657544 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395496208 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423895134 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274750113 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425526097 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397125245 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108404433 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402228038 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.959614459 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423941942 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654546594 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412969836 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.403394932 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.39994922 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.407957257 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.654493498 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712211299 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40099952 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403953133 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020871512 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.272130074 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40323725 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398301805 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246916891 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405633036 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74380515 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.401856581 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.435126873 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400575668 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398967224 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398512034 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.395388327 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406461945 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367393958 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967904038 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.431034658 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439353501 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4165036 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403718058 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658083156 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.41310191 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070842951 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631748673 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410272359 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422830809 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.402372255 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403631357 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.391124792 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399759178 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399263568 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398391343 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625650489 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400175341 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.386692306 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520901361 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612689593 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399640768 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404011565 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689582157 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.403370831 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.427100782 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230722201 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434956094 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409178208 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405636809 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439157323 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40208526 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475773518 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659137529 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.417309444 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.412558226 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881817838 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427497832 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404807568 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.415277409 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497485055 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401153743 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.431271869 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.179541761 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077948051 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232462675 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.080035103 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720521794 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407145166 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409814881 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402807008 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565911299 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402959763 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678244203 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404048255 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.427750127 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4497869 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415979497 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421280892 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619369428 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677354309 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403937279 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406831337 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407606572 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.402557166 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415234202 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616471553 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977387086 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039133763 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407351366 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41494933 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.240373043 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704937044 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403288149 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404507077 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40476038 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.406257226 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.443344637 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410680814 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42391607 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553175397 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723113403 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160608158 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.442481984 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.432016201 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.179139351 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415838027 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665327703 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403563317 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.684358359 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102964082 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2182051 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674096208 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477497238 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665472831 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.40986586 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569278767 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.419941006 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408556067 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406426154 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407378324 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.404213957 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.415053275 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084689447 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674867289 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.410564259 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.418165071 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441544023 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.417659445 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.633205798 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228829031 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633679912 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420858961 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413711575 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406076313 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086978215 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725876744 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413324337 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.412128714 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691633024 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412876908 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433033284 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.925922638 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.406108095 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037631213 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.384599839 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430536099 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420513895 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224292418 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092293621 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.423646055 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985342813 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4106591 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410719694 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686800446 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.415219895 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419733941 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689105697 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.414208235 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422307447 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672691538 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.091225853 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.321690399 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.417554036 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432407006 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.439222879 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40997622 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433569458 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4097197 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411817604 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.906860753 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43667239 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410157871 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422251044 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.408418936 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431335292 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.412785974 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410407392 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.416927747 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.409344454 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.41594095 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427366885 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.415808932 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036592985 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434191442 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.082323352 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741923001 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669981708 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411006397 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.423443581 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.416869165 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41225396 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412305376 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41255601 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.437061159 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066722933 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.421541147 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.429127827 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416029166 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.629056972 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625527682 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425669825 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676699247 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429198171 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432334455 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.398718808 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412495034 seconds)
  done (took 997.585808008 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.416770334 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.449418431 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.4618405 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.44615502 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.43450068 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.538090994 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.500253321 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447416433 seconds)
  done (took 21.011038044 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.416827513 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.425856346 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.427670527 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424597443 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.417989776 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.960195929 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.4457377 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.422627802 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.424264136 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.427647412 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.420204124 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.400046999 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.422617321 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.42906722 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.415783485 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.422871354 seconds)
  done (took 33.626054666 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.866379483 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.715626107 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.034673307 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.424412439 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.458843209 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.421824331 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.831481433 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.43332043 seconds)
  done (took 28.505295232 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.42510492 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.425398389 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.426165587 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.426121726 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.427621208 seconds)
  done (took 8.447524885 seconds)
done (took 1269.125932608 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.418827279 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.422580591 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.417964458 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.423314173 seconds)
  done (took 7.001578871 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.402780649 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.403996323 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.403497294 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.415859984 seconds)
  done (took 9.944389215 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.242279551 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.152596658 seconds)
  done (took 5.712590466 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.966062008 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.923458326 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.93611795 seconds)
  done (took 7.142895771 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.730846574 seconds)
  done (took 3.048655468 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.351081721 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.323841867 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.116087808 seconds)
  done (took 8.10821266 seconds)
done (took 42.275352088 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.429119197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.666921183 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.570651293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.431493826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.577299939 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.571660445 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.251513563 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42287465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423009173 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.419372377 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.432971868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.579044892 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.167385808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.668678319 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.166612781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.669086712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.579719259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.415641369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.427784295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.414712043 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.274779462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432546205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.419224465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415111344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.578984371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.562197825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.423588148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.669638311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.432269198 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.425136891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.56300787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.416374894 seconds)
  done (took 84.217371432 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.421451646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.429368596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417229424 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.43692799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.451390385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.417446091 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.437110854 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.456604537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.417170504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.455832176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416796896 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.455412697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.430716685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.417797921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.43620691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417614503 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.417953485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430789272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417905461 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.437124752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.419267862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.444720454 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.423491207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420769514 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.418300123 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41857745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.439791856 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.41769917 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.439344545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420384766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420911766 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.445792491 seconds)
  done (took 79.069875844 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.418362954 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418190699 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.434251638 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418106475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.451524337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.43941506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.421371241 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.419638387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.455429131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423290725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.43762149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.438882298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.418604417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418757578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.443470608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.418996555 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.438841863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.425955065 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419278025 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.431704211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.422549008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.424136807 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.427553873 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.437306074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422297534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.43993785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419362369 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.420837959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423070347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42121762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.439486726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420463855 seconds)
  done (took 79.03361531 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.703123351 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.426794662 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428262636 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.41581076 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.429000869 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.427478993 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.420672278 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.704625385 seconds)
  done (took 15.280226742 seconds)
done (took 258.916852968 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.421124498 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.421622824 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.641739412 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.449252196 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.423705604 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.448046638 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.450539658 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.671486036 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.443544311 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.69553285 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.45200535 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445625077 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.428411304 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.446541596 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.72652436 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.585837305 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.422151426 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.42408426 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.795811577 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.44317119 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.734806697 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.423583195 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.721970972 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.423264631 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.430770633 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.422705112 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.437578443 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.402696466 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.469156625 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.802545942 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.43593452 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.411985072 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.54144361 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.54273444 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.657513416 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.600460489 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.434728339 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.520004262 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.665758748 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.427484897 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.425228521 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.254332387 seconds)
  done (took 85.748801803 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.432291145 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.552523178 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.432811975 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.432388137 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.431452688 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.557618961 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.528852552 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.432550286 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.431086587 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.430635577 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.430683819 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.433007808 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.433206617 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.433028268 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.432865569 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.433239938 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.432761089 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.435418448 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.435114927 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.480370943 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.557922127 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.460939965 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.429091762 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.432276046 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.537944915 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.576116181 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.4324824 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.429007255 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.477988549 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.435881913 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.436455523 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.480462613 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.434969452 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.435065984 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.553674376 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.542533934 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.459564558 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.431328201 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.550338803 seconds)
  done (took 58.464596572 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432926353 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.703049364 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.903900883 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.433695459 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.436179565 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441060738 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.526929711 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.437166283 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.437416264 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439758654 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.619393061 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.439892097 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47350392 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.933623586 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.43898976 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.437877208 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.437169416 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.43670272 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.712248371 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445335864 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.551148808 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.437099188 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.530122731 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.483508554 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.461550537 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438594837 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.441877096 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.023195709 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.439608038 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.618300927 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.401659036 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.528771267 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.981454697 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.920553881 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.396344934 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.444663653 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.437686594 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.62455079 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.440502309 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.439006715 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.529717059 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.436903596 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.916817184 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.120032251 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.459270781 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.438343013 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.044149897 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.623858566 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.726948491 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447907609 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.943613042 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.442193902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.440446234 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.439726181 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.728229623 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.440389396 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.43763944 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.084934468 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.466845572 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.530392696 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440060243 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.439446204 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.711583361 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439951228 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.713332991 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.440922833 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.447621778 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.462858443 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.9178039 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.443576345 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.139445911 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.460115578 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.440722898 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.621853482 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.714129565 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.088927449 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.466024993 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.719122349 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.993868061 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.529382304 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.445812845 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.017455033 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.532768877 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.444794836 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.443194749 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.448080631 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.442886294 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493663263 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.529858345 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.088962826 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.136691161 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.108325746 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.55394715 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.450937873 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443084903 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.089524113 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.463999709 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.443378693 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.918871647 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151831419 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.467947937 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.449423725 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.162297902 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.470188377 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.53584576 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.451342329 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.927466223 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.443923152 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.545914315 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443057515 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.449675588 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.468799334 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.534480715 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.447371725 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.443507593 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.128690167 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.654694241 seconds)
  done (took 190.941302329 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.436284004 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.434897149 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.436727585 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.435862073 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.434937873 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.444310661 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.435835977 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.437274677 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.442807599 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.436808913 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.437407058 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.437721835 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.436669157 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.437543597 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449772479 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444820168 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.438894191 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.437150323 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.439641261 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.437664109 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.437938618 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.442791487 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.438807342 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.438460308 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.43838452 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.440152816 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.439451202 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.440652425 seconds)
  done (took 65.628284101 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.447229969 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.103461927 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.448727345 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.599327132 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.470759657 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.443631058 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.597796305 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.511493482 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.447238784 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442697686 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.442776334 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.800158855 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.446763446 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.04832086 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.677495355 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.620381956 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.047909583 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.469277638 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.444656916 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.445293349 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.601452033 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.462364881 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.820463011 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.151700241 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452333503 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.148794627 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.443422897 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.448463866 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.446184881 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.150809635 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.470323101 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.820614967 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.541129843 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.515933574 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.148552555 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.066851713 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.073005001 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.61976431 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.445728386 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.445300664 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.445841695 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.440111889 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.152886341 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.454339128 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.449290518 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.149442933 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.472244271 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.449451597 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.455125851 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.446019998 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.517493024 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.518668535 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.829551757 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.234414923 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.543862687 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.463827914 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.602624308 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.832015395 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.452871662 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053094427 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.460524517 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.159367628 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.475943957 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.440756682 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.449667194 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.45544545 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.622493801 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.6012723 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.054343082 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.471209656 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.053370513 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.644671311 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.448330733 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.447913672 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.452819822 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.159821651 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.058956892 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.645297343 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.605802916 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.679902716 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.442464133 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.450645152 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.442957439 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.540454525 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.448982507 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.16258621 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.081259191 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.47319071 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.451751635 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.452061504 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.452191984 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.662386576 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.18585025 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.545981266 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.052751274 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.85320472 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.835500739 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45689461 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.520338667 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.47068077 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.901355345 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.45742604 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.519122612 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.915808329 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.835827041 seconds)
  done (took 175.534026571 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.722184747 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.484059307 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.552749413 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.620456562 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.137789087 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.095738481 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.451648658 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585203267 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.573043659 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.734059561 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.467544413 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.545344237 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.696584968 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.536727904 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.217758167 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.532903434 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.55585183 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.609388935 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.6063516 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.446887859 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.171514195 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.779425309 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.657969015 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.475699738 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.595933919 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.300945634 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.079073358 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.036403978 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.646832473 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.450642463 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.062339716 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.451805919 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.453731364 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.199706221 seconds)
  done (took 67.882736955 seconds)
done (took 645.521490752 seconds)
SAVING RESULT...
DONE!
