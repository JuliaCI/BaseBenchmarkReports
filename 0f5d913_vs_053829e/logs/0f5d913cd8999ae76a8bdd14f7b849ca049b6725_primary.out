cset: moving following pidspec: 18667
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.920586481 seconds)
loading group "string"... done (took 0.532895179 seconds)
loading group "linalg"... done (took 8.783886549 seconds)
loading group "parallel"... done (took 0.17173738 seconds)
loading group "find"... done (took 1.416720724 seconds)
loading group "tuple"... done (took 2.082147312 seconds)
loading group "dates"... done (took 1.365551582 seconds)
loading group "micro"... done (took 0.217745986 seconds)
loading group "io"... done (took 0.629245584 seconds)
loading group "scalar"... done (took 41.960238665 seconds)
loading group "sparse"... done (took 12.989295821 seconds)
loading group "broadcast"... done (took 1.053160463 seconds)
loading group "union"... done (took 14.283630749 seconds)
loading group "simd"... done (took 4.925264321 seconds)
loading group "random"... done (took 9.941981639 seconds)
loading group "problem"... done (took 2.171825259 seconds)
loading group "array"... done (took 25.205219996 seconds)
loading group "misc"... done (took 1.105129262 seconds)
loading group "sort"... done (took 3.593570141 seconds)
loading group "collection"... done (took 21.28447171 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.629046996 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.117841495 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.164509107 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.193370264 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19032146 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15521364 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162178171 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.555969691 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.981194684 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206461035 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141358252 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.543685659 seconds)
done (took 5.772465437 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.229360383 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.428023757 seconds)
    (2/2) benchmarking "String"...
    done (took 0.111179737 seconds)
  done (took 1.20352931 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.091663106 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171085059 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093063536 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109362805 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108713866 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107326837 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092781668 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108733492 seconds)
  done (took 1.45954782 seconds)
done (took 3.656796695 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.476829837 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.846385928 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.523160606 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.127242379 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160654374 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.148588207 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.315994745 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.166152736 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.11971487 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.102109745 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.16763838 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.400925304 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.488004127 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.994725115 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092686639 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126077743 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079140761 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.740515863 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083890891 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132758261 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.520194352 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.107529128 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119417592 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.143339672 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187971195 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130435471 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178514691 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107871609 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672473152 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100633217 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185984213 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098295834 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163321407 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.244466352 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.094444625 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092747884 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681770365 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.193319891 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.109220964 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097738002 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6775217 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080439614 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187221037 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107057457 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108439375 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189695856 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112035196 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080228185 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102379597 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099518268 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157355683 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.459585021 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.1054773 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.146252489 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108406528 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.694714348 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097041084 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155521929 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140012452 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.099310935 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095714527 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.106912694 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155863932 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.1107289 seconds)
  done (took 19.605097703 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115714249 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139208157 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094426498 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140197236 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139113466 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096619442 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082965068 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09450231 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125158278 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184109867 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.1201348 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142609411 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091386794 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079437179 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116887165 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246813469 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105324143 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120974278 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080673516 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105567971 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138819281 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094549044 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108586628 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109217782 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168584471 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204893176 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110817685 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124730476 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093064665 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097541451 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141601256 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15996678 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074701366 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094283497 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181537338 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119223575 seconds)
  done (took 5.126845132 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195084361 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.114816004 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187857452 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17700297 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144662854 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16497232 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116645704 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268093053 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.17056625 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183695116 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112855152 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115204807 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112296096 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077541911 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098584645 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077684806 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.685890822 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111656802 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163634459 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153042719 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122394181 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102199706 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080933362 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100018055 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079360437 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100907471 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114052676 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340911178 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.171635783 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102287079 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.22916363 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096571995 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107853545 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13115869 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193954753 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130288467 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138672863 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084204826 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100772707 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.211925809 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108874303 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075019183 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125287735 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131362197 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130373493 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082093327 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10726929 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.236963334 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080868116 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116942104 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.058074327 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199418725 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094097013 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096487961 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.342923334 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116165826 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085089906 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098142164 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280415867 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133293743 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082460327 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077243062 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101539955 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093519222 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.398436113 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088629703 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096950942 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078230056 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152753744 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.981654269 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085726281 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104567087 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09589932 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08406381 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10031095 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101604973 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095298569 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078523278 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095028174 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078685719 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098782136 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095853978 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099975979 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093796354 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14528488 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117276784 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099731208 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123353659 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098976396 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078190289 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12656294 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079839048 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098185147 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.142488135 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083665197 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114647652 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099576707 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141812942 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079607035 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.180518107 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094404256 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120978715 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.083020801 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126661979 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116814412 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094296197 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083420282 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093665372 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078969556 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156241609 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079327378 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077741827 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098635879 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107754225 seconds)
  done (took 23.375971924 seconds)
done (took 48.769437401 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.428871339 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092948525 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110855002 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110656321 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.109206217 seconds)
  done (took 1.593645662 seconds)
done (took 2.308637059 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.322442148 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190291996 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101488249 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190980816 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086065256 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197073802 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160094181 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.116512517 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.190468073 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09852382 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.17072486 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097810225 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085954293 seconds)
  done (took 2.752361035 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091680105 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116241765 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080388801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106525403 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074302475 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106249331 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088327381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.131773992 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088958403 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100479384 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074311299 seconds)
  done (took 1.775819543 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090532257 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115291432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079796443 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106509028 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074690208 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088288967 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106390893 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117128798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089803538 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101824225 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074921756 seconds)
  done (took 1.759430491 seconds)
done (took 6.995279821 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.02006476 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.104682729 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.100086513 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.181501281 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.327761303 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209503218 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.508847157 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130772376 seconds)
  done (took 11.477026639 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.110660548 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097122285 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095407896 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099283546 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078962649 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097766179 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078815789 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094871481 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080333625 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095793107 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077301609 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096410896 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.080435065 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093595203 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078675398 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097189606 seconds)
  done (took 2.228488994 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114900205 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114387767 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101964362 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105200823 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.083092424 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099862564 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.08539004 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099618215 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081680915 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098560745 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10371078 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0884018 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102202591 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081105913 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100866371 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105865568 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083279084 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100785324 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086137572 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102132246 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088350258 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099250913 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.10239091 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.088517378 seconds)
  done (took 3.13829687 seconds)
done (took 17.559849047 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16686696 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082930159 seconds)
  done (took 0.967792823 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0999574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116847801 seconds)
  done (took 0.942747719 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104838771 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095462154 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133215905 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112330253 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081137118 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094948407 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.1122215 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097219724 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08028172 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096186988 seconds)
  done (took 1.734535592 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084202212 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100185204 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088531347 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117709178 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107784849 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082245975 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.100676906 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08374452 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101510043 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079418616 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103326569 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114740127 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086669618 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117069479 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084737823 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103143009 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105940527 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083996479 seconds)
  done (took 2.473481384 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080229619 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081208869 seconds)
  done (took 0.890714825 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082171629 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094570534 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082429368 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098034542 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078900569 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095047765 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078671551 seconds)
  done (took 1.338948866 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.637508063 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.214745489 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.282113196 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.095957905 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119362142 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.293304849 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.117614508 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.11130066 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093213544 seconds)
  done (took 2.735507143 seconds)
done (took 11.809160648 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090495572 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.188716497 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.525518273 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.118929252 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078103356 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.146155683 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.25386443 seconds)
done (took 2.137879583 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351050445 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123223526 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090017928 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079456857 seconds)
  done (took 1.370842049 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079472699 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101464823 seconds)
  done (took 0.91386378 seconds)
done (took 3.024005721 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078822836 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077234229 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.092288534 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.126632376 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078504345 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095789543 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.075524213 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074500855 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096027862 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077589868 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092845936 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07780977 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.093762534 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.078205464 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077346225 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092419271 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075213992 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094941352 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075432518 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091645294 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.195424379 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094325337 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075844075 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074662256 seconds)
  done (took 2.930354522 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103359592 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096145365 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083443608 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102106258 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080983294 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101673626 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100648921 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078734724 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101265867 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.080507111 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098026632 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081466689 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097504873 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081194312 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097100295 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099581788 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08399612 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094962549 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08050543 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098338592 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083684278 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095542377 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.0813879 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100816571 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081807275 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099046612 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096654588 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079604766 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100370403 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082817028 seconds)
  done (took 3.478921956 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086427729 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074351352 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093853555 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086425415 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093517665 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078783916 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.09267972 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076812337 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093857524 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075477229 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.094698964 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075203868 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.074727315 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094823942 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076277767 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100486184 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110103196 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079201061 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075982095 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09370176 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081736374 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092775506 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078161669 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093493161 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076078078 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092013393 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076395391 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076235017 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093698723 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075423768 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098260012 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082560855 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092719381 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088990513 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099759558 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.075667926 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102176353 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07552664 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093341671 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.075690661 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.092602396 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076480902 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075306177 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103995819 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07855238 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09393858 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076416853 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093730393 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076265912 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096251209 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07670461 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092652596 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078794542 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093758851 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082288246 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.075782415 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094275831 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075744654 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094586239 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07597087 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092625495 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076199363 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09977523 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077437946 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.117706063 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088279799 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092718664 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.077608229 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096792129 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084068627 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094364793 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094637951 seconds)
  done (took 6.983578065 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081694622 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10372591 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078146061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095070766 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075161401 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075877565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101298586 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09368403 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078267339 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112118391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076828213 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094901403 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078440581 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097644873 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076804709 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077997584 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104522225 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091299491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.076556556 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097846475 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077861851 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099903778 seconds)
  done (took 2.693405943 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.221323642 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10402942 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141388125 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113310259 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096601768 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112148389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101218844 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085742983 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100719384 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086812311 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104351022 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083524847 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114263899 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103256904 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086641412 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105846387 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101031364 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08745612 seconds)
  done (took 2.694725583 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092431632 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097104614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104033138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097140041 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079411798 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099351411 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085406658 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112147903 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099280681 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080289312 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.106992142 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081256127 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099670334 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079285932 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099795793 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079256877 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099715642 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079237342 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107038249 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102988531 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086074385 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108211517 seconds)
  done (took 2.82540479 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096312945 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098689371 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109799393 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101063276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07520424 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095636768 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086974415 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098336343 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105615528 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081922258 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097044634 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078385986 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.1036107 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081099357 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.1035845 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08025305 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099416048 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080224473 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099541663 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075769704 seconds)
  done (took 2.598358007 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121528763 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113449225 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094983338 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124562838 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114666517 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096079677 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125035185 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113874315 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096068948 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127045783 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095050303 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113996295 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124127554 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103128642 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114194083 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124905702 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106854649 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126895282 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113543281 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096330036 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126976188 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114051755 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10675181 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113997403 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095805211 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114778586 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113047726 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103218056 seconds)
  done (took 3.890327138 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079480405 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079546429 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094556838 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076767657 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09486807 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076960432 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094184709 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.07684418 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078194837 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094067343 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078723467 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097645717 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079197677 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.0961359 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079656196 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096291475 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079549297 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077290779 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094513764 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076602087 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097293676 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07995765 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096588808 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077269398 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076415726 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097639156 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07688832 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094975276 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078569632 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094061904 seconds)
  done (took 3.32749466 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087609161 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102854239 seconds)
  done (took 0.946782777 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078961995 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114625069 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077522357 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100825408 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087201461 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098552821 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089617241 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103546576 seconds)
  done (took 1.506760607 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.104552604 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.117635837 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086208965 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109142876 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098231918 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.117507598 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16437486 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085539585 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105424488 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081793545 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117631877 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079691684 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109769327 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10437225 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090421466 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112777525 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079078676 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107932206 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087671585 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100743859 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086904098 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115209161 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091477562 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106533559 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082876427 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.1103386 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111147716 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.092210123 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103553121 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092694771 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.105911979 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.074088924 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.103645009 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086810857 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09645719 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098864281 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116410584 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085158967 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108758735 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085772469 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108599708 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076830116 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109524189 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105409547 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093353438 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103135474 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08680546 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093214485 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081263916 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101681811 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076978894 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101955699 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076442834 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108166035 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090108614 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116775524 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083622547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103736885 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085018653 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10260604 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088050754 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103180396 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090953703 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102358758 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108262112 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090679232 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106428864 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076458364 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092249611 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079821725 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107182479 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105689898 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11032575 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08600724 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104772577 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078299773 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104906224 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087234131 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106788779 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10952663 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086086833 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106386171 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091651109 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102992802 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085467175 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10656975 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084228981 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102373502 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082160865 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118599369 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083939404 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096019028 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082147526 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109914792 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085269015 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102862686 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081683144 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109238625 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074856073 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105475247 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086791487 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105636643 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093492743 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104851367 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087311984 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108363529 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110609568 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08685075 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102633449 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078099442 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086363382 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102727269 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090160569 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093900425 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08625305 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.103695867 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086323493 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111081487 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101049362 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086338019 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109699281 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093165914 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102029343 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078153919 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104384483 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086062766 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107914005 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093217975 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.101856918 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076794473 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095155316 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09104715 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103484621 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088471945 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104494044 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086559491 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093162923 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079904974 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105247971 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092443712 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10394456 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087955914 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110170127 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106136687 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084215229 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109532081 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085683994 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099253416 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091391104 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103470677 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077043521 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108635059 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086079415 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101989842 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086782079 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108251775 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086113154 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104791878 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083799463 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104359304 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086949941 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099382084 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087161721 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102651664 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093994588 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104141115 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076720059 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096354141 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088876645 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100033506 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08662825 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099549269 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086895911 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105619614 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081320635 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103459112 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085785942 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117219223 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094129527 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106457334 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089582133 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112228448 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086025844 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105795189 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085401831 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106412672 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087077092 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110285796 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106258728 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087237488 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103469743 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078183181 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106047203 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092694635 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099114281 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081236833 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080580611 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105225114 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110847986 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086871195 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104554434 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084473222 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106344169 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091351419 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10392355 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086372458 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100010082 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086561929 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108955203 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088196921 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106198448 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094335098 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106156347 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078056747 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109475139 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083848591 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108890077 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077802262 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101268035 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083307029 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107523044 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084887931 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103157045 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07704755 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109583162 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092678631 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105258719 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082412803 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105377305 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096120371 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103038466 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08898921 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105334481 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089377405 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119483355 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099928875 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08718201 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112368769 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087191369 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095167783 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089805209 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102753488 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08187099 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102683638 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084644827 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086562221 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108238738 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106816639 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076035662 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085854245 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103339783 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083105649 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09712108 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091557267 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105978603 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107032722 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09614312 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106683296 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087700942 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105977852 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087758624 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106656253 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088899637 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106105019 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088762342 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102998624 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083028963 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105289113 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083051194 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097902147 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.094782636 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105144723 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088113098 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107373603 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086011113 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110746408 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087651505 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105816646 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123653259 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083623174 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102021791 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088450214 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107393656 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08587641 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.1048968 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077707368 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111080324 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087056801 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111615477 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085342488 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098319625 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088136361 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10459064 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088445862 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106486586 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088673998 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10401228 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086369341 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105443926 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096248337 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102214623 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093610559 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108130261 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107775068 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08847432 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106051889 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085591748 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100372427 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087209373 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105989757 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088441975 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104355177 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089367555 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105792275 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086350704 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103639957 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088637278 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106267364 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089334409 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0948971 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083649855 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101660375 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087810029 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109509416 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088112729 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104139481 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086165833 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107721889 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086855774 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0980479 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092586217 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108263991 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089051451 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114375227 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082896537 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106380784 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097782392 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096485341 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085125545 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099689568 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083907717 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111544622 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088119414 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112253669 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088009923 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101533462 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080258402 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107605974 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085869251 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095986451 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080988108 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109115827 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086085516 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104508679 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088758924 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107878661 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088457047 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110495164 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086341682 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106061442 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08770095 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098088495 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083512366 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101988932 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08824482 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107098355 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084255936 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098761142 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087136242 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106593025 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08869042 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105486075 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086282581 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112329099 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088148199 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10661955 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093734182 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096427347 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088926563 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105826804 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087434792 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101954315 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089203206 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108002447 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089577747 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111941003 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087369694 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108918328 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087482435 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100054889 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087281442 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105541852 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089092166 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102857433 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089651709 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113983965 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081447408 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106791072 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088780241 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10432879 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0885813 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107495098 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088427298 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111338447 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087745707 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107231032 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091233667 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107056294 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088566254 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108529282 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085794251 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112342217 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083138338 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114367361 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107297283 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089009748 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10587197 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083987698 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105576331 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087575679 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104975488 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093814585 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107982232 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084142737 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103253065 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081841571 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106112943 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093555947 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113142676 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089115801 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108316585 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080079225 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099633332 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090656717 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102316189 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087675626 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109451505 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092882801 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107698385 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085335009 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105177528 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093418885 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111219566 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089965291 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103461196 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089084995 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107938848 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087371101 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104808068 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086723421 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109142915 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089223785 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106432129 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08327522 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117710271 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111980752 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089583182 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10594997 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090555196 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105634499 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079332502 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107959356 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088444726 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109852934 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08871472 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106331355 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097552325 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102571215 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086379864 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111437977 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086554991 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112751438 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078497209 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108478521 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088195193 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1091124 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078088901 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102916729 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083789568 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107637895 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084153725 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098721129 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116400681 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093313109 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107106643 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086579966 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104717987 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080573453 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078191283 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103827473 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088504973 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107463459 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114058178 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084651889 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08436821 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099431234 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087107039 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108536467 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108389033 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08179404 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078529465 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104626475 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088397546 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114885352 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085308626 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10773773 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088819223 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108188704 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081405596 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113607784 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079834068 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.1094459 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118410066 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089363491 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109745237 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09151236 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114453988 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089595664 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100208992 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089880433 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107864201 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08965456 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109557521 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.089502716 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123059345 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107587359 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084859499 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105629428 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088513644 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102683977 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096749912 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10893172 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.090456267 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109975584 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087689758 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109711359 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094633474 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110565927 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088874758 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.109114686 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085935193 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107673284 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086310053 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105737044 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091005082 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109197144 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088210245 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110330141 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084008945 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118890317 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114424457 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091278454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080128082 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104229095 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084035499 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100071424 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090357624 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102315534 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086549224 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105265764 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087118417 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109793191 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090612434 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110598616 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089630193 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10805843 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078729584 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111855 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089164802 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110770119 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08205603 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108795054 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090703005 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112492704 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092419465 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106498686 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08845959 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109001147 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091365069 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099931716 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091195449 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10759325 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087046992 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104554003 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088338677 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110055 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090089525 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110102796 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090597308 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109295829 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092332827 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11185252 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081489527 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102314483 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091843214 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102738234 seconds)
  done (took 58.597711045 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150656815 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087203601 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098460061 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080024593 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126013931 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081304578 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099196895 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081534988 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099759641 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09330825 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098939487 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079963906 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121347128 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127419533 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124785952 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113247605 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080350156 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099099671 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080074983 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080671256 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120867363 seconds)
  done (took 2.935945252 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104419314 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118674257 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115812926 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10154881 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111247044 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116982819 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096762576 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118785022 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120958027 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111114649 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102775879 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118861975 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110866733 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092649801 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111740554 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114556374 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101624839 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110808733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117893595 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096121322 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114882591 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116128518 seconds)
  done (took 3.238573613 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093260961 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.087366435 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.11384202 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.081683225 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109056897 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082728741 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.113638496 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.085282294 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11215213 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089219256 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107105646 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087968696 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113021382 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083079695 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107040602 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084832903 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113188253 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088102971 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110159272 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.083617864 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127502051 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.081625792 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104199159 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.085079224 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.117718811 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088285783 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108604498 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0875433 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105562325 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08831343 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.104393359 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090547531 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112063968 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.085725058 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.10632691 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088257632 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108318626 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.082690572 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104705586 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091867582 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102978657 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.091079157 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116414221 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085194549 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104864814 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090641891 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108339153 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.083151798 seconds)
  done (took 5.512613584 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128838403 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158294205 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.0945562 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150734177 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123548125 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121912226 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090410597 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151651121 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106493652 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088961087 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.131955253 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125792747 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089905823 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.120216162 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089674595 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.113096643 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110562739 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088569499 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.117202435 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091100894 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.117859993 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092699 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123488152 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127327604 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11603577 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089399467 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11274409 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.095696821 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.124450417 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115241238 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094982551 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120355125 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123680281 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093919813 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108344367 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092381309 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.132684964 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11194557 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092098135 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.113119736 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091093459 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118348276 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112314393 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105893536 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.114160642 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110330707 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093128567 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105024701 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101427167 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.118270819 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120136066 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10267197 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.119964517 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109080177 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098379613 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123266158 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109174607 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0929768 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113671829 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.103273458 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.106889552 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094699523 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129616621 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113544791 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118794354 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10860561 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112292004 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.096506425 seconds)
  done (took 8.497104696 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097049296 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133912663 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126358125 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104888552 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11621367 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113951981 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095559728 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113633666 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095834408 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121781939 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114166861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1644876 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089085118 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120056925 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.094103553 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115885515 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114105256 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095164445 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114974322 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094621662 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11473858 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126249267 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094911151 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126344293 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127319541 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087176773 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116192573 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113979863 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105006707 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116424795 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12674503 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093747302 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115674185 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124875409 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128653237 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094933037 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105449721 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094974027 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116154111 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114394932 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089200495 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125213377 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095102154 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108545787 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114346956 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096283047 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126964342 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128397814 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100978229 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123036392 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115437343 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12575996 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095890533 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115281825 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105446857 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13367298 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127282719 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126479802 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11439632 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106244091 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126351098 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133998961 seconds)
  done (took 7.841513275 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086510815 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085057675 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105380464 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084364888 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106534079 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084357815 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106696051 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086667193 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085281579 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.107501993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085566557 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10382586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084282772 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106197634 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084147858 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103336143 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084919039 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08296712 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106346358 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083677636 seconds)
  done (took 2.69204457 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095597558 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12672653 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087492977 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114878626 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089073643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116468824 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10782473 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090278697 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107486688 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090930961 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118921588 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098619648 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107710728 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114138496 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099895532 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114083462 seconds)
  done (took 2.512619268 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.108210563 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120224864 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131829492 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092632281 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105450133 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095360632 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108343802 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.082765906 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103531351 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096005679 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.11383757 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098102752 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107565926 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085430418 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.108142963 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093757581 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103215721 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.093835915 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107303667 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112103328 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113685509 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089206779 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109533411 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108685291 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090417616 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.111681121 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.094576217 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104706257 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085578808 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106985222 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0900008 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115560855 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08383784 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.112444669 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084770688 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104946953 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086674563 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108141368 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092123856 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108232781 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084075001 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110199019 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086936361 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108830628 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082938062 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109030381 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081999291 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114462523 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.087858956 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.111083184 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085698356 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.116507095 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113906647 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100154055 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.117726496 seconds)
  done (took 6.412236314 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102264 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111345782 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092218101 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104951417 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090774946 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.116367553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09100768 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109781709 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089430991 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104778254 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089712931 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112589731 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089063205 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111338451 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088591225 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112438271 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082024695 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108972296 seconds)
  done (took 2.642856731 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09294295 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107000977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095448247 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107008099 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087929641 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088348764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104892921 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084201524 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106010458 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087244844 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107753679 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089200972 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106183815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088861685 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107379675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087576831 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110396856 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085755479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107123288 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084000209 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109675673 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085687955 seconds)
  done (took 2.967546892 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10549631 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.139598551 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.100863286 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.149879172 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.112139208 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09114902 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12351966 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.090994783 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131837115 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110302798 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.091874031 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.111627242 seconds)
  done (took 2.200163186 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114116549 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146634218 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084824433 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111056624 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12102446 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093636111 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11287645 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093059579 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126043124 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125543496 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091744759 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126737613 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12535356 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123861952 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099894348 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122066536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112866733 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093433037 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109368265 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135204432 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092638167 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126595605 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113129841 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093881475 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113595647 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102525109 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126020263 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126573993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113274822 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105077648 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121867861 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113234831 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104901982 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126528631 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110382415 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104175526 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113906684 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135025891 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121445737 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102900151 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110714743 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120375573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10498013 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121258931 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125141507 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093305255 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121593107 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113052445 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093379179 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141746283 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121042427 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123735434 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10124127 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125771823 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125251898 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141795444 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127479116 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103482762 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122225325 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126888431 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124485399 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101153332 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125209625 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126075644 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121813021 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103831875 seconds)
  done (took 8.445750508 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12883338 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107253082 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092049138 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128077975 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12570756 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113311741 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093776799 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113489409 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092765723 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110521319 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161665495 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11392029 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105347932 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125533255 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112660538 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093846068 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113054231 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124400596 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089815575 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142407841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114092726 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103394488 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124900536 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124034013 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126701371 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120936301 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093684431 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113716451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093499929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113996395 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120575305 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094193713 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124750671 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08598333 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125381115 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113784614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092764717 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122193814 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113412514 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100632081 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125021778 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134600669 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113893994 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093767421 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127292323 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11261128 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093884645 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109603005 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093719482 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110677909 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12601179 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105997222 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128152994 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125003718 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113652497 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09463315 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113837341 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092395526 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11521118 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121280515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104045983 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114250305 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141824519 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114080551 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093896846 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125329358 seconds)
  done (took 8.308233744 seconds)
done (took 157.411852058 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.106068084 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145013154 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102504854 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173292684 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087880945 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.144853703 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121766675 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124579048 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08828998 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.110479844 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088315576 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112630212 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154169393 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109920234 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089179655 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111822762 seconds)
  done (took 2.717033173 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.183646016 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.292368745 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10715613 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116514534 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094650013 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112819163 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093175327 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.117637339 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089170981 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124236727 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111396723 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091701292 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122318109 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091503617 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111575571 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091009573 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12307377 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089957761 seconds)
  done (took 3.016985407 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120187301 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15434726 seconds)
  done (took 1.132603833 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125559063 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189218111 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31303607 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166016523 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118582845 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132121455 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166596533 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129149264 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19855428 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131702036 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108967561 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117608255 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139864306 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.101120305 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.120316193 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094917139 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143175839 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.118365388 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096993486 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117586237 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118511904 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.118998442 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120482012 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098717665 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186754134 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132224781 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.11737503 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.096860237 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11796563 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097362567 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122199942 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130458515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.130515977 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.172864891 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120980486 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169636569 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.123572426 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095748531 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117800723 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095198942 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119561198 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098702029 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132165412 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114895214 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.097360289 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124718291 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.098732436 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117893998 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123872509 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.104486317 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.123653125 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121620909 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167020201 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125136411 seconds)
  done (took 7.836063177 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.83346012 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159267646 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11713784 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.966344961 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124340916 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132618322 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.83797184 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140552737 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243900015 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.859611254 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133062249 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106655363 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235592054 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257994243 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149495081 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34032514 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.732133955 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106432055 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.146399416 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157847512 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122979466 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14301424 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113851196 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432866518 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11738572 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094371148 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120634784 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127865525 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167120692 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093035955 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119228373 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186991432 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.29445741 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185278135 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116689385 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092262783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114514149 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175237312 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272147737 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221448213 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179281612 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091379754 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113968549 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.106367897 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135542858 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090056537 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.191671963 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179743802 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178974763 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118123675 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128153721 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102244678 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126759693 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167816636 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11333703 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.337240588 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34146998 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092860342 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123004829 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111901158 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26999552 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114310035 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206632941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142108571 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217052683 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091484869 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786386852 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171674062 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119234452 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123791733 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.101145685 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120526803 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.365562176 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173560392 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38921497 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10850977 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118368348 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093113702 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.2467319 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093658326 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114314609 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170215796 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115473881 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101483023 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130982345 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127156871 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177725173 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255834979 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128870712 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121201037 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09899817 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127022792 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093651095 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23806387 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198406397 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.186521257 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.218062131 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127751792 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.171335114 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170876138 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126530305 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177019646 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121565041 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133154702 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105490371 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218872757 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147526044 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.114986191 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09829268 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122239754 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150874378 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096421278 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121875624 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.175245817 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479910738 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173286831 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088977485 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119596497 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101411374 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190268495 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100343921 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265828514 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123468221 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.175322074 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122148402 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090384054 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122473096 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.171623475 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128810957 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103421367 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129408243 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122214809 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256322057 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224801881 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107857101 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241094194 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184772526 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124273087 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18029237 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122727928 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175811013 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124543583 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104660396 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116992416 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77907783 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105425552 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122187153 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097613925 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197756708 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114422206 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09374894 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.114558302 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090352928 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793982795 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095053186 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112738687 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094296185 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123752628 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122497022 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100207069 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11949883 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169676335 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235522012 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127650302 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099607366 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115136262 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.166970228 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115225413 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093393019 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11430925 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094312908 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123362531 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098371459 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116115431 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.181760243 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166001242 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223842287 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.553362766 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093442411 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115817403 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232488189 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093209826 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308452015 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099900028 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229544977 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196020412 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090900765 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340879939 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175613006 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197779502 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.118463528 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.179570981 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11199063 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.100845722 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166840786 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114952354 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122984799 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166442691 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131425755 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108327514 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.154175496 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114985913 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236389895 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090314136 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196802295 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095776531 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127283198 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312525324 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093077877 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135713251 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.168022214 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119899705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.094318195 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.728587047 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094745234 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126003652 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103193292 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227314407 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.195743336 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101349656 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124241594 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127914902 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.170466798 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.215895139 seconds)
  done (took 45.521841512 seconds)
done (took 61.074744623 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306910214 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27111932 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.302489541 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22380108 seconds)
  done (took 2.06682015 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.184354994 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159435297 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.151827854 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09171807 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16048217 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091747177 seconds)
  done (took 1.723862854 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.488889412 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.403068199 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.34783669 seconds)
  done (took 2.131243979 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.266380557 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.285976599 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366303545 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407702249 seconds)
  done (took 2.320184867 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209715423 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13087665 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.104483568 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.145182866 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.177760336 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.182300001 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148706248 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157895846 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134823456 seconds)
  done (took 2.325761727 seconds)
done (took 11.458626617 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.228663671 seconds)
    (2/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.267379263 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.166596187 seconds)
    (4/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.155790831 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113897084 seconds)
    (6/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.273593364 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.15523968 seconds)
    (8/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122929458 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.097756608 seconds)
    (10/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.166486395 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.236033684 seconds)
    (12/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.183992146 seconds)
    (13/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096861464 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12900636 seconds)
    (15/286) benchmarking ("sort", Int8, true)...
    done (took 0.225164375 seconds)
    (16/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.135868568 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098502692 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.165777916 seconds)
    (19/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.134249726 seconds)
    (20/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110467711 seconds)
    (21/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.127632205 seconds)
    (22/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.103545618 seconds)
    (23/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.247553122 seconds)
    (24/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097943288 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.139577854 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.213849111 seconds)
    (27/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.106649632 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.227885481 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.228634827 seconds)
    (30/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.208386051 seconds)
    (31/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.08548397 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128383737 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120853091 seconds)
    (34/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.232988807 seconds)
    (35/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.110804027 seconds)
    (36/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.127360071 seconds)
    (37/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.098214924 seconds)
    (38/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.131890711 seconds)
    (39/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.272347402 seconds)
    (40/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.23445964 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.103177027 seconds)
    (42/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.252938913 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.129043264 seconds)
    (44/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093999881 seconds)
    (45/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120828804 seconds)
    (46/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.089614517 seconds)
    (47/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.211663858 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.12365551 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.146090091 seconds)
    (50/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.235861159 seconds)
    (51/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.120835164 seconds)
    (52/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.10200915 seconds)
    (53/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085618228 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.145067263 seconds)
    (55/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.263672944 seconds)
    (56/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097793815 seconds)
    (57/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.193200523 seconds)
    (58/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.188319936 seconds)
    (59/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.208120517 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.171673282 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.105878571 seconds)
    (62/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.101478673 seconds)
    (63/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.127820246 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095223702 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.150999981 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107109501 seconds)
    (67/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.201832731 seconds)
    (68/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.126830905 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104642862 seconds)
    (70/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115333837 seconds)
    (71/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.110303552 seconds)
    (72/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200343116 seconds)
    (73/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.105632864 seconds)
    (74/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087732571 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121958843 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.107821242 seconds)
    (77/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121084655 seconds)
    (78/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.107666362 seconds)
    (79/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.121992827 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.091637097 seconds)
    (81/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213746728 seconds)
    (82/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.129410234 seconds)
    (83/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096719561 seconds)
    (84/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.172775187 seconds)
    (85/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133126486 seconds)
    (86/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080777995 seconds)
    (87/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118869261 seconds)
    (88/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097694327 seconds)
    (89/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.173318007 seconds)
    (90/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.200034455 seconds)
    (91/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083135904 seconds)
    (92/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.15662428 seconds)
    (93/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.169634064 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.1730016 seconds)
    (95/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.116926415 seconds)
    (96/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.23284797 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085876035 seconds)
    (98/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.103525277 seconds)
    (99/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.235261388 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.115936574 seconds)
    (101/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.104015748 seconds)
    (102/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.134517816 seconds)
    (103/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.121046245 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.145595859 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.130795049 seconds)
    (106/286) benchmarking ("sort", Float32, true)...
    done (took 0.236499354 seconds)
    (107/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.249042004 seconds)
    (108/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.131699303 seconds)
    (109/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.131463248 seconds)
    (110/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095658445 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.1233561 seconds)
    (112/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.087198932 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.122102279 seconds)
    (114/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.105507957 seconds)
    (115/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.206369818 seconds)
    (116/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122436968 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.206335935 seconds)
    (118/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.18925331 seconds)
    (119/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135143444 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 0.19400762 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.128496439 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124921948 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129208022 seconds)
    (124/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09613072 seconds)
    (125/286) benchmarking ("sort", Float64, true)...
    done (took 0.260367789 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108475004 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.12251715 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.106174705 seconds)
    (129/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.135222785 seconds)
    (130/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094492699 seconds)
    (131/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136162959 seconds)
    (132/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191207696 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.100722305 seconds)
    (134/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115325093 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.104656971 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.122480763 seconds)
    (137/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096252314 seconds)
    (138/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.192418 seconds)
    (139/286) benchmarking ("sort", BigInt, false)...
    done (took 0.23256073 seconds)
    (140/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.104447978 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109424668 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.117563552 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097609452 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.142093208 seconds)
    (145/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122025614 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.098653785 seconds)
    (147/286) benchmarking ("sort", BigInt, true)...
    done (took 0.254412375 seconds)
    (148/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.140218541 seconds)
    (149/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.221654066 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.19026752 seconds)
    (151/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097823569 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.116550737 seconds)
    (153/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.121896093 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.124488564 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.105535146 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 0.180921342 seconds)
    (157/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.104364325 seconds)
    (158/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.132369121 seconds)
    (159/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.120922552 seconds)
    (160/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.190850963 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108774458 seconds)
    (162/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.170564987 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.130839231 seconds)
    (164/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098746152 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122396312 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083864873 seconds)
    (167/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.160106104 seconds)
    (168/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.081427343 seconds)
    (169/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.13334206 seconds)
    (170/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.101748224 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123256489 seconds)
    (172/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.080255856 seconds)
    (173/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.103906033 seconds)
    (174/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.146311741 seconds)
    (175/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.193478578 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083264695 seconds)
    (177/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.119424724 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098114879 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175629427 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.130871687 seconds)
    (181/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.107595305 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12326496 seconds)
    (183/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081235405 seconds)
    (184/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121987375 seconds)
    (185/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084494423 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.228600947 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.120307259 seconds)
    (188/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080502477 seconds)
    (189/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.171636491 seconds)
    (190/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080963829 seconds)
    (191/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.169379237 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098928305 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.124324429 seconds)
    (194/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083018977 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.104175735 seconds)
    (196/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099150936 seconds)
    (197/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.105009766 seconds)
    (198/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144807533 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123905056 seconds)
    (200/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.227657131 seconds)
    (201/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.087873635 seconds)
    (202/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.107510613 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10608499 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.132631745 seconds)
    (205/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079860214 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.106469506 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084640551 seconds)
    (208/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139639015 seconds)
    (209/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098628438 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.134336441 seconds)
    (211/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164237821 seconds)
    (212/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084165632 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.1183108 seconds)
    (214/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081345912 seconds)
    (215/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.129058466 seconds)
    (216/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.092579818 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.118733525 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099447082 seconds)
    (219/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.17093708 seconds)
    (220/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097220111 seconds)
    (221/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.103201484 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11042823 seconds)
    (223/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111857772 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113163391 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104259347 seconds)
    (226/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.082034034 seconds)
    (227/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121408507 seconds)
    (228/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170168649 seconds)
    (229/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.104666085 seconds)
    (230/286) benchmarking ("sort", Int8, false)...
    done (took 0.201703735 seconds)
    (231/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080820414 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127811401 seconds)
    (233/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.199026433 seconds)
    (234/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.081691799 seconds)
    (235/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116390274 seconds)
    (236/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081930797 seconds)
    (237/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092845985 seconds)
    (238/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136662425 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104403675 seconds)
    (240/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.104875191 seconds)
    (241/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100417219 seconds)
    (242/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.171379872 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.092522933 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.122118975 seconds)
    (245/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080586234 seconds)
    (246/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103727407 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100955205 seconds)
    (248/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119484157 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097892702 seconds)
    (250/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.122944948 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.097481092 seconds)
    (252/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124255232 seconds)
    (253/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.147661219 seconds)
    (254/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.080862298 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.131102785 seconds)
    (256/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099053192 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.104908214 seconds)
    (258/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.080562887 seconds)
    (259/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.098690922 seconds)
    (260/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141338438 seconds)
    (261/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081330979 seconds)
    (262/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.104670281 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099998958 seconds)
    (264/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.103788852 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.122611236 seconds)
    (266/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.107744786 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.10281494 seconds)
    (268/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.104439065 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.093629536 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.118821744 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.125151089 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.147688605 seconds)
    (273/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.084143415 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131823367 seconds)
    (275/286) benchmarking ("sort", Float32, false)...
    done (took 0.183116478 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095063493 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.121175509 seconds)
    (278/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.080943013 seconds)
    (279/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117219423 seconds)
    (280/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.097538064 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.104843285 seconds)
    (282/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081903631 seconds)
    (283/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.088840123 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.119767953 seconds)
    (285/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096403811 seconds)
    (286/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121542224 seconds)
  done (took 39.187810885 seconds)
done (took 40.082104686 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10644308 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159281034 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.104750584 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.147551703 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.129411365 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.110337807 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.128053306 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104129384 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.131032011 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.131046454 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.108194768 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.11116783 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.105461011 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128775792 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.106466239 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.148123263 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106775127 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.125066043 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.095760561 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.120458289 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.095898723 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.121809107 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.121895477 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.088729725 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.127923009 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103441621 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.123325796 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.104554252 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.121364623 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.095294227 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.119704298 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100563992 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117823067 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.105812395 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.122893249 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097341252 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.129105123 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103078109 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.12308195 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.098019851 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.126043071 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097765592 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.124819382 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.103250092 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.121942824 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.096982387 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120539259 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130151139 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124283588 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121495913 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102466819 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.127877475 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.105966667 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.125414571 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.097728347 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120821249 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.097763302 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148811066 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095691116 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122979452 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101114878 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.126156148 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096477623 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.122168198 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095778255 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.128550153 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127116029 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096400684 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.126328064 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.100160619 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.116640543 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097765411 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.119295922 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.095207508 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.126306565 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104292064 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.115979465 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.097733756 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.124863225 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.099565048 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.120413512 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095875741 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.122542019 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098186366 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1189705 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089601639 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11885689 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099667759 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119811741 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097071991 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.123278104 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100166535 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.122304278 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10376959 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.121083381 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09865449 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.121458532 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.097155094 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.123603087 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095316304 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.117765542 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095268433 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12649831 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094609144 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.122008001 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106422067 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.119211079 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.099538708 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.121104824 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.096725827 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.133939944 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103336922 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.122355958 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097850889 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.118679593 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.100896197 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.119740748 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.118958645 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.095092848 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.121443548 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099339701 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.120685485 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095583208 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.123312553 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106360285 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.116956553 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.095441724 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119227655 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.097821561 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.123701901 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.098774096 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.11816639 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.096615214 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.115941719 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09683551 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.118818406 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1031047 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119267954 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096856513 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.121567534 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097106982 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.122237823 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.098173852 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.122556068 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094962788 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.113902609 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098955804 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11940685 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.099977985 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.12177983 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098316651 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.116961513 seconds)
done (took 18.01793559 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104839395 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191240136 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153816549 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.157118914 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154486433 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114600947 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.132487777 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153028429 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.105591004 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.150897225 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.151012616 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.14328567 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.133247724 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131026972 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138524735 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.104680007 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128658029 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136859701 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.137152167 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.149687115 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153734004 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.105365811 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.151215846 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.149333592 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.127313501 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133474746 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132239892 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128392674 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107336652 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13644486 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.120440111 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132833334 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.13054324 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115791379 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.136027243 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101702298 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140205234 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.124595843 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105355157 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129534545 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139209737 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.115922845 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125779809 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110407404 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.129704943 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.131649466 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103699815 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.127142836 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104746314 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123720118 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108677053 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.149298286 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127867489 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106350595 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.130630643 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.128542016 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106291403 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.133078486 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.130258014 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.10895683 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.129368817 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107182316 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.134900608 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145601432 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.104360524 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.132480893 seconds)
  done (took 9.479325222 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.120986359 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.159534565 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.135274105 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112783977 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131247371 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093035921 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118235097 seconds)
  done (took 1.834975923 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094847957 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.148459474 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12771475 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.152315096 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139993201 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.130970923 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137273434 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094405551 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.144483493 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.12953582 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.122994411 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.174872979 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120829117 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.107321796 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.155268085 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.119438601 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.130871668 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.120058411 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.102499941 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.153475627 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125114825 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.118430377 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133912323 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096960842 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142023065 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097810422 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.188222926 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133430902 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09481957 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.126887333 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100563027 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.215121746 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117987437 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.131217596 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094178739 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148945204 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.116575019 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12738647 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.145071638 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099132163 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.142374078 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.101826921 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128928238 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.100087439 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.128226144 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.135264805 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107553523 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.129057811 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.100880437 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149201912 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.131791007 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118402831 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122528481 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.100203074 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.130400049 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102303295 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13493378 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.100135916 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.149801152 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127740453 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.121796386 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147388668 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.141918039 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.122646663 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139215073 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.117436326 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.14231163 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125830454 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103549646 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129290863 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.12308778 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125511824 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.105587941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.137487489 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129254041 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123386807 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.148997218 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100761472 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.134856932 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099748032 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.125505749 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.095466401 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137087087 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099133179 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123545576 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138445548 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108229163 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.127069908 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100237092 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.144909887 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.124499801 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.108106275 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.132330378 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099516807 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137016952 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.149104164 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.106682538 seconds)
  done (took 13.142455641 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098495228 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.097515234 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.128150292 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122934248 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09803115 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097193565 seconds)
  done (took 1.616849446 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.127777019 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.126336426 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111704129 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12968133 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165535431 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.120382725 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.147805091 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131410047 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.117279757 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.137725628 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.119741077 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.148256857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.151912435 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.104232573 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.146102913 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.104095215 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.147885063 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125292969 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.111712519 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125947898 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112955135 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.131643849 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10079028 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.145570791 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.104147165 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.131088409 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128604037 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.112343925 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.136977706 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.106171492 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.13079545 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.104457415 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.133310764 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131852229 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.120843559 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.131053901 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099288235 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.133297247 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103600086 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.131305087 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.147348634 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101553777 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135807633 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.106166003 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.132721852 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.128814516 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.107685923 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128984187 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.120757571 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.132584617 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.106487913 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.130661314 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.104704557 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.133032408 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.103892507 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132905811 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.131904726 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.140155402 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130380672 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104534578 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.127649695 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.104599339 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.133896252 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.130089813 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104087028 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.131556961 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.104375038 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126563759 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101905715 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.129615504 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.106579414 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.127394442 seconds)
  done (took 9.896654849 seconds)
done (took 36.924459031 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693323539 seconds)
  done (took 1.663265306 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.855614851 seconds)
  done (took 1.828263836 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.984740493 seconds)
  done (took 18.986237514 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.54334504 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.633491577 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.96911382 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.170872712 seconds)
  done (took 3.287124984 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.960795511 seconds)
  done (took 1.952798997 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.315691713 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269688963 seconds)
  done (took 1.561817303 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.835629519 seconds)
  done (took 1.819729125 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.588148938 seconds)
  done (took 2.569012781 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.354300752 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.206958111 seconds)
  done (took 1.552136263 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.586055961 seconds)
  done (took 1.57132199 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.600903934 seconds)
  done (took 16.591482479 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242047059 seconds)
  done (took 1.243881404 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.310535046 seconds)
  done (took 1.299805782 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.712219586 seconds)
  done (took 4.703771772 seconds)
done (took 61.60956838 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.108871906 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.134759276 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1121944 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.133359252 seconds)
  done (took 1.473381267 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.113465448 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.130555539 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109370376 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.129925783 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.112480852 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.131496437 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102384229 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.13759676 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12981988 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.107466745 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.131042527 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104274247 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131741894 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102614196 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.128409612 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.105833121 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.133964624 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.131001988 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105244903 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.131628266 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.103698499 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.13175229 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.107569791 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.132308783 seconds)
  done (took 3.876509933 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10807321 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101178078 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.129439894 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09979293 seconds)
  done (took 1.432989263 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.112067671 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144221102 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.117286851 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.136978144 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143537871 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118583763 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.127539946 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.100590086 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.129293309 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.110966076 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128547902 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.145640436 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118228428 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121468232 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.112761809 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11954432 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097815949 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.144953695 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.111031458 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.139362412 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100266636 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13789817 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.134005139 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.11568013 seconds)
  done (took 3.967733385 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.213201052 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.114964812 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.150863611 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.107655153 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.180400616 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.154335537 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.099253238 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.152508554 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.12628551 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124919184 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.131543235 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.183571127 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126962141 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.130892053 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.10129682 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.134414602 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.146360628 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128503996 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.130486261 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138832768 seconds)
  done (took 3.777780746 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10817561 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126787658 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097818046 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125091016 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108703006 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128812656 seconds)
  done (took 1.697708549 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097721136 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.095874916 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.122445827 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.09605705 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.127302257 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096629626 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.120157584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.0965886 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09683015 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.12335249 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095651196 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.120770333 seconds)
  done (took 2.291592147 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.53706897 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.100509314 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129808615 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101861672 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.132215671 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098604884 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142295025 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.125091048 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.182022881 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100730042 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14264979 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.180196896 seconds)
  done (took 2.97806181 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218649049 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105377925 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282967955 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340485839 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168059007 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175907743 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259225418 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176860421 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195720116 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147051177 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214522281 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166673688 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136190668 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188045311 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150839996 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.194416074 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184247676 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209364213 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158493762 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248436621 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174173655 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176710444 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198903484 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160713012 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121979767 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167176858 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.127684968 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110365566 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182389954 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178906164 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211108581 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157576821 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120555026 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237428419 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222125993 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188107632 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.397701159 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142345414 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.198962891 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.201762278 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284977608 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123090076 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232499416 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164835704 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1135775 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188544064 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164167909 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188285679 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142176516 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149852772 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193393719 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184616864 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189409779 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146731414 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282395193 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156371117 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.128395183 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189356549 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226564183 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2083316 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175820893 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.104756119 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.265409231 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201328983 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191120717 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154351048 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178095542 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133300931 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187849805 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213567939 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186390229 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177379785 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225466734 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14284123 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172089892 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186911055 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135003704 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189102499 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170211956 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.131240623 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159435943 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119161265 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137979824 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193735268 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106009705 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247715934 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118985691 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.298139043 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245901261 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167270395 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170629994 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173535371 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176486874 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128628898 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129361613 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155988423 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179963282 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166334262 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114442859 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167765391 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156344055 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134313179 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134253967 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.133307768 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167330275 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116201929 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176472404 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173768905 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138905543 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173237826 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158548859 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.140051332 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207349497 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204958472 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114284583 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143595152 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212744952 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167746458 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146451382 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196202724 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204282079 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182840498 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146911581 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179709655 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204758304 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151801222 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207178503 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151957587 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115212179 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.160870215 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168446169 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166529304 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.166249251 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110652914 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161963317 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23779071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10990964 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147078723 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183162503 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107250435 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138194157 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153705031 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117067409 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.150686088 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.159728362 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147350753 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165617293 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166979753 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134780736 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166847758 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152613787 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199003114 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142855753 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170839087 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157682768 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100581255 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187499021 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229259921 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111698602 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195445085 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177078693 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273210822 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174348991 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139307671 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19136044 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111706651 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128948873 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175525379 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172780988 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172925668 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.201483811 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265468668 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177531403 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.134563853 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15838679 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177200571 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.193144067 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165494926 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156532005 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172533505 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177358665 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131782775 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.105109855 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136620177 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121497053 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139979256 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142084799 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192483503 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173999129 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257876782 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170487831 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12158072 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200193277 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.135247675 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174485782 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.181021161 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147678948 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203087282 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199947222 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176346354 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152893753 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180917436 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.101041048 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13552326 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140768523 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174817273 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115771012 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143477585 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152770268 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201309846 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18631803 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159221618 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28008209 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179145081 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21169363 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103791097 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173798178 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189568135 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167852309 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.196010202 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117357246 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169880558 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197119414 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154165607 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20203801 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17173351 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178213025 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239158811 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166393881 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113402828 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159522267 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177845878 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150271723 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181086426 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127709369 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146201255 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164622184 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145629966 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107260487 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218385759 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124459949 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217685073 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.177203893 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185259642 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107599269 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154707394 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170267276 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154729673 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.100373304 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179224474 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233299001 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12478627 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167787457 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221183749 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112431495 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.297462812 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210367562 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194018217 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147957157 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152667286 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170449382 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150861562 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172164284 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220005215 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124899947 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190111075 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169492734 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.152769076 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143059857 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128174658 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161060454 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.161454857 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142220575 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.16148498 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124336911 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220233977 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127140139 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169307915 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174000615 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.156762547 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.164395483 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122747284 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2181978 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16744128 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187494901 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165932502 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.184441162 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197777032 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135966181 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136916076 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109106133 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192517301 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141670157 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167288196 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.227897442 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280910904 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169846664 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178733073 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118866163 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.135258431 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169729008 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158030496 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244939975 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150949087 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147446213 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209433734 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.161593129 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112199291 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173612423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266878672 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15534747 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194285604 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.102009175 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263133537 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109728106 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141873406 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180710576 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181353667 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.141674223 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.167239041 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17351082 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156783504 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180483911 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14728532 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237429243 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247536195 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180797405 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185882694 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.124014664 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168724723 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172702455 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222770887 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12502893 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.155573139 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172308445 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201561793 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204199441 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143678928 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173478663 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172280747 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168703762 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184471954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114444778 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226846013 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11347164 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175437456 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151026876 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132535714 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141310252 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.259570966 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142816316 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195966671 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166783913 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114355076 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13709627 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162460157 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167096345 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126296284 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.14048605 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19111309 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.137934786 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143747127 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192241183 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14118243 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163284679 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126558289 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11365859 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152440212 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155789749 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116533907 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.182844478 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203385648 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141703538 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196678873 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182631945 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17470525 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170662891 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154194132 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643220557 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13815012 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200599329 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157535885 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197362029 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159571802 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176034217 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170779162 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130669773 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177254758 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159692005 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231972193 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175294053 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167780033 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140791741 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126397233 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155336755 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.141952022 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161550518 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14341379 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151978506 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146529431 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165286698 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155657873 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.127306983 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149300695 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202535421 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157700029 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193884257 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194218458 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149093012 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175051815 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185433776 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138206359 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.142283085 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180880815 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152678399 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161389401 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141017936 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.11608452 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190725313 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.134561474 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170739193 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17015545 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143610349 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172852882 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145161825 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169100656 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152391673 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170280567 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108442403 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.164732496 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167867481 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139761639 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10979753 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165622211 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170337782 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.169659549 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108265382 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.183539404 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202323295 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.106163011 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145134336 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266490581 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169220716 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204080081 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162687354 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116578886 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155303239 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165159687 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161546006 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172102371 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111078259 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143014487 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.11180442 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193366058 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173394783 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166649185 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20334365 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171842629 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199587686 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.146778293 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2743079 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121269951 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165783303 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.13995177 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109792783 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152511114 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143011005 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126687898 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265800138 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190165027 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163825701 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.125719062 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137423237 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.137373484 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115493707 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182096076 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165501005 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168748753 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152457892 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.100291222 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155195425 seconds)
  done (took 82.333664344 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156917091 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152767872 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.160029343 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.207152265 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178328132 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268444153 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.217608641 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238391372 seconds)
  done (took 2.672875704 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109782815 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.145265608 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.151599217 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134332479 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.101856973 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.347501707 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.149217129 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.133744054 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161098711 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.144763959 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.103051808 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.667625743 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131906357 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132366389 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.105917512 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.125092981 seconds)
  done (took 3.933559129 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.465674792 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.558915194 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.211369802 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.257301784 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238509193 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.187131561 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.769583383 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.174299116 seconds)
  done (took 12.962606133 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.133955509 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.150241644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.150456931 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.176366586 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.161819818 seconds)
  done (took 1.879527719 seconds)
done (took 126.263442142 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104621404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.134130636 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105980992 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.136477136 seconds)
  done (took 1.571999124 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.118029109 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090320374 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.122195759 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089077182 seconds)
  done (took 1.518088359 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427270619 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.120390993 seconds)
  done (took 1.685848594 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135488121 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147216936 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.124643878 seconds)
  done (took 1.511702117 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114173289 seconds)
  done (took 1.221511678 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.112147052 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113136488 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.152192316 seconds)
  done (took 1.482994377 seconds)
done (took 10.094367175 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120717267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.536896884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.394578838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148331886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.733167129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389336817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.038231333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.167093435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176313198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101298698 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.146254759 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680510473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.058051746 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.452235175 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.042531555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.441295341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.711470231 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102468763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135720187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101628092 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016650729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099414354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.130771203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102098005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.709494695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405724978 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1299756 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.452612541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.128784001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104149471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.418428223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100647074 seconds)
  done (took 17.572471326 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10409334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19035945 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.108125602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131160524 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103860615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131796872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.110394179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142555806 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191583836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128101978 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119485024 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128164805 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106498832 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127940874 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122180588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127850058 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103646512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130165504 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1085724 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130553042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120716189 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128398119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103320271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130650359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107144819 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.142122468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102301471 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143142142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100817948 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134374375 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106165474 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13336909 seconds)
  done (took 5.114725749 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15063737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200184509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137864516 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136447774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181723366 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131455668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.215680584 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.140179968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.194001867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130722479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1196567 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129747048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.165857562 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102535268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150491802 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102010768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132253035 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.104278036 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136743636 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102757033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149977427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101250634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131954556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102840934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130893124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114863772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.131458546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.14224376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101911815 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13300227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.108061183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128865419 seconds)
  done (took 5.454905648 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110942686 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.138557562 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119375022 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.147153429 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103888726 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.138598687 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.110453243 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.132515657 seconds)
  done (took 2.115089648 seconds)
done (took 31.365618352 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120555406 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.10669525 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.144828604 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.142281313 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.111650468 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.166152763 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099968159 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.140571889 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.114627533 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108791282 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.147573298 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.102723997 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.132091976 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100437116 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.144580235 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106182055 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.146001458 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.110358596 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.151946507 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.116313177 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.133212893 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.113146037 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.141252483 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.122518099 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.152750037 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.151480922 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.118311483 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.136852961 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102128964 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.131480363 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.119218158 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.15721576 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.1044663 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.147708065 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.106064106 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.136040546 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.101730898 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.132437693 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.116370682 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.14278209 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.106939547 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.142438255 seconds)
  done (took 6.440687947 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.129284553 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.175242931 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.098575325 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.129789689 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.099289308 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.170240117 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.165730961 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.099461583 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.129528935 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.127499463 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.157009682 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.099284147 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.128791211 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.09943156 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.128230553 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.100162743 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.155223854 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.126149195 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.161531828 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.162077245 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.147736739 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.16562603 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.165048714 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.126152029 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.173607293 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.166804011 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.12263045 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.169234386 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.158447649 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.099351378 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.161910401 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.133521257 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.128836186 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.098778637 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.172533547 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.168442858 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12986126 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.172353023 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.164628671 seconds)
  done (took 6.588264861 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110663794 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.150088477 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133985731 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.238367889 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.173774604 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.149971323 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1174673 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.15145321 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.162219231 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.103811113 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.114876412 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.164463236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14845855 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.116024556 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.138029811 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.117052442 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.152946945 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.103936074 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.14156165 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120750515 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.15016945 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.115815164 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.150643423 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140962259 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.103834258 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139980005 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.1118548 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.147426257 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11116885 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.142742087 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.106888543 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.136341384 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.105653394 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.144270744 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106441615 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.139199249 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.152645604 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11463291 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.147215229 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.137057538 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.143354808 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.105730633 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.155187989 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.183925839 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.106155883 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138754505 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.112843699 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.144030424 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.102778954 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152234645 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118126142 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.134972834 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.147890304 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102468882 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.13165082 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112830279 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.135358962 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.106694329 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.143682353 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.107365658 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.153330569 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.112790672 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142729589 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.106407919 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.141469756 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.101982696 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.132121686 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1072031 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.157882406 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13922407 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139379697 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.134626237 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.108624101 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.143526332 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.110743162 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144219366 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.10186961 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142419297 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112804625 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.140057282 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.142515353 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.106671845 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.105706393 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.151098533 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.146161419 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.111121954 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.138183044 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.108522773 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.1366747 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11443145 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149691202 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.133866584 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.108112586 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.144391099 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.105571889 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135730906 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.111042055 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.136777706 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.102354284 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.156613958 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108886466 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.132747101 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12489253 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.136075656 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107500516 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142602971 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.116514482 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.133764951 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107451562 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.140071063 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.102244928 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.14136595 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105980099 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.133471057 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.116032334 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.150026591 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.139729606 seconds)
  done (took 16.393322789 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.253165589 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.232261501 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204803961 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.316976493 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156044418 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.129170413 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.228765654 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.184028072 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134667793 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.173379591 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.189372506 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.20017273 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.188504404 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.199383044 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.19189116 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.102627301 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.168626354 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.186685309 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.231343738 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.312745294 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.137766445 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.149458496 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.174895692 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.173499683 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.150745934 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.12008847 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.157629321 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.153971332 seconds)
  done (took 6.336772298 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119531531 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.173713477 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.111474245 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16299225 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.160991348 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103641133 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.139272742 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.103904989 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.148707668 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.148788357 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105752475 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.140446719 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10936413 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.145622818 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.10322821 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.142104825 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.113332058 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.141212955 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106006244 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.13754761 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.120659088 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151862826 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107686149 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.141523405 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146391891 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.110260827 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135478293 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.155914444 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.110635304 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164072081 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.100440847 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.143523333 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.118188494 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.134184284 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.109365556 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.137969741 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.104557062 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.135610451 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.106464818 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.130706056 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.103832064 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.093398361 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.139012037 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.149602583 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.110437665 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.134272 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.109131579 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.139298765 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.111765212 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.130619556 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105274936 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.136129906 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107613267 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.149306447 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.10618995 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.141862495 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.107177968 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133354774 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.113454411 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.136345713 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101389287 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.137783547 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.111110119 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.13898146 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11248269 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140631509 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108052908 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.136556729 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.109046255 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.14182601 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.106546679 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.147224607 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.100086182 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.136008912 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.114116454 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.147325568 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.107028728 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.140163855 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.110173207 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.13433791 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.093520198 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.132254807 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.090736058 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107485369 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.133028682 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.138556624 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.107314016 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109257403 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.1506839 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.141612755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.109270653 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.134058187 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.109388113 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.138728161 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.10105739 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.138624724 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.121296147 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.153526022 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101592026 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.133410876 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.119250303 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.14043669 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.10114152 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123387754 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.113510027 seconds)
  done (took 14.307638704 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131664094 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.173046159 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104113544 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.153961726 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.169294914 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.133517324 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.143388507 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.113203297 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.135183753 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.123938056 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.141592369 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112693377 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.142555087 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.118776902 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163325737 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.146304091 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.105650934 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.148710143 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109657283 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174983264 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.122891764 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.160599214 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.165486398 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.110941702 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.139690099 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.127009238 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.166488468 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.116760519 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.146616015 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.16693363 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.117462989 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.166333118 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166419577 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.109683202 seconds)
  done (took 5.88713683 seconds)
done (took 57.069595657 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.252149081 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.470332594 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.214035212 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.213096756 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.234932662 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.246100283 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.232497821 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.406915193 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.955426418 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.204025847 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.212353623 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.213238734 seconds)
done (took 28.000979423 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.308030401 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.844711765 seconds)
    (2/2) benchmarking "String"...
    done (took 1.595379523 seconds)
  done (took 4.582819401 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.21264362 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.213482647 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.595946552 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.233551652 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.213227571 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.231801189 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.21375531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.215708828 seconds)
  done (took 16.059619359 seconds)
done (took 26.306804456 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.278572872 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.401534101 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.471425198 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.23238227 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.214834278 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.214466015 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.230575613 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.24825494 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.228176558 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.220728671 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.214576977 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.489909667 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.233169102 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.594383552 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.214199012 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.239314338 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.231307501 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.430313242 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.215185829 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.28056471 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.202618511 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.226657677 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.216319731 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.236254257 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.226411364 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.216033913 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.278161414 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.219685518 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.399078589 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.229309181 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.259978481 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.215966573 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.271255516 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.233657413 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.329271104 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.247102489 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.391858814 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.226636465 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.213744556 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.215417994 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.389906835 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.640256071 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.227499279 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.217454764 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.232614281 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.275141403 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.206691358 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.990858366 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.220511355 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.21640506 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.226662073 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.590520209 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.2229501 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.226122689 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.231391447 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.447552111 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.217982385 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.261312846 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.245556453 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.220584949 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.228066729 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.221835746 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.232981447 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.231020749 seconds)
  done (took 144.506654301 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.218337832 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.223441435 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.217978918 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.226014804 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.217888175 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.22293457 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.218272989 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.217572333 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.224432107 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.244631446 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.219864068 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.219713673 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.224125329 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.195173556 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218915086 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.233939854 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.2190356 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.239486329 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238568858 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.220252952 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.241391767 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.220901721 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.237825217 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.219630981 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.258790626 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.321569779 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.249091709 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.252026511 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.21932807 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.221062119 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.2198025 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.227576596 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.866368793 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.077708312 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.229340464 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.24413694 seconds)
  done (took 80.91436665 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.221761815 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221176536 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221681145 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.25550404 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.220653829 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.829003709 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831637897 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.960715861 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.32397032 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.615212836 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.508736834 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.221902839 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.221860289 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316847303 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.234650767 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.223037765 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.237738909 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.222114433 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221274789 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.248285101 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.226005577 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83015052 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.239823451 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.404232282 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.23858382 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257229171 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.623387721 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.449473581 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222772997 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256680767 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.55997585 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.273741096 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.222464197 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.606231732 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.403677686 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338806479 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.225983427 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257903307 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.224215285 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.508676058 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224815108 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.223622181 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226928943 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90546636 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.223954297 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.833691043 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.229419806 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.187364453 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.223885297 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223668077 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.488574876 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.925440613 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.241897931 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.224498028 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.227045954 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.224714796 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224021828 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.258531094 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.468621763 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.34248975 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225704052 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.227770526 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258598113 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.225676382 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.301633385 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.247396855 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.225926631 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.286022342 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.330294136 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.387613484 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.853460364 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231012918 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.225919637 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325274304 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348455783 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.226903181 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224969998 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226642952 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.225738781 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.337018735 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.225860967 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.658821289 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.408321771 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.243167819 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.628069578 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.326112957 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.228446623 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.648365451 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.229474413 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.226239742 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.992988545 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324961503 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.226524652 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.227639808 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.227809107 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.66844718 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836737513 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505880719 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.233053328 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.754408398 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.232566373 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.671808756 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.809263728 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.923130259 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.22916276 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342828804 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.410532677 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.246295382 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.227843259 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.628446299 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.229131545 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.28706709 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228173702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.630089469 seconds)
  done (took 368.872194387 seconds)
done (took 595.437655289 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.987873332 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.938263275 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.071968374 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.967836804 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.930040087 seconds)
  done (took 11.053006387 seconds)
done (took 12.21057612 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.427641886 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.43242223 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29685826 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428564458 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.266712345 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448385438 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418094041 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.255167523 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.337708221 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.315820793 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.336006954 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.285259233 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265351138 seconds)
  done (took 18.671961617 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.230864814 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.231776922 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293616694 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.231774058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269548153 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.2303737 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.231509652 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.231543376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.230276152 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245961782 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245948369 seconds)
  done (took 21.832756112 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.232258852 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.250458707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296817731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.228814653 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.289706419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.230410175 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.253410437 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.252174406 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.233099573 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267630163 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244818062 seconds)
  done (took 21.937718118 seconds)
done (took 63.600079936 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.276604344 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.403802423 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.259717072 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.246110683 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.240786305 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.241176326 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.248061975 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.240144039 seconds)
  done (took 11.317107118 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.238703036 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.238609311 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.240728536 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.24171331 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.240299291 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.240492317 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.239276618 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.237987452 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.242513493 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.241068973 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.237490697 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240685589 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.240913133 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.238634702 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.238700867 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.241945369 seconds)
  done (took 21.001283823 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.241829391 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.238825149 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.239334709 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.239695014 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.238643456 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.238905838 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.239962564 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.239202841 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.238321804 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.240746119 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.240286177 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.238736928 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.24067206 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.239445512 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.240530286 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.239557734 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.239763201 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.238985719 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.245015654 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.239874065 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.238959854 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.239688129 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.239711868 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.239797353 seconds)
  done (took 30.920452225 seconds)
done (took 64.398912281 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.241833338 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.23588659 seconds)
  done (took 5.641428495 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.303197266 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.306425796 seconds)
  done (took 3.774288066 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.243736035 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.243825473 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.243388711 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.244087626 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.243113921 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.244816403 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.244121774 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.243598195 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.244715433 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.243401518 seconds)
  done (took 13.601338127 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.245773982 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.244775073 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.242453757 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.244597593 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.2442226 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.240767469 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.244201623 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.24364887 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.244195228 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.241625151 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.245752605 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.243232883 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.245343475 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.242034658 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.245259011 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.242969145 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.242851276 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.243569161 seconds)
  done (took 23.552173929 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.259288628 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.266987755 seconds)
  done (took 3.6933318 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.38361152 seconds)
    (2/7) benchmarking "second"...
    done (took 1.284852255 seconds)
    (3/7) benchmarking "month"...
    done (took 1.361318644 seconds)
    (4/7) benchmarking "year"...
    done (took 1.350999123 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.286069366 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.265335379 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.287215463 seconds)
  done (took 10.386556621 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.247795576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.441349705 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.552410932 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.033962068 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.248082127 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.252096925 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.24065242 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.252013938 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.254576182 seconds)
  done (took 14.690194473 seconds)
done (took 76.502330059 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.241594458 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.268515417 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.253642213 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.258503757 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.588462033 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.276016725 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.24628489 seconds)
done (took 16.299302392 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.23103816 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.234625194 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.244146399 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.257010751 seconds)
  done (took 10.132830279 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.248333104 seconds)
    (2/2) benchmarking "read"...
    done (took 1.632424926 seconds)
  done (took 5.046687568 seconds)
done (took 16.347315127 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249292101 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.24901157 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.246643863 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.246120812 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.249095821 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.249006926 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.245480156 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.245553118 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.24882357 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.247543425 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.24556542 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.248627147 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.248787058 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.249322904 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248540867 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24631334 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246488426 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249139303 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.245592956 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246638974 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246824084 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249028291 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.245929928 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.247259561 seconds)
  done (took 31.108503781 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.251462765 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.247659851 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.250688668 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.249968824 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.249098089 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.250303432 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.250703723 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.248614217 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.250341514 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.251019962 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248761628 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.248830339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.251736911 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.248724326 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248922272 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.249101713 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.251685539 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248809032 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250916735 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.247407203 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.251846045 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249419449 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.248067687 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251066218 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.248910004 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24868224 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.251433039 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.249318945 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252185966 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.249526122 seconds)
  done (took 38.664976203 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.256654538 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.259554208 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.251790116 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.251861315 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.25072887 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.25081128 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.251969048 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.252542924 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.252857331 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.252008681 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.252912356 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.250974659 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.25268877 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.253413638 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.252310087 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.252133194 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.25326993 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.251719442 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.254369655 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.253948788 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.254521481 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.25314734 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.252052106 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.253419025 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.25283222 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.252272614 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.252185172 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.254207335 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.25309979 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.252819926 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.252911643 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.253047548 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.254917831 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.255236169 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.254381932 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.254368758 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.259392072 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.262652812 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.252571974 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.253951748 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.254064217 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.253986391 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.254999001 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.254207807 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.254166817 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.255709327 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.255199377 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.25469407 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.254987726 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.254965823 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.255143196 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.256044418 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.255691355 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.256271958 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.256000386 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.254673094 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.256380176 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.254878638 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.25499023 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.256495492 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.255772129 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.255957167 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.25653158 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.257775511 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.256009261 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.255653367 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.256062797 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.256228981 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.256595054 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.258006288 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.257340955 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.257983814 seconds)
  done (took 91.499462529 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.258349744 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254499756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.254615613 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.255110466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256200413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.258107609 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.255741697 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258785866 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256606438 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.258069751 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257933899 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257244159 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255901774 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258449442 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258233091 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.255151983 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.257621827 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254948697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.258248412 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.257446458 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.258469013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.256995246 seconds)
  done (took 28.828498458 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258956275 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260069092 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.255212996 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.26257946 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2586164 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.260681796 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.258288015 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259016868 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258933198 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256682989 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256690432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258052817 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259286452 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255527542 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256777579 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.258962857 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260055975 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25836469 seconds)
  done (took 23.831272887 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.257780834 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.257828784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.260380543 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.258001548 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.256916083 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.260173978 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257551666 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.258829196 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.261291916 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.257262046 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.259929385 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26078238 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.260035026 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257408012 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260749221 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258739903 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.261390695 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258863121 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260295948 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258748402 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.259500615 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261546341 seconds)
  done (took 28.882875024 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261198744 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263253811 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.259983175 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.258581827 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.259632596 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.262581257 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.262221851 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.258920522 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.263030603 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.263057987 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259633776 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.261688382 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.261897853 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.258771408 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.260963311 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260261417 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262706811 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260701476 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261820347 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260271324 seconds)
  done (took 26.401482132 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262950335 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263811493 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.262930781 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263583678 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264639712 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.264640086 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264139878 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.264309945 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265291371 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265242604 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266305634 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265022987 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266348231 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.264219863 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264004593 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265528967 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.264888333 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264405525 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265573178 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265745726 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26532772 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265430707 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.265415587 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265756417 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26543484 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.266519359 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265309115 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266101776 seconds)
  done (took 36.601071044 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265054454 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.266148728 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.26366045 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.265008492 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.263867184 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.264366922 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.263126714 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.262761446 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267522474 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264929651 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.266107378 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.26557677 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266304362 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.266117993 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.264942848 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.267717042 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268331456 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.265404916 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263401259 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264895298 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.267430763 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266904077 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.267273009 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264333875 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263348712 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.266950654 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265441556 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.265655318 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268468882 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265126712 seconds)
  done (took 39.150983876 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.31276237 seconds)
    (2/2) benchmarking "in"...
    done (took 1.312444286 seconds)
  done (took 3.811242121 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.265644224 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269170779 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.267763246 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.266479264 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.266437259 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269774751 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.270261476 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265997679 seconds)
  done (took 11.327417736 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.269706523 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.268657857 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.268864782 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.270067988 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.268277744 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.26909037 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274821436 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.288660567 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.270108522 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.271246607 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.276756682 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.276272758 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.271774717 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270366175 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.27171961 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271735908 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.271075674 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.270346688 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.271250797 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.270152284 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26853124 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272314067 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271241974 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.268091723 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.272297431 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.28197541 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.273438901 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.272362504 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271642475 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.275104437 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.270518774 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.268113512 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.270657424 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.270711682 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.271030202 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.270817929 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281013629 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294204163 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.277553818 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271412083 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272435142 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.269491508 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.271275558 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.273475868 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273922971 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.273114282 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.274681093 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.269875777 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.271416623 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.277136395 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.278438814 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272981381 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.271075493 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275028838 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.274487527 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278618859 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.292621366 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.27717716 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.283509656 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.284201029 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.285916055 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.299008863 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274448881 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.274307506 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284731834 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.299652952 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281138558 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.29320412 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.271934235 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.275810928 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.279753204 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286075115 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.300415533 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.273850575 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273912556 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.275069562 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274535335 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276867359 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280708622 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.29716132 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.273923815 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275572965 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283917852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299669888 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.275090341 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.275911902 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.276119602 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.277642921 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.278305749 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287163857 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.296602796 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.277952757 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.276368328 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.276718925 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.276342148 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.277325378 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.275561748 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.275827502 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.274577946 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.277307624 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276337598 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281883255 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.286061958 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277563096 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276968167 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.283450624 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.277489593 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277666029 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.282932083 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.276879475 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27741279 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.280261171 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.282537322 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.273815879 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281150948 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.286430626 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.276803451 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.279741002 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.278089413 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.278231899 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288243789 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.303937583 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.278582872 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.278850941 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.282801629 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.288281926 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.278294626 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.281057446 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.278308269 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.276889784 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.278568812 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.280967098 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.279331803 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.279447888 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.278003585 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280312198 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.27661851 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.278699158 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.278838446 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.280997609 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.28113523 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.279651587 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.280929331 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.281600298 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.280401134 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.28283309 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.285739653 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.279701391 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.282489346 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.280874418 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.27775658 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.281035246 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.281474426 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.281668324 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.280970787 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281225666 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.281465393 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.280383237 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28237211 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.281577994 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281270005 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.282822772 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28564176 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.281275821 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.28528397 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.281293895 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.278488833 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.281423366 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.282694232 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.281871421 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.283094249 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.281545874 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.286360862 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.291548312 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.284840828 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.282666209 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.285062498 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282286923 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284271966 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283692412 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.286820363 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.290429772 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.281727577 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.289689787 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.282709453 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281694156 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.284092816 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.283469822 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.283277705 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283605413 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.287846382 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.291465548 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296039346 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311371201 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.285268172 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.288561168 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.285690994 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.287910723 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.2880524 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.282989839 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.284324262 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285135531 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284335538 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284331318 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.285691659 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.284539792 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.283914124 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.285495633 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.285698043 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.284929832 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284550901 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.286067274 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285932453 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.281908006 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286946652 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286112072 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.285199004 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.282390714 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.284162121 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.28507807 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.285837112 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.285247588 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.291587022 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.284258219 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.287215707 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.28730731 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.286858169 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.286046496 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.287336946 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288255204 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.28701342 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293599562 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.308619113 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.287484992 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294390752 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.307509485 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.286674035 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.290026518 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.288602895 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.285593446 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.291784212 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.29530454 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.286668647 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.287723994 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.286583108 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28845509 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287708081 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.29323521 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.2845317 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.287848069 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.288590142 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.289300662 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.287721972 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.289319997 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.289193137 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.289445005 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290085565 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.290034767 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.288589943 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289776385 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.285972914 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.287563127 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.288041262 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292629212 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.29781102 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.293824361 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.288729139 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.2914583 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.290840037 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.293657487 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.290072549 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.288644478 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.290066039 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302438283 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.31596623 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296418639 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.311591577 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.290654683 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29518768 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.31202427 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.29605811 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290535123 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290591353 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.290318353 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.290099693 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.287178782 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29072623 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.29079067 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292499379 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.292056557 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.295579026 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.293522183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.28975666 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.290260052 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.29023901 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.29159225 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.290981193 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.293128757 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.293083188 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294253708 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.290817192 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.291972442 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.298388453 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313757979 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.293272497 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.291937305 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.294184411 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.292894273 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.293174404 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.291576114 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.297383946 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.301061156 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.298781314 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.302133387 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.295716098 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.303313797 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.292428346 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.297523152 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.301351756 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.291592892 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.29284897 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.293182172 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.293984745 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300336251 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.313995275 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.296037308 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.297896264 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.293268142 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.292928347 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.293500722 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.294339258 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.294562372 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.293515496 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302918249 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.318422558 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.297507455 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295909795 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.292302183 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.293956438 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.293652784 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.294660418 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.298298305 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.294555447 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.296905289 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.295449754 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.296304669 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.296414714 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.295468731 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.296430001 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.293362661 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.295566257 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302559595 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.321536358 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300291705 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.295743243 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.302721758 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295445418 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.302657374 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.316514287 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.296364945 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.295343995 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.296592291 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.298127528 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.296980078 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.297486919 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.297165363 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.298684581 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.301737194 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.29687762 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.29820546 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.298479629 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.297534276 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.296814485 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.309475408 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.321446841 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.299769289 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302067008 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.295682842 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.300279669 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.303086436 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.297976129 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.297934165 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.301482588 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310035602 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307204146 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.299749724 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.29898595 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300177984 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298951144 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.299308743 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.299851232 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.297616396 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.799672658 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.301030532 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.298535136 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302373102 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.298870971 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.299848972 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.299277226 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.301187505 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.310851314 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.300559349 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.300763575 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29947311 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.300781569 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.300613199 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.299914821 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.299232861 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.30122511 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300551094 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.302388944 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.308595152 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.308480645 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.302102594 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.301451761 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.300201003 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.301807064 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.30199962 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300908572 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.300977832 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299590153 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.302645382 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.301442641 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.303529638 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.301168704 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.301952775 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.303355618 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30151865 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30502345 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.309749338 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300828857 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.299460008 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.302188274 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302340274 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.301607513 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.302806141 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.31112858 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306319999 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.313466704 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.311587302 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.307319743 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.302679657 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305958274 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.309943158 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.300114284 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.304209137 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.303311306 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.302999175 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.30475657 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.307268816 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.303582061 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.310527173 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.303566829 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.303400939 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.310721094 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.327909978 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.30424727 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.306287466 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.309278361 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.303299893 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.302267546 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.305899567 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.303935547 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.311332206 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.328096065 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305963281 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306921446 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.304695235 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.307851855 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.310243057 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.305901152 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.307231538 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.304064989 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.30612425 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.305934129 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.306744205 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.304982307 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.304135134 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.307551055 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.310784289 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.313841836 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.302427275 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307893603 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.308726631 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.306895454 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.307678549 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307673511 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.303681475 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.303503972 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.305727424 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.306329682 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.306688023 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.308832092 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.306438078 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.309379908 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.309443038 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305936611 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.310369767 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.318297052 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.314965547 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.305796215 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.30694761 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.308056131 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.309807054 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.307805727 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.308931342 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307728855 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.309169119 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.308451867 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.308125558 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.307505207 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.313059305 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323552171 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.33210026 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30798834 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.309558764 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312083132 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.308864743 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.306528145 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.309775768 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.311429153 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.311116831 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.316373503 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.309926292 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315723384 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330140959 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.311527521 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.312805938 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.31296541 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.317737729 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.312622149 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30942464 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.30987497 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.315271365 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.325972019 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.311495263 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32075225 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.340826246 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.332353281 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.311753543 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.309809095 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.310534838 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.310514716 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.312193248 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.310084254 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.311749204 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.312814242 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.310885662 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.314799205 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317903189 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.312319826 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.313376582 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.312138776 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.311342676 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.312361937 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.307083755 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.311628417 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.312203557 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.310481174 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.310649065 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.310695319 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.311749667 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32612944 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.343651286 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.314414391 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.312128191 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.310549574 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.316095837 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.314977195 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.326365059 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.321867834 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.311765131 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.312605169 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.314128731 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.311787224 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.313622332 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.314783061 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.312857925 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31266371 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.310678149 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.327524957 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340722801 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.318939614 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.313760304 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314860621 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.313604781 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.314238412 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312380368 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315142872 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.314779005 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.317861541 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317694329 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.31470685 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.315577314 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.317620005 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.320981395 seconds)
  done (took 773.314334351 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.312583478 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311883269 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312245513 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.313949291 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31303143 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313163352 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312576544 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313004605 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.313721144 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.313353418 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.312663843 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312634562 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.314264023 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.313341737 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313007656 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313583094 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313514182 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.313474739 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313883208 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314776078 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315534839 seconds)
  done (took 28.807371339 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.317629726 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.314758238 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313757446 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316575265 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313867298 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.318236514 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.31531575 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316827131 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316546887 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314508992 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.318509749 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318296315 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.31638851 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.315578154 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314215624 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317478213 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.317883577 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315174618 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.318565548 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315523259 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317949703 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.316315554 seconds)
  done (took 30.190803567 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.316697045 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.317765635 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.319227407 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.315356184 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.31679452 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.315937806 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.318203521 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.319166838 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.318834471 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.319576295 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.318468455 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.320170755 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.325363507 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.324770854 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.32112409 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.319429871 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.318774934 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.318853128 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.319188195 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.317106927 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.324730596 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.338356563 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.318755363 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.320699831 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.320872493 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.321173393 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.320383456 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.319211589 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.321810768 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.324391703 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.321347759 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.319833949 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.323444541 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.319392869 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.322294948 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.326295903 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.321154254 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.317370686 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.321368646 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.330153848 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.342966198 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.31929871 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.326930361 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.342288093 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.32079322 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.324852708 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.328865487 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.319491952 seconds)
  done (took 64.691230659 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.945193867 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.963613029 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.968117238 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.963831018 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.960377363 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.963839842 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.978666039 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.971810945 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.96896696 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.959862645 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.968601296 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.967396903 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.962670525 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.979924168 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.968799791 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.964546807 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.96287671 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.972063984 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.963498918 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.964231167 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.967569282 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.969481491 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.968183175 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.965510584 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.973019052 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.962167765 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.963795679 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.960282183 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.967207828 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.959324269 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.962295262 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.965866553 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.969593038 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.963378626 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.964775584 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.969341549 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.965288041 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.963985015 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.959180205 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.967776913 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.960037131 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.965803442 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.970102013 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.972312858 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.970524961 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.964314144 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.970381261 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.962167026 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.966663876 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.963126708 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.9781976 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.964183365 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.963194456 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.962795939 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.963870415 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.966100417 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.964453267 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.977367487 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.969728544 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.960836641 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.960225338 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.974368454 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.967154886 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.965750342 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.963702661 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.967080086 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.969311801 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.96664986 seconds)
  done (took 134.931247683 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327692652 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.325746145 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.326453942 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32649419 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.326756484 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.326718819 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.328307222 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.326829223 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.325884471 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327277238 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.326627812 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.32806249 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.327304409 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.328555998 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.328815228 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327366536 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.327436341 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.327958698 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327448702 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327714046 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.328545458 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.328431499 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.328022459 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.328004116 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327516694 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.328126766 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.327155343 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.328127298 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328028897 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.328311329 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329103505 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.328800034 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.328799258 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.328987465 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.329920526 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.329245495 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328232643 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329958917 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.330809443 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.329688466 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.328861885 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328606875 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328765966 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.329175331 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330015139 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.330054399 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.330174368 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.330248569 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.329813157 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329341554 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.32998736 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.330244103 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329640109 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331103541 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.331596131 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.330529642 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330133009 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333069876 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331299138 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.330552181 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330097057 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.332954251 seconds)
  done (took 83.626900671 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332932535 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.332218142 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.329496285 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.329912179 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.331777369 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330812099 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.332548617 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.331594092 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.332931601 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.333571256 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333151335 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330607302 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331756168 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334132797 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.330325741 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331056201 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33173207 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.330004257 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3340481 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.331718819 seconds)
  done (took 27.879666856 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.330634705 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.333196859 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.329454545 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331798687 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.333701651 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.331369937 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.335339261 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332839224 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330607305 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332833981 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.333428506 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.33455135 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330238335 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.330877299 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.333337274 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.33225741 seconds)
  done (took 22.561347005 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.332453084 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.334506619 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.333925275 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.333838014 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.332613882 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.332095934 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.335244505 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.331380963 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.332820125 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.335942443 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.334864336 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.335735272 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.334986162 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.335730218 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.334846659 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.33646486 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.33309172 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.332491181 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.33495301 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.335066995 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.332370492 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.335008588 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.335588412 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.334408662 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.332224172 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.334461623 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.333563118 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.333011053 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.33306358 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.337312001 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.332856615 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.333387632 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.334202021 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.332568887 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.335327462 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.33418169 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.337300483 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.335329494 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.337241699 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.334280022 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.336780735 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.332657196 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.33586149 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.337221601 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.334962358 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.336563704 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.334670961 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.334309898 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.333945008 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.334027312 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.33639105 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.336829835 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.335438345 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.335079679 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.336348608 seconds)
  done (took 74.647202614 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337350473 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.335837339 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.333233837 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.337567294 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.336927352 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.334570972 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.335818985 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.335578619 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333704227 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.336480848 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.335697715 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.337874006 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332463631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337183574 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.333985202 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337730801 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.334387694 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.334978773 seconds)
  done (took 25.288697928 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.334917572 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.33410976 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.337731648 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.335183331 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.335796687 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.337692412 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336971885 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.338288015 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337152595 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.335912065 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336000157 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.338771139 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338735524 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.339387532 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.337239292 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334270457 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.338829505 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336092645 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.334427424 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335998061 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.338091314 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33922282 seconds)
  done (took 30.659017466 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.335505209 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.337378127 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.33593501 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.354231328 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.357229606 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.336160249 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.338083619 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.336049309 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.359253912 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.392989043 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.388496572 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.357421326 seconds)
  done (took 17.475817831 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337421707 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338396963 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334649284 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33778961 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337882101 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333676706 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334548311 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335665613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337909403 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33564279 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335483318 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337304128 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337444615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335399559 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337912576 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337875556 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335609973 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336437992 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335529258 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338459777 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336349744 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3371203 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335711187 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33649882 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336447591 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336160982 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338189798 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337047787 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336773296 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338813007 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338924496 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336460174 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339191742 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335741856 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338579561 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339233612 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336335809 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339993484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339826425 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336960557 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.340003676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340534265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340315768 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337276897 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340793111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335804707 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338282352 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338027796 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337804425 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341178702 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339575856 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338533886 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339653256 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341459191 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340175429 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340632679 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339418147 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339555752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341067853 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338883095 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339945839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342329373 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338851067 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339467179 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341762799 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339844023 seconds)
  done (took 89.562438645 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33885579 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339698115 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339431111 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339817895 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338608518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339486473 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33926072 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339836989 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340657538 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339220402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342941687 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340455911 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339251032 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339668846 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340656574 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340175584 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340034402 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341555943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340799339 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343184156 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341708196 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34084049 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339956064 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340945022 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341464863 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343638838 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34092473 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34692067 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341252851 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340951902 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34192215 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340381322 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340819132 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.341367516 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341069252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341007716 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342636611 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341321682 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341960103 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34436117 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341679262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343654709 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342355709 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343406287 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342802314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3425674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342755417 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341350701 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342099753 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341097228 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341840916 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342975434 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341935112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34248133 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341790667 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344218701 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34171205 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344611164 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344279602 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346402818 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342674424 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343713555 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346579844 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34273072 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344489029 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343741415 seconds)
  done (took 89.813286122 seconds)
done (took 1854.724895362 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.510511329 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.463882314 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.345548041 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.355703062 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.346313303 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.368865509 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.359812902 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.346362332 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.345861849 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.34696912 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.344912796 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.534749117 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.341048007 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.346383209 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.345948899 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.44263671 seconds)
  done (took 27.402788386 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.38386901 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.352939268 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.478033734 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.372671813 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.376936697 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.553162334 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.410973095 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.350781044 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.539356653 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.39708283 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.353309297 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.37613299 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.351617368 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.341219069 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.371820993 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.553862091 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.619218026 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.357379875 seconds)
  done (took 29.800546476 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.848924321 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.354956217 seconds)
  done (took 5.461266896 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.372383079 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.351645557 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.353899195 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.350504319 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.343324785 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.360578801 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.350869968 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.360166901 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.349093015 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.493225922 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.354663895 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.36246267 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.373459023 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.353426109 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.349004257 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.39359991 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.522931661 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.350393883 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.347078501 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.35858652 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.351250456 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.438952095 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.396705484 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.349575718 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.489740908 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.342479853 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.378303702 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.359206258 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.479168735 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.349111489 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.350576395 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.353667127 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.352386826 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.30006324 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.881327352 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.344236887 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.396832586 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.361124945 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.348383491 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.485025032 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.352310427 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.358615556 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.355933817 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.876095149 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.524841773 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.478658896 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.367729521 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.359565148 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.354472948 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.418269991 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.351310336 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.354305545 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.396212828 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.199488345 seconds)
  done (took 86.568534793 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.346299247 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.343710047 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.526352951 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.366668029 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.344925141 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346572945 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.345870839 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.657448982 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.363579826 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.344965501 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.691675191 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936178496 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.370187096 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.387084093 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.200510849 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.402110123 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.345348877 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.362950403 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.346242348 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.349337998 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909277083 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354775504 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.343773926 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.475094087 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.389294753 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.884195194 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.34629228 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.349838342 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.344742379 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.344853453 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.888352883 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.370080443 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.404246667 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.346086716 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.624624651 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.747113509 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.704667258 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.353401141 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.35972362 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.34470034 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.355356012 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.864991461 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.721852575 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.345698793 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.342907399 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.872706185 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.345016378 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.350854746 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.346401461 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.598302666 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.345206673 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.345142184 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.361963456 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.346335216 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.342799634 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.453466055 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.41110989 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.87972828 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.345604443 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.344784124 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.378907086 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.346480241 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.345646799 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.349054358 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.366394187 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.724086623 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.488563932 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.346342701 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.726923929 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.875856026 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.363813661 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.948259686 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.363475733 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.368817103 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.567635261 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.345951876 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.345979173 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.889891612 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.368819903 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.347003174 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.706287694 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.348575134 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.683053833 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.370137918 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.345236008 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.920602505 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.355877386 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.430742935 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.345755377 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.347049176 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.366865832 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.351431931 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.635457861 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.376510763 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.34670237 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.348245642 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.386819449 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.348108841 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.347161191 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.356362435 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951139206 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.37259649 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.347493943 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.346592201 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.348356306 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.347095727 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.349751098 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.34907885 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.616079192 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.348163475 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.348376272 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.347848979 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.346992625 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.353523854 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.472734343 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.347087401 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.673485106 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.348486368 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.351584839 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.354368248 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.347467468 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.400921971 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.347407567 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.353745177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.224522871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.611813582 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.369340528 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.349802001 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.348027243 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.360112177 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.349143527 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.347644077 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.38712472 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.346860661 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122044209 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.379243629 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.360309747 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.347670639 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.355327042 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.347651584 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.347766573 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.347165806 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.641164419 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.6312062 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.486995297 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.349139954 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.349033675 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.103153326 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.381336456 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529871494 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.367526006 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.347099192 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.597871533 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.580283636 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.349387965 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.348458434 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.348169005 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610596432 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.348766407 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657956702 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.903434014 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.365326785 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.355409711 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.117462081 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.05169711 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.352456322 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.3468013 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.686231757 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.365659374 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.346692869 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.347200235 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.347338026 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.362550974 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.362323513 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.346758681 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.34848092 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.347599491 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.393217081 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.539935939 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.364387279 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.347510613 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.859212707 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.350371291 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.346249199 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.357253561 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.348760757 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.346456144 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.400325687 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.347062314 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.363105615 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.345507926 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.350360295 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.875337955 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.345812938 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.34677988 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.537234495 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03777535 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.368492122 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.347847695 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.369013975 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.237819518 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.919507203 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.380938186 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.656315951 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.351292513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.385448423 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.345826385 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.411061406 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.879307283 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.346690013 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.362309525 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.999610749 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.361660468 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.876989094 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.346168465 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.347472796 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948005557 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.364391427 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.350368564 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.344266186 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.346832888 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.639227811 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.344094211 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.358246214 seconds)
  done (took 502.069125114 seconds)
done (took 652.557934898 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.343070999 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.349058465 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.338251413 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.349257192 seconds)
  done (took 10.639356415 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.354204309 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.354285271 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.352385878 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.351308184 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.35343342 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.351644218 seconds)
  done (took 9.375125318 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.345951463 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.35082067 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.351294785 seconds)
  done (took 8.307040132 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.554407558 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.373544208 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.674222218 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365778421 seconds)
  done (took 9.228171972 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.356853616 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.356121929 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.355129696 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.355681606 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.357832319 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.360001769 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.35603535 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.35737476 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.35930149 seconds)
  done (took 13.474879662 seconds)
done (took 52.284371244 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.450688374 seconds)
    (2/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.46113277 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.507258419 seconds)
    (4/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370913451 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.425344605 seconds)
    (6/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.398570377 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.348903465 seconds)
    (8/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.528454896 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.393500354 seconds)
    (10/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.531184033 seconds)
    (11/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.477963889 seconds)
    (12/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.375208126 seconds)
    (13/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364079822 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.362520416 seconds)
    (15/286) benchmarking ("sort", Int8, true)...
    done (took 1.690471968 seconds)
    (16/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.387154408 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.364426141 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.454604817 seconds)
    (19/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.366595393 seconds)
    (20/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.55185893 seconds)
    (21/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.366665358 seconds)
    (22/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.362242569 seconds)
    (23/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.006888434 seconds)
    (24/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.364661112 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.553094574 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.477989984 seconds)
    (27/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.431202829 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.182499802 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 1.769893248 seconds)
    (30/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.433546099 seconds)
    (31/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.401500218 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.369336873 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.36336868 seconds)
    (34/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.219112093 seconds)
    (35/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.38003277 seconds)
    (36/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.439935156 seconds)
    (37/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.369578881 seconds)
    (38/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.366310733 seconds)
    (39/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.516486277 seconds)
    (40/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.079481298 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.385345117 seconds)
    (42/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.351091888 seconds)
    (43/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.383851392 seconds)
    (44/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.375011165 seconds)
    (45/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.365215631 seconds)
    (46/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.442743863 seconds)
    (47/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.497595118 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.391356136 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.484536168 seconds)
    (50/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.0231204 seconds)
    (51/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.377255523 seconds)
    (52/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.517689858 seconds)
    (53/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.138836898 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.404698664 seconds)
    (55/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.520165802 seconds)
    (56/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.383900376 seconds)
    (57/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.006871833 seconds)
    (58/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.35395691 seconds)
    (59/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.345135493 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.398129188 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.581524358 seconds)
    (62/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.37288591 seconds)
    (63/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.436606988 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.383029956 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.422769514 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.413378714 seconds)
    (67/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.440775312 seconds)
    (68/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.365393106 seconds)
    (69/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.358158491 seconds)
    (70/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.504869023 seconds)
    (71/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.364672591 seconds)
    (72/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.502682807 seconds)
    (73/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.142310424 seconds)
    (74/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.616660249 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.466454024 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.370074574 seconds)
    (77/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.369304966 seconds)
    (78/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.369674016 seconds)
    (79/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.409169597 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 1.54279212 seconds)
    (81/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.010567872 seconds)
    (82/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.354981615 seconds)
    (83/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.390798567 seconds)
    (84/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.554419139 seconds)
    (85/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.457732132 seconds)
    (86/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.525392868 seconds)
    (87/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.449473637 seconds)
    (88/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.373605413 seconds)
    (89/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.475235479 seconds)
    (90/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.378610683 seconds)
    (91/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.011360887 seconds)
    (92/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.379329233 seconds)
    (93/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.49559819 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.487198384 seconds)
    (95/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.374054024 seconds)
    (96/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.355370657 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.110149798 seconds)
    (98/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.035496545 seconds)
    (99/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.434388057 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.653629776 seconds)
    (101/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.513430424 seconds)
    (102/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.440878048 seconds)
    (103/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.386980058 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.378103152 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.383329098 seconds)
    (106/286) benchmarking ("sort", Float32, true)...
    done (took 1.937657332 seconds)
    (107/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.346595382 seconds)
    (108/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.379785436 seconds)
    (109/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.390768606 seconds)
    (110/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.373253537 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.408817788 seconds)
    (112/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.409331326 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.457214211 seconds)
    (114/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.374096581 seconds)
    (115/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.436782585 seconds)
    (116/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.358436782 seconds)
    (117/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.349359892 seconds)
    (118/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.511992586 seconds)
    (119/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.368870949 seconds)
    (120/286) benchmarking ("sort", Bool, false)...
    done (took 1.394423009 seconds)
    (121/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.366430835 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.412378489 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.386799055 seconds)
    (124/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.370858515 seconds)
    (125/286) benchmarking ("sort", Float64, true)...
    done (took 1.970730652 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.43152899 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.448490236 seconds)
    (128/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.392502026 seconds)
    (129/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.439569066 seconds)
    (130/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.363331614 seconds)
    (131/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.561926846 seconds)
    (132/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.358870278 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.47485084 seconds)
    (134/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.5023612 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.377100196 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.423996817 seconds)
    (137/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.362322355 seconds)
    (138/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.489957748 seconds)
    (139/286) benchmarking ("sort", BigInt, false)...
    done (took 2.374497689 seconds)
    (140/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.103332659 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.386145008 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.446758886 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.372769278 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.372906266 seconds)
    (145/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.374339659 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.457002291 seconds)
    (147/286) benchmarking ("sort", BigInt, true)...
    done (took 2.358883167 seconds)
    (148/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.376538017 seconds)
    (149/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.506207757 seconds)
    (150/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.460475175 seconds)
    (151/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.398405192 seconds)
    (152/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.414801819 seconds)
    (153/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.563725138 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.365116042 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.374216636 seconds)
    (156/286) benchmarking ("sort", Float64, false)...
    done (took 1.557982915 seconds)
    (157/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.351296294 seconds)
    (158/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.388697687 seconds)
    (159/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.369881863 seconds)
    (160/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.347064648 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.376899714 seconds)
    (162/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.515710127 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.373506534 seconds)
    (164/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.376900359 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.449728885 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.3482648 seconds)
    (167/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.401069035 seconds)
    (168/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.410700906 seconds)
    (169/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.377398409 seconds)
    (170/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.360478735 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.562243824 seconds)
    (172/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.443750905 seconds)
    (173/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.110759216 seconds)
    (174/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.383891665 seconds)
    (175/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.112078724 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.126594304 seconds)
    (177/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.369569367 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.382146876 seconds)
    (179/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.36154516 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.375583127 seconds)
    (181/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.375283555 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.437060367 seconds)
    (183/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.349908576 seconds)
    (184/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.391289739 seconds)
    (185/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.350204405 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 1.639021312 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.375867749 seconds)
    (188/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.439472749 seconds)
    (189/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.460084161 seconds)
    (190/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.447880726 seconds)
    (191/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.503381826 seconds)
    (192/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.397923675 seconds)
    (193/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.4471164 seconds)
    (194/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.501276963 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.027766391 seconds)
    (196/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.379221402 seconds)
    (197/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.350572258 seconds)
    (198/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.557217194 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.429684953 seconds)
    (200/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.692422355 seconds)
    (201/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.419288974 seconds)
    (202/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.01007528 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.393234006 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.455156447 seconds)
    (205/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.356523086 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.465178614 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.235019863 seconds)
    (208/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.381853144 seconds)
    (209/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.433174008 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.548883803 seconds)
    (211/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.438434191 seconds)
    (212/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.475421831 seconds)
    (213/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.372787197 seconds)
    (214/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.351559185 seconds)
    (215/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.397362759 seconds)
    (216/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.23490406 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.392149669 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.416500149 seconds)
    (219/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.376684809 seconds)
    (220/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38476682 seconds)
    (221/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.432382098 seconds)
    (222/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.389365091 seconds)
    (223/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.545992666 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.488784913 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.560292326 seconds)
    (226/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.445447282 seconds)
    (227/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.366539363 seconds)
    (228/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.105033642 seconds)
    (229/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.4122052 seconds)
    (230/286) benchmarking ("sort", Int8, false)...
    done (took 1.513775192 seconds)
    (231/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.120799951 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.509687125 seconds)
    (233/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.573964878 seconds)
    (234/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.459206322 seconds)
    (235/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.461063728 seconds)
    (236/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.071339789 seconds)
    (237/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.457300743 seconds)
    (238/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.470205293 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.569433589 seconds)
    (240/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.356967996 seconds)
    (241/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.385056361 seconds)
    (242/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.4662742 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.408942737 seconds)
    (244/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.401231296 seconds)
    (245/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.480642632 seconds)
    (246/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.397379148 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.536969709 seconds)
    (248/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.369414055 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.456483009 seconds)
    (250/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.380285826 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.372750629 seconds)
    (252/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.383627492 seconds)
    (253/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.370756501 seconds)
    (254/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.440031654 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.429382975 seconds)
    (256/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.381887645 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.698793866 seconds)
    (258/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.44159368 seconds)
    (259/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.403698617 seconds)
    (260/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.721253134 seconds)
    (261/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.188991157 seconds)
    (262/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.501831387 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.436322428 seconds)
    (264/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.422079789 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.567942075 seconds)
    (266/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.075020023 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.390890553 seconds)
    (268/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.391159338 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.389489086 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.391575309 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.397392155 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.391053183 seconds)
    (273/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.366404461 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.551243795 seconds)
    (275/286) benchmarking ("sort", Float32, false)...
    done (took 1.531308674 seconds)
    (276/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.409395144 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.376579551 seconds)
    (278/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.421312982 seconds)
    (279/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.407435686 seconds)
    (280/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.49619717 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.218406839 seconds)
    (282/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.512729986 seconds)
    (283/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.510650044 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.398245823 seconds)
    (285/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.377302815 seconds)
    (286/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.425952729 seconds)
  done (took 478.98886865 seconds)
done (took 480.25126119 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.415276664 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.426306003 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.38038564 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.41271727 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.492986231 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.557031377 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.390938343 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.420404011 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.430785106 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.43039464 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.388424088 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.557385278 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.383350789 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.382040126 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.383351126 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425280348 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.371866728 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.385332286 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.399788769 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.42108007 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.3987124 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.389405948 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.43301363 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.558158687 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.386733659 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.385675134 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.384553784 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.402010615 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.495908235 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.386798528 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.386669051 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.394036106 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.372503235 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.393406502 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.377404713 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.403666781 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.394178424 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.393031787 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.417803304 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.495866362 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.385163522 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.393592239 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.385807574 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.384928679 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.38461621 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.42316985 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.385646339 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.442001911 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425986961 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.428022367 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.384928639 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.402363904 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.393829579 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.385498876 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.396357597 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.385352404 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.442694929 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43078262 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.405362627 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.430583546 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.3745561 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.412532803 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.425459469 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.404898469 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.394169487 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.373902462 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.388962947 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.426103708 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.389021493 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.395192954 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.374590927 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.398642692 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.388206781 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.399336081 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.4192375 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.378382884 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.386319718 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.384912978 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.394930416 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.386873611 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.436714073 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.428585755 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.437894166 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.389038073 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.429644348 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.563357528 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.397801741 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.387866041 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.422258778 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.407463216 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.396432989 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.399149078 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.422915696 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.38930952 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.434316917 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.446511719 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.396853078 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.396460309 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.439650516 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.398572901 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.391407514 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439317403 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.387029437 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.385273705 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.389074499 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.510286471 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.391224538 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.394190004 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.421934803 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.438147883 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.447342161 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.376268107 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.41176937 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.434694667 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.399933249 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.449312138 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.391721784 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.377858411 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.383578646 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.532963899 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.391343956 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.39549633 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.436131982 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.449218975 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.39060449 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.383592304 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.396178678 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432602506 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.512278786 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.401939184 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.501132035 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.390373894 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.39516603 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.423983812 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.435884467 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.422563305 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.451946745 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437855537 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.407690131 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.391567434 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.402952327 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.402818278 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.391708179 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.449937364 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.389559318 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.424520966 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433702251 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.435396479 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.427003001 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.512432225 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.396295662 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.380436307 seconds)
done (took 232.257084748 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.454472514 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.389040058 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.489986586 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.388430169 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.500393915 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.491307766 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.387448492 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.386889423 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.386523717 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.768727013 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.38818086 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.386547806 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.389810522 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.386826945 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.471854314 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.389911872 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.386164897 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.73055494 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.388163113 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.463023833 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.382347892 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.387509716 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.389379555 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.773485473 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.389914349 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.388193728 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.465421403 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.39082844 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.737462216 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.386478313 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.389761406 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.739196938 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.483871055 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.408969393 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.401229069 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.396687575 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.506246354 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.408488352 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.473519846 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.476057295 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.494003516 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.429492707 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.386260626 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.384251263 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.392216252 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.393856477 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.387797807 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.417840245 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.392088563 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.388051971 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.73314299 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.399783205 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.39933055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.39032658 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.389443134 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.411054193 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.389466311 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.392268564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.485861084 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.392632916 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.458749816 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.775284756 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.773929973 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.393076526 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.392023098 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.390576607 seconds)
  done (took 108.324475155 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.460530775 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.469392717 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.505679403 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.396954335 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.443555213 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.511113165 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.398094996 seconds)
  done (took 11.479842909 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.399183253 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.394984687 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.444169718 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.443784214 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.39242863 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.607603912 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394006598 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.406064847 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.392107993 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.469614015 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.394598346 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.396305522 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.40130294 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.390413682 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.443247946 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.405235908 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.515090479 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.396384261 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.394142236 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.547939115 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392539073 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.402449071 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.468892779 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.406356642 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.395512663 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.404167576 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.360762661 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395511982 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392983212 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.396095889 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392413126 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.507169598 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396919202 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.393384705 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.393712635 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.556705775 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.395537389 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.394613671 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.396723979 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.388469494 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.396924039 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.396607427 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.397456665 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.395560004 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.396748381 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.421449501 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.397868013 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.396506236 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.398475511 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397245233 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.470513051 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.398649058 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.394666352 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.395277504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.474243572 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.404326556 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.398297926 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.393861569 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398314351 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.395956878 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.551771936 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.446249626 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.398095112 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.445330424 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398904551 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.399097255 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.398282842 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.398067255 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490279767 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.398643898 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.446757133 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.395788702 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.619051766 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.422903573 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.400614639 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.402089938 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.402275006 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398555773 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.395190676 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.40574859 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.396484317 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.400969985 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.405451965 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.397271022 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.397101711 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.583609536 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.558300911 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.396991903 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.415114345 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.408371138 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.397169575 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.474012843 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.400054329 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.398660976 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.452069086 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.519928291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.477332405 seconds)
  done (took 144.370385067 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.405925242 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.409312458 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.405303597 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.423807992 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.402320741 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.401864822 seconds)
  done (took 9.751231176 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.403584376 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.402857201 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.402276606 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.402184547 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.400738389 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.402345296 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.402727404 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.403806782 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.405009985 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.402135382 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.402171367 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.401461295 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.40178174 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.401307577 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.402642198 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.403260969 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.40389532 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400902459 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.402800296 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403023822 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.404805908 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.403689027 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.403716728 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.405897458 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.407205223 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.403163795 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.411447562 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.404519547 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.4038457 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.411511568 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.424257806 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.403881307 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.40529203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.409533858 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.408581629 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.405361541 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408365841 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.405277584 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402753047 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.4058204 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.405351718 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40512046 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.404730225 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.407063998 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.405675907 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.411182951 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.409023238 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.415678742 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.40526229 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.406318867 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.406216698 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.404583385 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.406725349 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.410673809 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.408444815 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.428204908 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.409753684 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.405255257 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.405258208 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.40861184 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.407447159 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.40635265 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.410160913 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.410546866 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.404995988 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.407964318 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.40880308 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.411354484 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407215015 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.407564418 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.408557176 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.405867886 seconds)
  done (took 103.559698164 seconds)
done (took 378.77655018 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.827684959 seconds)
  done (took 4.136073834 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.514466087 seconds)
  done (took 3.821656076 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.522975887 seconds)
  done (took 22.840544793 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.471877163 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.435632224 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.411721685 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.412247671 seconds)
  done (took 11.040246405 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.635622231 seconds)
  done (took 3.945151765 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.400699092 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.418250734 seconds)
  done (took 6.130741236 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.724370457 seconds)
  done (took 4.0334376 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.875969155 seconds)
  done (took 4.19541772 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.42587638 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.417214616 seconds)
  done (took 6.160566147 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.389766566 seconds)
  done (took 3.699843019 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.321696326 seconds)
  done (took 17.63192202 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.412275076 seconds)
  done (took 3.72434808 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.452685677 seconds)
  done (took 3.762374658 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.969451739 seconds)
  done (took 6.278720234 seconds)
done (took 102.70935683 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.402390304 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.406839074 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.404803189 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.408929931 seconds)
  done (took 10.931444152 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.443288676 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.463949551 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.444205507 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.454834238 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.45580019 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.444044445 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.434780604 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.434903494 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.454280037 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.451858899 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.44595645 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.445474488 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.462002798 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.436655464 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.446294119 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.446252054 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.455683715 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.446062999 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.435801117 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.446593065 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.411583063 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.45815528 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.446962493 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.411675362 seconds)
  done (took 35.987552706 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.927956985 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.482706561 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.564538393 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.462734873 seconds)
  done (took 7.748707983 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.489338589 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.481076172 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.488925823 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.527207237 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.553319126 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.489715447 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.437614697 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.433047215 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.420655862 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.490313448 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.546014948 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.473598438 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.560515781 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.412328325 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.621383567 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.413701176 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.412956198 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.491402019 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.529598163 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.54164052 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.412829689 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.472680954 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.490462081 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.473963255 seconds)
  done (took 36.975601187 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.4118537 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.424863297 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.411148584 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.411598137 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.419665263 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.411306612 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.412210766 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.413148328 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.411561043 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 2.083134413 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.413427146 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.425883398 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 2.084292943 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.413634948 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.419840799 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.415269179 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 2.089300882 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 2.080084314 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.414654985 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.419871411 seconds)
  done (took 32.300375867 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.407355357 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.407373737 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.758965833 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.664248853 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.408540631 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.411404852 seconds)
  done (took 14.372215108 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.488873755 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.63046115 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.418283191 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.772981728 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.852799359 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.418138009 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.416831009 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.66409505 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.984885222 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.965567609 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.477181435 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.485268788 seconds)
  done (took 20.890468359 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.4147057 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.413650409 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.413028308 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.431253349 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.472331517 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.42133933 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.423348097 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.41023315 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.475418737 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.476176318 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.421016188 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.472958303 seconds)
  done (took 22.562568957 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507013645 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410172719 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420338998 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418483341 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410608752 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25518259 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414293881 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.121853813 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.433938454 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685791742 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41244269 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509210854 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667531983 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412692476 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415890115 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.399779591 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645797651 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911722137 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418687394 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413968545 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451681309 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426375782 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417044089 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625317286 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416975592 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413602596 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.713719131 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412275194 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701971243 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430704501 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424927963 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412215919 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690843697 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074622195 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531861264 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622402054 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450763641 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412841566 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.416165352 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.414100828 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425932436 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415572426 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425254592 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413724369 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412782883 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413017209 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1514716 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.437944634 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.412264826 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412687799 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679352895 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517475597 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.41904793 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414453882 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440093646 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432549858 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.418573972 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412656894 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001013972 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421626694 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417144968 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.417302663 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.442509979 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41886522 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049476953 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.422064321 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.420707336 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420290783 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416321891 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417780053 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433441069 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416429031 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.441480733 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416070781 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15602065 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427096872 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41814821 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970441938 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419556402 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.420543321 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648727022 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416612998 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416954556 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.416737075 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418243884 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134770004 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430777328 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.404205417 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435936562 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13082509 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650436299 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43899958 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449971289 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642304856 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.404616432 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417248748 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.418764119 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419962037 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442049767 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134269706 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436908534 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.42303413 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676940648 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.630333277 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419263949 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.42316488 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904292378 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437002051 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.455623709 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418665409 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634451308 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.016591531 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441857114 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427626337 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440457027 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420063688 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190276027 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429240865 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.52552268 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426353125 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69847268 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.228003223 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426927527 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48918744 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425611018 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420628062 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428522516 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423157655 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420384503 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.626505847 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448113627 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.437526561 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.422434664 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42252571 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.42732675 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439629911 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.423226883 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644556653 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426577556 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703870292 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422146049 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4211362 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421906456 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.645364927 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.419926625 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.759684245 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686053282 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42073798 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.443124952 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453332415 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44308564 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525421164 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450035384 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.426552533 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.678823561 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.428211989 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.426592716 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43105407 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424030029 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430465184 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.429238752 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440757981 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021423586 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401774323 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433409004 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314053149 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.438480604 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492552158 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42958704 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63884068 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.426147379 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446107864 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.430236092 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.434468369 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654057345 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435535453 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.433484161 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50311318 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.90295976 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040972864 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438401735 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.423745824 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.423008741 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.421521818 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425489697 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425664553 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.425514283 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637744293 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446747561 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.460260146 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027866504 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429282329 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435569026 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.432992479 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439115489 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.431448477 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426633791 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.435524848 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441722359 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436655704 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.442936751 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571091711 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.442097267 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426663367 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.943425991 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.433827774 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.42742028 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426699615 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464251712 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438060075 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243517948 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693162253 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464929558 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695276907 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43720297 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.444331492 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.426868492 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432536816 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439504012 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.440505528 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457853783 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.440776318 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439620795 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430318531 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010789338 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17922244 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983915541 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432348403 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.439084927 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432702564 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151224159 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448500301 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429457078 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668100938 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154308853 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448141243 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912452355 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.448173947 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202638481 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702145912 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664885622 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431205405 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.439410098 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700509869 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644040429 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465810996 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438732204 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435328428 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.417931068 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990111401 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450061866 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511737743 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154103257 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455522158 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433546881 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.47453499 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.446054102 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843896363 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451130526 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432293761 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.440362706 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.449962695 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243753568 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.440700806 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432846553 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070711008 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434563052 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.9198859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453860238 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647775446 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.450966276 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.441232943 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.430779159 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.436155586 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.693473839 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701613915 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435571189 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432529122 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996241409 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.302073968 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.438491176 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433619 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190622665 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441424235 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731814896 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.442819596 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.436698378 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440767969 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435176422 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433913042 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.431015832 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.440895722 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410957878 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930920513 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.470644376 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456795377 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439414951 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439134495 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69020625 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.449737416 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038676273 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666590598 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436189449 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459178634 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.439913496 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43570505 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.444852669 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434906713 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436478305 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452777777 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678338997 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449624774 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.42416095 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442979399 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648738867 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.435582678 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.451033723 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680403556 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.437976011 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.444751254 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17784538 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469972987 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.45081605 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438493275 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460727276 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438058931 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507121497 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651923231 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.454130341 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.446994185 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846476108 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461648235 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460494116 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.450590609 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534406641 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4378605 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.455538051 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.217173059 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043397373 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221578601 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047643505 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710738688 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4401757 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439443414 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439037312 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60165454 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438886052 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712649403 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440415011 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.441029225 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461265049 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45497729 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44632045 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655127586 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7144986 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439017751 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441657131 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444601828 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.440118361 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451330609 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.654433029 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94389845 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006207809 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442755425 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.441807987 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.168696062 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733853576 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440637419 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441073099 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440551939 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.451450047 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.442341305 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.466561953 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442203688 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584974702 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708128562 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116244838 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.470160678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.47038134 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.214933494 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441343836 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.715262721 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439654087 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.660072699 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047139641 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.16719667 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71436841 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512690533 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657284358 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.445888063 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605712064 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.438625692 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442993286 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442314452 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44319518 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.439089434 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.45319994 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050314937 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715064183 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.446921639 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.440111807 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47508684 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.45474335 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.666782706 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176536896 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.672883785 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454136842 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.449516616 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.443255013 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048805905 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718500528 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449524842 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.447973582 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685303674 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449939036 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467921251 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.961325143 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.441338835 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011822584 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.450746315 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466446332 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44260499 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174887777 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058554096 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.452583381 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954739789 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45186282 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447420155 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724027787 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.451158456 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445861114 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726573354 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.451026597 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446080112 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686203256 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.05511752 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2317468 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.474045483 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451952241 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.452571352 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447102087 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461248617 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448069963 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448979393 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.873327938 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472629803 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447622964 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458817231 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.447392852 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450636232 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.449728205 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4480495 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.454170905 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.439081789 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.452240512 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.455422777 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.452333272 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012699961 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468298187 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.119807234 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.772894006 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.70373649 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454077525 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.439794583 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.452954455 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448703245 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448239578 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448751971 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.450423922 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016242609 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.46201517 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.465399463 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.452073538 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.66530621 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66047023 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.449577486 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666428497 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458320822 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47046388 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.436873059 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45020968 seconds)
  done (took 1007.969272071 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.485574897 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.498096018 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.496819291 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.47734833 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.509671693 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.578646461 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.531181844 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.483477025 seconds)
  done (took 21.413636296 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.450354225 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.464369636 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.464232327 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.465747535 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.452616806 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.932561239 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.467237032 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.465584828 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.461699045 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.455122963 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.456440683 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.451686345 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.460016778 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.449607878 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.443687443 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.462947994 seconds)
  done (took 34.164708609 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.474060706 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.630770812 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.438743463 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.529721308 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.494752753 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.454773376 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.717550119 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.478948334 seconds)
  done (took 27.572998093 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.460171488 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.460729716 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.463230877 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.461356397 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.462074296 seconds)
  done (took 8.660401696 seconds)
done (took 1282.861023097 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.454316679 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.456694841 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.454121627 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.458587275 seconds)
  done (took 7.175806167 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.439550906 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.43937808 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.440030935 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.456875888 seconds)
  done (took 10.129760424 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.173008937 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.096812353 seconds)
  done (took 5.62375143 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.966633993 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.956922787 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.967436728 seconds)
  done (took 7.24573134 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.758149806 seconds)
  done (took 3.112617521 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.452040656 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.371728472 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.23521984 seconds)
  done (took 8.413931482 seconds)
done (took 43.05531777 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.457596986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.797322402 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.60833783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.452023093 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.631679206 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.608673458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.192194972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.460935179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.452692043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.477768648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.451237576 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.631952854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.240417685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.795867058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.24389782 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.798178681 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.615287701 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.453501177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.45882418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.464580458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.193985724 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.462288084 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.453087606 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.464489988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.620823234 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.601408713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.46370721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.796702125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.453579202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.475693377 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.605479579 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.454848973 seconds)
  done (took 85.694552686 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.455223537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.468303717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.454385927 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.471701819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.480083754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.47183408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.454988537 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.453631872 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.485436689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.459089486 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.455279572 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.477867661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.457017564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.454824165 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.456788429 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.45576011 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.467811007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.459913335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.455920421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.45801864 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.456215835 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.455307414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.477026097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.459371824 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.461005923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.457876974 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.486665209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.456074086 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.455702419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.456978271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.481414048 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.476288798 seconds)
  done (took 80.191369006 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.457497773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.457731011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.458731069 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.457645676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.465414554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.457674451 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.459686142 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.457176537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.458822213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.457760534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.456081023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.461912674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.456798652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.459507948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.458543855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.45715658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.457846459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.45889977 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.468860537 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.458121182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.457075405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.458930974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.458430507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.475651818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.458720028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.461384736 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.473218392 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.459130722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.458660875 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.458788109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.476329107 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.467844688 seconds)
  done (took 80.105259771 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.737286244 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.466276687 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.466858053 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.459698327 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.466907249 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.466737935 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.460507141 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.741079027 seconds)
  done (took 15.62668839 seconds)
done (took 262.973373297 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.458292756 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.477082849 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.685108737 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.487971253 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.458519435 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.506824905 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.488568184 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.68780818 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.426372756 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.706630769 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.47848546 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.484080542 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.459879782 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.485026044 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.745655159 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.614468888 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.431144571 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.462069042 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.810685178 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.494807935 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.735999263 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.46189107 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.763137664 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.418708292 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.480727275 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.46879362 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.470969023 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.412421012 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.505164664 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.815906471 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.487321332 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.455551119 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.556148383 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.570256412 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.682951234 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.625290704 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.473923498 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.550352593 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.694088426 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.4633675 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.462021802 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.231101972 seconds)
  done (took 86.99811759 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.469605987 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.585901878 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.468371714 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.46880181 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.471331905 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.592276121 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.56605545 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.470742154 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.469711912 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.470377741 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.470019253 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.470934221 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.470264606 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.471522635 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.471276379 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.470912152 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.471333866 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.472122582 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.472175694 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.517196902 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.595394893 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.493922427 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.466773698 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.472450796 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.573691038 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.606015061 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.471956511 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.467152435 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.517503032 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.471762651 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.4730391 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.519945568 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.473130483 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.472021492 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.588942605 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.575975181 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.475449363 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.471026643 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.586748826 seconds)
  done (took 59.930632219 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.473405343 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.732944265 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.904746563 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.47231477 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.474048562 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.477843124 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.553394923 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.47494022 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.478205989 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.478296542 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.650669254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.478627648 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.509036315 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.934636383 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.478912325 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.4741507 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.475124939 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.476088196 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.743291307 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.484754511 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.575340027 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.476164764 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.557237443 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.484848242 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.498996461 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.476521512 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.481411888 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.048121389 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.477502321 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.649307901 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.296885306 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.558836876 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.026338785 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.922165891 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.296702855 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.482568437 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.477400041 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.65461114 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.479737324 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.477428908 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.557977914 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.47901396 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.918377938 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.13891077 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.498092914 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.478739394 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.072013855 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.654239471 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.728770002 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.492028286 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.944505579 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.482126615 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.478834928 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.479724101 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.727324423 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.485203879 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.479465534 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.09240244 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.502086429 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.558070462 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.481775349 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.48070575 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.746109473 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.481037915 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.740792674 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.481608566 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.487344496 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.501582134 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.919014917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.483377741 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.155968568 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.499142439 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.481139356 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.653529437 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.739197903 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.10849933 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.501466074 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.747610782 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.03869789 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.558564892 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.485400277 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.044329295 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.561731434 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.490350475 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.484325943 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.484370398 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.481350822 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.52736155 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.558956823 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.116993696 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.152215662 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.116486731 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.581318272 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.491669107 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.482468428 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.09745215 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.500607944 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.482534401 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.916687183 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.155085325 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.501267335 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.490323519 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.167101981 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.504443303 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.563606222 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.488593294 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.928212226 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.484726095 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.528733076 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.484382114 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.490250611 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.508920599 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.565165098 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.488866839 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.484275775 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.142960401 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.680640824 seconds)
  done (took 194.246627641 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.478114655 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.476873103 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.476864337 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.477722469 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.477828378 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.485540518 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.476891314 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.477109692 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.483370882 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.478844068 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.477349662 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.476719963 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.478830986 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.480007884 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.489066515 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.485748328 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.479526152 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.479799742 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.479209694 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.479867572 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.478462133 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.481321217 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.478560636 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.479952516 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.479735356 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.479998738 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.482208746 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.482461481 seconds)
  done (took 66.816680589 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.487857344 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.056837234 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.488065838 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.622203986 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.509699793 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.483938912 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.618525841 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.545023107 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.488432217 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.483131575 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.484567882 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.793293746 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.488558275 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.009041334 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.683908514 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.620314711 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.00708113 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.506123741 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.485947771 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.486273108 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.621386497 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.501865381 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.794911838 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.059887182 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.490133324 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.059632779 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.480271296 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.487612835 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.487387306 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.060552839 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.486487635 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.795826455 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.566610853 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.549336387 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.062088242 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.01338959 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.033370527 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.638186972 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.488700282 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.486335588 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.486783928 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.479376721 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.063912648 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.490352777 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.489944279 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.05997227 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.506107989 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.490223973 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.507199144 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.486843181 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.550037321 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.552066236 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.800306238 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.068358621 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.567545202 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.534207016 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.623273642 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.828822852 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.491862517 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.010571867 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.48105896 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.071003803 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.510262911 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.48224932 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.489637632 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.494388106 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.641811069 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.622491958 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.014737598 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.509683951 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.011429366 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.659682586 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.488906587 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.489537889 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.491481051 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.069041774 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.014247208 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.659972317 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.626956527 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.692498697 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.489978842 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.490882127 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.484973996 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.569758914 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.490637544 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.072856578 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.031545274 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.509919626 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.494361785 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.493020799 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.49471235 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.673328177 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.0946304 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.571449852 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.011362135 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.823220327 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.804077638 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.494259237 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.553019918 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.509807679 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.806188166 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.495638033 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.552079593 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.888263783 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.810292364 seconds)
  done (took 176.215250108 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.734109284 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.510873179 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.584124202 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.644180165 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.133435398 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.087167325 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.491115429 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.619362843 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.603829726 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.76637792 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.491964759 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.582386124 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.707620124 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.56971747 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.201720832 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.564889629 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.588544465 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.65746929 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.639090253 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.48893707 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.184618595 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.788513827 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.686128786 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.510671143 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.598642125 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.282596653 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.078021138 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.111049985 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.670664085 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.490008058 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.046871552 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.491782905 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.467391063 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.172438613 seconds)
  done (took 68.632411296 seconds)
done (took 654.200445534 seconds)
SAVING RESULT...
DONE!
