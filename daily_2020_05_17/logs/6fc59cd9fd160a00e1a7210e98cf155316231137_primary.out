cset: moving following pidspec: 8129
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.25118681 seconds)
loading group "string"... done (took 0.675512031 seconds)
loading group "linalg"... done (took 8.164768391 seconds)
loading group "parallel"... done (took 0.168425784 seconds)
loading group "find"... done (took 1.335021181 seconds)
loading group "tuple"... done (took 2.015936639 seconds)
loading group "dates"... done (took 1.3348374 seconds)
loading group "micro"... done (took 0.279269654 seconds)
loading group "io"... done (took 0.932902285 seconds)
loading group "scalar"... done (took 40.777264093 seconds)
loading group "sparse"... done (took 12.507958443 seconds)
loading group "broadcast"... done (took 0.992007139 seconds)
loading group "union"... done (took 14.764550948 seconds)
loading group "simd"... done (took 4.986646709 seconds)
loading group "random"... done (took 9.945307094 seconds)
loading group "problem"... done (took 1.710472334 seconds)
loading group "array"... done (took 21.74078087 seconds)
loading group "misc"... done (took 1.730313783 seconds)
loading group "sort"... done (took 3.38358356 seconds)
loading group "collection"... done (took 18.537728636 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.549895994 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127897588 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140938425 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123517282 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153962181 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117743558 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128443184 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087289019 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.87197435 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148175545 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117723227 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422525139 seconds)
done (took 5.393532419 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17368754 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087668711 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081202763 seconds)
  done (took 1.23408579 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067869987 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12783744 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068814423 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069423275 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072330226 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068948663 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06856121 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068617174 seconds)
  done (took 1.608997408 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073475943 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071835761 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069209226 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070613989 seconds)
  done (took 1.350818026 seconds)
done (took 5.511961471 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.805847936 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215535435 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189996619 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.418604383 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138856759 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183577948 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646024702 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325019573 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193383047 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09779187 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116671381 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.401445058 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127095491 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.657496577 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078461837 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099058729 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145990375 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452057366 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072047279 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087383031 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096224231 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131940489 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083419071 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080309095 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.155727736 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07134421 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148229706 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085571826 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069200476 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.262736051 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177194477 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.674331454 seconds)
  done (took 10.594104037 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10294186 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100577474 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071421608 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128910698 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098871265 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070987314 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076217459 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070625491 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09322305 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133471254 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092269269 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110933871 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068548624 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072293955 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085982249 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201837512 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080702994 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08461502 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073694097 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081089796 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111250697 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078567301 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081757001 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082864882 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136464658 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16994802 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096914413 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09854313 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069894623 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084340883 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117712788 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128993479 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067019445 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067622733 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128638327 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09610083 seconds)
  done (took 4.623260216 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.017685377 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152302489 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093251801 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13919006 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067478206 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112489588 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067496489 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085976834 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243545951 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.376014825 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.632982897 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.148853225 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120309702 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104793478 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073257201 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071871458 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073213018 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.282948677 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1026935 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116729754 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086348623 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073487055 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072632321 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068178967 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074541989 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066094217 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071630647 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09088539 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078433106 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334784989 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129286097 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070892217 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.957615825 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.17137609 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070129399 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108788897 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169214366 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097985359 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145367193 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0697777 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065888646 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.302885335 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06756178 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074494807 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06929458 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088408898 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113426202 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121730453 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068043668 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068612466 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173220734 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068156056 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084152865 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.220111275 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153023005 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066540193 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300822261 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098620315 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074536603 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096806537 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067347477 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.19728145 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120059261 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069853119 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070358573 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071659778 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066828706 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071066893 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370450452 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068673722 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.915582934 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071869695 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079809859 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07338274 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074185563 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081988356 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082063652 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094164218 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069511184 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076689926 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069247968 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068124546 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069129828 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095786917 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.399055233 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069476333 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07483055 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066473474 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067173469 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094953655 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101084184 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072321659 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067748969 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104395789 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07083613 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06826339 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069952707 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121901109 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073148606 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11441971 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069550716 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.185826708 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098298107 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07101504 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103997206 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067728577 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081617696 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073586025 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.47139273 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066272671 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073817169 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06827379 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0704038 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069636047 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081550368 seconds)
  done (took 22.109524293 seconds)
done (took 39.410448724 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.249643849 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085694824 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086504666 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086306779 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086405222 seconds)
  done (took 1.743088914 seconds)
done (took 2.877729332 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12941434 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102903053 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066490192 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100913334 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0667743 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110037982 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101967918 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08428904 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100016799 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066522323 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101409459 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066419949 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06664311 seconds)
  done (took 2.312807432 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084867312 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085197766 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071233041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084632941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064696331 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084085571 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082841201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090502707 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082788395 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074557696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064403314 seconds)
  done (took 1.99530095 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084130795 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085250012 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070920668 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0836458 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064631248 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083724349 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083006761 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087107405 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083211573 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075591589 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064470269 seconds)
  done (took 1.986929834 seconds)
done (took 7.416724393 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07826937 seconds)
  done (took 1.187533006 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.541839392 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.582103596 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079056719 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100608809 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197935224 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11212874 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.239217201 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086005717 seconds)
  done (took 8.229866525 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098430548 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083356248 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071462176 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071684082 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072594148 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072484112 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07265945 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071253731 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072535741 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07293957 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071640524 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071902399 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071741832 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071021373 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072462576 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071674094 seconds)
  done (took 2.39327148 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099410571 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098231881 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07613861 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078058426 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074970055 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074644131 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077230371 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076088982 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073488222 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074781739 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078083074 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076156637 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076037214 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066617098 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076476162 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079042194 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073954731 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077111774 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077331338 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078295685 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077681767 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066003423 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076425589 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076744343 seconds)
  done (took 3.088119808 seconds)
done (took 16.019029543 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106505376 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069738946 seconds)
  done (took 1.296186729 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08084941 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082595252 seconds)
  done (took 1.293740048 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077807552 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064521976 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086443327 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076388154 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065468324 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065316799 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084840553 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065204248 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065357935 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066241736 seconds)
  done (took 1.849711971 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067183639 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075787266 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071413214 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081478781 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073015741 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066638433 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071831188 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067523957 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076518291 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065759576 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070213381 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085757347 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070252551 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08701232 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071384472 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070858959 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072210955 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069002239 seconds)
  done (took 2.448670271 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063759934 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066507821 seconds)
  done (took 1.269078745 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068279343 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065444862 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068371963 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06784112 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065628267 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064233447 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065186546 seconds)
  done (took 1.598002411 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407329234 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125992724 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33779302 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072459748 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083014984 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263385602 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066336981 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071761034 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071804987 seconds)
  done (took 2.677359394 seconds)
done (took 13.57323757 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082968157 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088573338 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100289534 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418221166 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095919496 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070552434 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115795015 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184789903 seconds)
done (took 2.307382637 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218779897 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.824863027 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.496324202 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213948312 seconds)
  done (took 2.673179911 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346224856 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.199903592 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078691975 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069434401 seconds)
  done (took 1.844584398 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06923186 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072386216 seconds)
  done (took 1.286077956 seconds)
done (took 7.166281298 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067260769 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066088644 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091249745 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066640898 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066665784 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066043071 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066751417 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066357762 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066070754 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066720702 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066219088 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066475751 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066514302 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067157347 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066713293 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066629431 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066339752 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066503126 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06646611 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066653347 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066251684 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066907918 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066665003 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066235233 seconds)
  done (took 2.798429699 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081886745 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068993863 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071101544 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0706984 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071280484 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070782764 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071310358 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069254156 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070962279 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068541156 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071127135 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071426575 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068410909 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071388351 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068688529 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07174255 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071122942 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069169152 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068840694 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071257183 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07036164 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069075858 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071159875 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07055978 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071189567 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070863556 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068588914 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069434875 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070486864 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070953882 seconds)
  done (took 3.278206013 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065416291 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063237351 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063942735 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071794718 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063020912 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063719285 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063331806 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063640275 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063838327 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062890009 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064046351 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063258235 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062638254 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063576738 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063735937 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067104263 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081243789 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063374921 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063075164 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063461813 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067730097 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063246833 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063399095 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062690711 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065625981 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062685065 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063435273 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062681748 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063488984 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0627125 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066693961 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067286667 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063137907 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07166837 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06740983 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062694098 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067045295 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062854726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063296081 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062503456 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062728469 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062878373 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062900267 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072281401 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063377661 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064571458 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063322327 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064275301 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063608586 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065073956 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062592189 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062567488 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06479116 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063823531 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067858769 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062658358 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063932289 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0628341 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063562462 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063344906 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062926052 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062952464 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066206855 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063670707 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080847115 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071972638 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062811794 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064395074 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063604067 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066464372 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064361021 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078591851 seconds)
  done (took 5.843378877 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086043239 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091457107 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068926063 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068263181 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064052375 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06433551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072294446 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063761788 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069288974 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083500988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064197236 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069039412 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068689143 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068002465 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064227326 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069213174 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072992082 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064114077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063581306 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067888774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064226886 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072230033 seconds)
  done (took 2.711613207 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150328853 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06975847 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109474628 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075356429 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072549092 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074862842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070098677 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0697985 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069877992 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070654275 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07050593 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069890273 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07260629 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070227823 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070391622 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070557731 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069817569 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070041452 seconds)
  done (took 2.556153666 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078538445 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068922742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089591825 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069076636 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069370535 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068741078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073643647 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074547523 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069376437 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069325412 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074164087 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068930092 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069360133 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069482115 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069322762 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069228133 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069199996 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069054997 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074307012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073424448 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073294716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074293261 seconds)
  done (took 2.746420946 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090165256 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067817962 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084932864 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070298783 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063766779 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063409395 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069655575 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068452368 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069578633 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068227922 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06826259 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063519526 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070948354 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068556444 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070858008 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068711804 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068790944 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068505982 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06827467 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063784091 seconds)
  done (took 2.555184444 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086963269 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066848854 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066731917 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073351252 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067113948 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066938049 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073850164 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067022367 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066894121 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088120811 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067068556 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067672744 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0732675 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07084881 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066778126 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073615252 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075982775 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073395534 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067089011 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067152874 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088293789 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066944334 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073572809 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066770439 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066778365 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067182695 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067098601 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070945583 seconds)
  done (took 3.155032109 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067562086 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066400975 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066338947 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06630837 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066784906 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066536271 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066643286 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066527194 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065912198 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066846531 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066071034 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06617492 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06646899 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066210132 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06652163 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066906699 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066679105 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066738439 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066645591 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066945218 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066391464 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066134556 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066667173 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067198202 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066373013 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066283964 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066486684 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066407115 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065755918 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066332169 seconds)
  done (took 3.160816982 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077694152 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075761969 seconds)
  done (took 1.318326361 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065740433 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08118221 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062750254 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074115345 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072374466 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066856673 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073629456 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073204916 seconds)
  done (took 1.729077835 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087765426 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078248048 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066263987 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078276918 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076976547 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086934784 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128648073 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065842432 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076567068 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066635852 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084144719 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067632547 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076075902 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070739315 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076111422 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079375537 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063130425 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070950796 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067218434 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064027519 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066146663 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079453149 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075570463 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064124041 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070720998 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093441293 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082393593 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065223486 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072359665 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077904152 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075811942 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062538803 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065282731 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065870507 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063455362 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076594569 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085009891 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072711959 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078442659 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066015766 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074542238 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063451263 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074154035 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076362401 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08159152 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065416191 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065727866 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063046839 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066420268 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071970868 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063243354 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069738897 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06290329 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077883746 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0732749 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080906745 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064331993 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071129565 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072481566 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072759952 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076874486 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071409222 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075072759 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064876159 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081760202 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07507076 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077721754 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063131782 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062288889 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063870722 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079498431 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094947538 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075276536 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065910285 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065777206 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063205667 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07261557 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065835166 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075061972 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076888122 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065003889 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070280192 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077536325 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070588911 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072121456 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072107012 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063697764 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069202695 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06644249 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085855256 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063724385 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063192947 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066536484 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080858616 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074924387 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064651589 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066558659 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076802827 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062018732 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065092231 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06616398 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07149698 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078688227 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069508961 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068756568 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077903537 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073497135 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069912907 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071219114 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061545061 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064869795 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06702801 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076094088 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061887935 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071227124 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068516266 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064158292 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075801295 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063092081 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063682804 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076296275 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075743951 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062552555 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061241122 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070923829 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063820799 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066092948 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077808283 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062770971 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063048633 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061748935 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071419613 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063920908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072107054 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067340834 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071318352 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061844994 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.191046461 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071269193 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079510709 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069427635 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072153558 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076207756 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072151876 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064851255 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078503973 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073248592 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068108877 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07590994 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070067443 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063620682 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068086235 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072343135 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064829247 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073011957 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068147327 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072944413 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06604483 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064220113 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07258453 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066461642 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06772815 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070657249 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06448145 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081156986 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072206262 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063223415 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062885584 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073246405 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066687573 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064803059 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067414698 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071885357 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065777399 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063868835 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065013047 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071623915 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074050005 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06888847 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066388466 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075039172 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083275742 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06477658 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072977846 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064836151 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066384538 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066741145 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07994918 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076270999 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07023092 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072297796 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062987957 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075499906 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077620884 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067808951 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063612773 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06765518 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06925747 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077280891 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06976248 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065767707 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064137152 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07175231 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067775533 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072248735 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065191178 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067974684 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070932264 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064261606 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071541205 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065980287 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080043403 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073043529 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063183614 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067675915 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063872582 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077142177 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063218569 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066797617 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067798607 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066200279 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064711968 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072494426 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062536307 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077913692 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078171466 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071018091 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067491689 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065089371 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078131215 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071193059 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073508052 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072302824 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075181216 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080664416 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067793308 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072007054 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080799171 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065289047 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062303611 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074657515 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066543368 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064399435 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064821496 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064066308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072563188 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072726394 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075929385 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062376331 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071874007 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063724465 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067562975 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063060696 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073608163 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071678036 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069133761 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076887191 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0653677 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064964462 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072517702 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063984869 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065132757 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065408461 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071826528 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064878463 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070821226 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066987581 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070775035 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067391476 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062950269 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070467758 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064140321 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070143683 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073638796 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064288286 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07045491 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071403999 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064530422 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0708016 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068368048 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.202626109 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074745364 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073989885 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072272585 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074625868 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065332627 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079362719 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066671709 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079709747 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071426614 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063643622 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072326302 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072760437 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071119811 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06685154 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06647713 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071317095 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065447147 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07316918 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078184686 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066683579 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082169007 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077032647 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071173313 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072868777 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071783341 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071564485 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067710687 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069476777 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066461056 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071636127 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065385255 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074156079 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072579393 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07099751 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072412284 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066504781 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071439446 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067558065 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063103124 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067532015 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068000983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065731888 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079086732 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066250151 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068581148 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066505057 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066461846 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064732169 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063345787 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073193866 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073448995 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066464777 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076871307 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068496664 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072116745 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082059925 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063133594 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064249156 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063943392 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067289105 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078651446 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066703778 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079865485 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071114108 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068053174 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063290692 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066425347 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064538378 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063095589 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063702295 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07429553 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068115984 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064821653 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065631991 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072972475 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066527176 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078748719 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065149772 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070400103 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066130788 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063051553 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068127724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068339143 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072452321 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06680292 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066607832 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063085728 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065320311 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069793072 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071617228 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065352372 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071111099 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077927448 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065034068 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072750182 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067894613 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06350157 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072470366 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065257189 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065716951 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06751582 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073345389 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073280964 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066270995 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080035939 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065238069 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07411134 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065624274 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064140274 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064893804 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06548312 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064835447 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067500577 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066048857 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077974852 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063156888 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071617979 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069952274 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0686436 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07537066 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065188466 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070977717 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070005367 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066171523 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071076784 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078199896 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067896655 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07202681 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065018056 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070331789 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074451905 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067133482 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076131745 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069774269 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064336712 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070175272 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065829558 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063943903 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064161845 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063429373 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074596744 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064571869 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066850769 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066737234 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.199991451 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071002163 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069123838 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08063275 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073225343 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073642719 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064454398 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063737931 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066776298 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067218873 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071977531 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072994878 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075981641 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072502247 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069631868 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064913636 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080799609 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076076902 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073700792 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066788151 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073467964 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066751001 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07269301 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070108949 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070713859 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066731676 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073780516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071930993 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068341175 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076642512 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074371041 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066388978 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070887936 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071838779 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070696887 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063283815 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065632723 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072000923 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074784961 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072743656 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066308787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081504855 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066640174 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070722192 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06838064 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065464877 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075022762 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064559546 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072071109 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066326623 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066562181 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063728779 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068762121 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066672152 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072698684 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068105277 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063848065 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081929175 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081080115 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072486231 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065014981 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064399151 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063669308 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06390181 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068100238 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066484469 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072111362 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081342896 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068157387 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068081694 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063730107 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066119108 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07296269 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073927071 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063082437 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064428812 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068290003 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072057568 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077551709 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065071965 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06553246 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073573189 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072510171 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06354711 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068226628 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062983911 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073633627 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083048913 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066195665 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07181876 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076152387 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078894127 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066164608 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064116522 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065937169 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071601396 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071126238 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066340381 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066530372 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085466199 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073078434 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068122779 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064535134 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072544832 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068526072 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079526385 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066123918 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066656424 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074234021 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074820301 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073210615 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075861259 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077644502 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072169566 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071531606 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064696955 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070213166 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063745969 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067254546 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065831526 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065573812 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069188802 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073104655 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067416881 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080616024 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078916394 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067776476 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062445404 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067948753 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068021832 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063243103 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065772856 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063536414 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063159874 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062971601 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064056243 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070291376 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073162821 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06892994 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064794558 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064088342 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06154741 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074005661 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071167512 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07033088 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062165111 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.202971877 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068133446 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075160204 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06884585 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068267649 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073074638 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072083075 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072253481 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064011303 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077945032 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064760911 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072027558 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068014406 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066172776 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067116307 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073344505 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070262444 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066899829 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073395197 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073105487 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067631163 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064289569 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063958093 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075405307 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064227405 seconds)
  done (took 43.440398069 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102947997 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064979715 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064630646 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064315442 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074071976 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065827347 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064371702 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065496602 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06542085 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06722444 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064086407 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06433646 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072192775 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079656339 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074566168 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068851072 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064194661 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0652637 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063966418 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065074719 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071912662 seconds)
  done (took 2.713100279 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07223905 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081170832 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077266806 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081553668 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07336532 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068959712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077282875 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069325826 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077282855 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07456557 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077608302 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069205031 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075173467 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074994792 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075083054 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069415179 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077458589 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073852566 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069801238 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077689513 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069730396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077568441 seconds)
  done (took 2.889135045 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066327365 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065339998 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071583298 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063231177 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064709161 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063223921 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06872154 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063772199 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068769862 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067672106 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067964735 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067675768 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071863425 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06342108 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068978097 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063325909 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111217086 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068833064 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065227831 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066553488 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063874425 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072652393 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063706177 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063661632 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067608308 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067961902 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066304719 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063774825 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065168252 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067407989 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065258538 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063338036 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072017094 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071036757 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067344916 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06747327 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064851904 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065066487 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063960262 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063702302 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071125304 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063763738 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068926913 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072591336 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063759155 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063511574 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072402072 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065535722 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063402869 seconds)
  done (took 4.561409889 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077493535 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113273805 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070302627 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092998674 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078788758 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071221993 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070148828 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094893354 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06506794 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066575997 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080401792 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080395143 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06771066 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069539672 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072342918 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068068268 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068548599 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066729387 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070442185 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066949657 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071081982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071893859 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079211754 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079621221 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06871149 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066957625 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066871838 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069077273 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079448615 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071377349 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069228799 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070126845 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079311847 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071002321 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067361363 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066828361 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080393912 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067537773 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067041656 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065542189 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067460031 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069192294 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071964184 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080453792 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067920372 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072642124 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067487468 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065552958 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079525042 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066931279 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071900765 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080841825 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069069538 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06884634 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069347274 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07984225 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068289443 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066156317 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067835115 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079201417 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065700469 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069289027 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080028929 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084282014 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070754715 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079874708 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072299613 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068232749 seconds)
  done (took 6.354608892 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075105 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096251839 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081788867 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082189514 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075010104 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075507478 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075188795 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075287803 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075598303 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079616222 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075368772 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117060767 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071468995 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077118829 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075552852 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076388195 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07601 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075112442 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075385114 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07532528 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075768904 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082395328 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075292347 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0817561 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078347651 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070999134 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075235508 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075349227 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081490759 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07521472 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078302969 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075283688 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075146695 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081747251 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078526284 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075086751 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064441554 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075119792 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075858957 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075106318 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070466061 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081966914 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075341852 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070739028 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075443114 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075318678 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081817922 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078328705 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077489966 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079023158 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075090691 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081712955 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075316805 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075183949 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08189315 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084323714 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081453253 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081806328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075063691 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081503487 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081583799 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084044074 seconds)
  done (took 6.132790519 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081451124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073079345 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083684971 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063590878 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062994321 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074082681 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063601592 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063876435 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072648683 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074930435 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074321352 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074538301 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076402819 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074522431 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074024745 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077175711 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074073544 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074120158 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072401719 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074069104 seconds)
  done (took 2.752927188 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079016395 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083107293 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069512108 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074264647 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068932929 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073596839 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069050012 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069272692 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070170521 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069217482 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075220641 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075436649 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069973759 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074196401 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075128507 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074231292 seconds)
  done (took 2.450788418 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086203967 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072524573 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079827131 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065319438 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069022162 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064505633 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064656997 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06328907 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064258461 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078609598 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06460574 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076392889 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065165897 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063964035 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064101083 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071254441 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064341714 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065387838 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064737189 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078125135 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072520126 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066062857 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068690887 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065214463 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070264903 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072517183 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066475186 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068882996 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064886347 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065440083 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071360947 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071761508 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064651793 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065846319 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064140728 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064830635 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064707586 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065767383 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070982818 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083490553 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063620753 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070561842 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064857822 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066390238 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064170164 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065829518 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06446973 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071037313 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06531746 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070616406 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064632209 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067540482 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065734327 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072915865 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067645118 seconds)
  done (took 5.041018305 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081477298 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069543267 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064391121 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063224818 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069069606 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069632714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069443481 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069407729 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07012461 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063444606 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070096776 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068779685 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070220201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069639869 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069868883 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068958636 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063302191 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069654497 seconds)
  done (took 2.536792054 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074646063 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068315891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072790232 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068205903 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068334145 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067946112 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064116968 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063505688 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064141008 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068609039 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069105775 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06815654 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063635228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068174882 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069074526 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068448542 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06873871 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063657668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06848417 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06365217 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06795533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063861211 seconds)
  done (took 2.769305885 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098106504 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085426534 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143653534 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081247883 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088475727 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073720187 seconds)
  done (took 1.856560953 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094533868 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100319071 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068571426 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068420462 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07463682 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072052198 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072044789 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072775304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076871121 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07733169 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072193228 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077297415 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076682722 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078827266 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074958833 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075132558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072608892 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075228651 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068828297 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082462064 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072821823 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077193587 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072540622 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072257124 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07269122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079175055 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076794309 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077448661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072785397 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077374453 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074902025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072360973 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077422755 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077527842 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068942205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076732735 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072705369 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082332058 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074754654 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079077327 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06898762 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074906599 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077402822 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076625584 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077279921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072564606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076508098 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072596 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072754806 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083888227 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075021269 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078511142 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075096932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077499222 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076457036 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083901841 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077406307 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079184138 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074448793 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077576407 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078725784 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074380445 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079046705 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077018926 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074513065 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078899041 seconds)
  done (took 6.322258455 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107007333 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069665275 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072254209 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077286169 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078996669 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072864148 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073137543 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072986874 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072816469 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069906483 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108776562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073102398 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079229852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07920829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072970011 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073181968 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073181316 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079162372 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069612709 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084681793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072609885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078715232 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079003824 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079435438 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0776999 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074994867 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072534898 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072413753 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072593187 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072419929 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076603755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073163707 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07879771 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069590188 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078864316 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072877258 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072595103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076541408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072517039 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075142547 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0790292 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082175469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072760164 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072411279 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07787958 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072468206 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072728741 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069359152 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072800973 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069352667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077076316 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077249839 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077114746 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078719094 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072698001 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072333289 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072855937 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072183173 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072808501 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074762219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08090581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072321987 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083259378 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071957476 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072166287 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078807233 seconds)
  done (took 6.317936541 seconds)
done (took 129.136568873 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211697715 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184518226 seconds)
  done (took 1.669904237 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076429042 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106670794 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085119192 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135640667 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071058173 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105429909 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104206621 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083674481 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071228688 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071393948 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073397217 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076075947 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139662572 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071541826 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071537921 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075542117 seconds)
  done (took 2.711493094 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107553173 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171058557 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111113734 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070983158 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107007822 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079560883 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071067922 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084201877 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078443859 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073124021 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079772479 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077568281 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073005474 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080224761 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077792907 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079264572 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072291005 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07987482 seconds)
  done (took 2.872320061 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106498609 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097144569 seconds)
  done (took 1.505902478 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.176577813 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133482819 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202244642 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345823448 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157576238 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.425784445 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143299184 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143581695 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115789073 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135615108 seconds)
  done (took 3.275344255 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105777939 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173376517 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298341392 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123942793 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078244242 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093855651 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125390331 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083847759 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086093314 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085621562 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085915893 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081114713 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105617792 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079206932 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078168231 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08064657 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108880142 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077544103 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077986027 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08074253 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109011512 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072074123 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078963076 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076694206 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083374758 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083382128 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07288368 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072196622 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.081238427 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078176066 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082071324 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.090947221 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083534333 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10844344 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076336891 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108941306 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080906297 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078880685 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077452067 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078970162 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082732039 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08237525 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08031951 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080238742 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07273697 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080651376 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072706431 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071515439 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082539244 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072971356 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082633226 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081955931 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109056606 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073210353 seconds)
  done (took 6.234968705 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112908946 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109749565 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073769513 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115038392 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106520873 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072288862 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107878326 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101514167 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110391286 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073266174 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07104851 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07292631 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082175207 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084625027 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114925565 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107850025 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072766832 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07053523 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110488567 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110098772 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071742695 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104022159 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100508574 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110842462 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071103643 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072848718 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071136807 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072690637 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078353107 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079797841 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071938656 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081733016 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087994266 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077315724 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068586651 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069824519 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071076712 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081044149 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081128176 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080683177 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079656809 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069940174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070550235 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071948498 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071715259 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069653896 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079876304 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081147797 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079506608 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070709858 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072243082 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070888442 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071843058 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080635771 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078450201 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08210983 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081049515 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070830584 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070741192 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073612627 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082137626 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080587766 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080317268 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071956933 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080946461 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070758121 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082580246 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084280303 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071612982 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07436292 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070855261 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071129825 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071755358 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07843097 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078819839 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072312649 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070790543 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070816292 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.0813853 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079418955 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070422258 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078297901 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070080565 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07050184 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072001106 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072212539 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078358513 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080565463 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072742824 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070956814 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070990336 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070944777 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069830593 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078621763 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080494332 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080360986 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078664364 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071354155 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07959214 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078440039 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072071006 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079589793 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070832609 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072469068 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071753798 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07877968 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.0773549 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078614557 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070251666 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069867792 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077324729 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07973468 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070064744 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07684766 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080145282 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07757013 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06918579 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08060857 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070512387 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079955233 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0680853 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079961236 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.208336275 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081758358 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073052716 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071314591 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071920619 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081303121 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073164648 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07149936 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072810912 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071562236 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079572738 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083783331 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074127764 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079709305 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079480507 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073370496 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079378193 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071199395 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080359849 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071609527 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072688165 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070171706 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083965422 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072226505 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071807318 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071012643 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082962136 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071193425 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081378196 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079131553 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070475576 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085840547 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079597574 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079319774 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082015299 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073339647 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070725656 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071487335 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070869319 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079801848 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080841494 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073102029 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071104394 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079315986 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082333645 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07056788 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07974901 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079533999 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079915601 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071582614 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071817827 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082600358 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082658575 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079814288 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07932747 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080298943 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072531144 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079449164 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079717963 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072255542 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087102313 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072653114 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083939815 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080367842 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079423968 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080825831 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082119901 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082110435 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082277202 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084198293 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071003875 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071352806 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079901016 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071391693 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071365605 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079337512 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07237763 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072810892 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085354328 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06951564 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081706708 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070338602 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080506115 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070370693 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072161827 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085574407 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070552802 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072263257 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079987851 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071137485 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078769218 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082044416 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078762597 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071699615 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075094868 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08080173 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080464851 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071173218 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071250652 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072281149 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078322093 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077593732 seconds)
  done (took 18.934917354 seconds)
done (took 38.5187476 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210976524 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157492907 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189675868 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115529101 seconds)
  done (took 2.075872497 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111197858 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102402207 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091422531 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068452566 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097401614 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067984587 seconds)
  done (took 1.871925804 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289759394 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197301772 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180759345 seconds)
  done (took 1.998833199 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21644189 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196294839 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.466331017 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.2862206 seconds)
  done (took 2.596960078 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146502523 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085503908 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067003582 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085671613 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127599701 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153730487 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093024364 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118569783 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076156386 seconds)
  done (took 2.341833738 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146876054 seconds)
done (took 12.402539787 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1545988 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 0.160392376 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087731292 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.282584469 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075691838 seconds)
    (6/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.222016513 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07180956 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.212593611 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.241403305 seconds)
    (10/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.158455963 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079389513 seconds)
    (12/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081606379 seconds)
    (13/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078410153 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.213171845 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.431586534 seconds)
    (16/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092194109 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.204116234 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141333912 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078063038 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.209366113 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078447626 seconds)
    (22/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.131968458 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077686015 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.217956918 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078904747 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.179178731 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077314827 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095309698 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143199737 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083311172 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.197900502 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.123218206 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.180147619 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087369306 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19826144 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.121179432 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123263594 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121858588 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078986711 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.182658467 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105908033 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.199626489 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081676694 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179899728 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089706877 seconds)
    (46/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072294151 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07466618 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076749134 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068469389 seconds)
    (50/309) benchmarking ("sort", Int8, false)...
    done (took 0.149491956 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067700974 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103133018 seconds)
    (53/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084907699 seconds)
    (54/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074569787 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145695819 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08058195 seconds)
    (57/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.130453638 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.161181179 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075063839 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.218178446 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.069370964 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075430922 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.23875362 seconds)
    (64/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081981213 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.229935575 seconds)
    (66/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.134822924 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.215629993 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076168928 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085840335 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067421826 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076455652 seconds)
    (72/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.169039368 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112021606 seconds)
    (74/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076482759 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069985847 seconds)
    (76/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182671289 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066693636 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126828121 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067983788 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089722309 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.121191771 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078363219 seconds)
    (83/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076720765 seconds)
    (84/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.139552658 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076514049 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076647342 seconds)
    (87/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.171274682 seconds)
    (88/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.128680065 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067435786 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070307872 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.285725842 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131927705 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.077629695 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072098868 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.179838628 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177494897 seconds)
    (97/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080942128 seconds)
    (98/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.147920995 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.180405515 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.212006238 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.20313818 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070608375 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070427307 seconds)
    (104/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070067063 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.104119815 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075278963 seconds)
    (107/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069561605 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076966504 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.136572854 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073622854 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076900253 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.176160477 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088011744 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.111739858 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139009948 seconds)
    (116/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.082018445 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.171550731 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076964633 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095539836 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093540866 seconds)
    (121/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07962857 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077879299 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103072032 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094119645 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068363993 seconds)
    (126/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09074089 seconds)
    (127/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075101811 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128134846 seconds)
    (129/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.134038761 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.22551387 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075822254 seconds)
    (132/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098018654 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142177232 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077822379 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090611557 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070087875 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068153441 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078420705 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121675102 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.069696547 seconds)
    (141/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.140646178 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.223742188 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.149992484 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076888596 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.187160158 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094364144 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087124511 seconds)
    (148/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069200982 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074851924 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.177874391 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.08006117 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06864505 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068821519 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076615672 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068959518 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06922177 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.12995281 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.23475117 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071965221 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06916003 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066798475 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173623183 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080380383 seconds)
    (164/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080703109 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080001655 seconds)
    (166/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.079827478 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06919981 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.219216108 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090871236 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07476618 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068329778 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092010321 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090735688 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143485394 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068725879 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068186739 seconds)
    (177/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.0766242 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081430714 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.08077257 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077233583 seconds)
    (181/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067910252 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078666899 seconds)
    (183/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070510631 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142508487 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089962547 seconds)
    (186/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076258184 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088579997 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070007483 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067552455 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074348122 seconds)
    (191/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.080467598 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06823082 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068480481 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.080590957 seconds)
    (195/309) benchmarking ("sort", Float32, false)...
    done (took 0.135165431 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069498741 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172565386 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078810663 seconds)
    (199/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07597223 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168881755 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068209929 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067526343 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070185418 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068256851 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067571153 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067788863 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074595078 seconds)
    (208/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.08062727 seconds)
    (209/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.140032592 seconds)
    (210/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183137773 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.254081401 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.071466038 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071038715 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075261834 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 0.200219524 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076943737 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082118311 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069915125 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091927949 seconds)
    (220/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075084167 seconds)
    (221/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069657613 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070450362 seconds)
    (223/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071819417 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079087111 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07678529 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067633328 seconds)
    (227/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.182340825 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069564879 seconds)
    (229/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.09061459 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140486239 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072529415 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125936743 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068949191 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096970748 seconds)
    (235/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.069833995 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122623741 seconds)
    (237/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068329457 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095002811 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076768805 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069485075 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068931107 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081514916 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092506642 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072106164 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0688638 seconds)
    (246/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068629898 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06812823 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069392297 seconds)
    (249/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067961571 seconds)
    (250/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072259735 seconds)
    (251/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081684471 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.070876121 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068548225 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.137521149 seconds)
    (255/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077958591 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093047612 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093571872 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067778538 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070073372 seconds)
    (260/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.069636482 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069776736 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076170641 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070514665 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068566916 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070339342 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072358542 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072312013 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069856268 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093637735 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071338315 seconds)
    (271/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069840329 seconds)
    (272/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069598182 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077628636 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069434017 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076187301 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07662239 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069578426 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137646856 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185229504 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077253382 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068914049 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069869837 seconds)
    (283/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068994917 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069377798 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130288008 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068692859 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068291275 seconds)
    (288/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081980034 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072542716 seconds)
    (290/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068870581 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095129677 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.069379973 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076464313 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071886821 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069053252 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068770527 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06819726 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075545121 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067665921 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068523268 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068092715 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068851311 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082728394 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068710319 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068175984 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146441024 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11629969 seconds)
    (308/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069016178 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068329932 seconds)
  done (took 33.922815429 seconds)
done (took 35.271758615 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090914768 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103788272 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076657315 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097361726 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084434071 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099447841 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076681311 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082373503 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085156544 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083513194 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082115386 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075372439 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07799648 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078229595 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075899456 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101515226 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082720458 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076815581 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077035955 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068005621 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076752839 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069131433 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068022986 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075781288 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080603802 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076245411 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078484543 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078125225 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069097578 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069277405 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073766443 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077706606 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06828145 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081328501 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078074435 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077746429 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078415577 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081289866 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068527896 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069006892 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078983751 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068986387 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07669129 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075526654 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073569874 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075406109 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077297199 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081539318 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100985049 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073806124 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078694826 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079564613 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080880716 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074282835 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073749386 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07669144 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074906237 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100818149 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077259797 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074208922 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078088041 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07772852 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075114451 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076831606 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076966079 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079177149 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08113614 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075204878 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078754808 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075220108 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0680234 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076698213 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073200904 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068720496 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07984246 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081742128 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067604613 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072784032 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076312961 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077163316 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068632185 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076216959 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068137697 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073750985 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073538993 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074850851 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07335862 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076279036 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067952864 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07697219 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0757143 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076201151 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067960385 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081925282 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068636935 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074531544 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068823143 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068337999 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067894804 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073696718 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068534473 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073157001 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077061695 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067735665 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072951395 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081775183 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06806186 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075766697 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067573071 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068325804 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080137049 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078576769 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068179761 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073628878 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067870561 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073639733 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068125368 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067824131 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067937256 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068689545 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072726582 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068061658 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072942235 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073596858 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080784704 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067549782 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072508254 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073120343 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067355514 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074272844 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067706696 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067450846 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066777203 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081465552 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073321218 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067897649 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073469781 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073164311 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076063324 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066754411 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075791098 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073097055 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071700196 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073459064 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067085397 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078143111 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072188453 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071755939 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066834826 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066714074 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066035267 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066882968 seconds)
done (took 12.905772268 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074452042 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.122198287 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096540024 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097096523 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086137864 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069634999 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077189705 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095687788 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070848011 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099943335 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092042012 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091599507 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113032188 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068090687 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069158347 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070168728 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070640189 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081694536 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097268215 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091563857 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109604105 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069077071 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088890187 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089750318 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086311602 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091057552 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070036482 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070496599 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07147138 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092987104 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094923959 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07270464 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070457321 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094405416 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088179828 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084028094 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070013169 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078745783 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069948387 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069017532 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070862566 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090823381 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078210002 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07866379 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070433428 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076677115 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070589147 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086181685 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091582331 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078450384 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085493486 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094402482 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073722831 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086014093 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068425721 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085660898 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078918725 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069255419 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069944299 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074416171 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070013055 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071948292 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080356584 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076278176 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071723 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082038937 seconds)
  done (took 6.794102182 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087659289 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097438384 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086604802 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086905837 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068486656 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069278692 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069523735 seconds)
  done (took 2.011287908 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069679424 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093627558 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094121929 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093940775 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084244395 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094667593 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077313981 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069385487 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099173734 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068811998 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090245984 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101178851 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073418802 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082221682 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095108392 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069384883 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094671495 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069744701 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070308124 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094887408 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075827403 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097479211 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080925741 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070071527 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082767508 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07022638 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102461717 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077790993 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070977402 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070858111 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071158573 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097562568 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0826975 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081932455 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070793288 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085006975 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083763524 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073061472 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081014134 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082059048 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082920208 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071184405 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068283272 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071146196 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072633395 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081404104 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068627324 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.0709433 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070737663 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089651249 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068138967 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082540987 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074026397 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07599865 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075555205 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074883738 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078437259 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071946838 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090214798 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070671367 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087593392 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08650744 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08364581 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086373119 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070304639 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081952329 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082932728 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070444815 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07153436 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071485704 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086618251 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073123638 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071190421 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081432881 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069493026 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094664269 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094762893 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069302137 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083886879 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070369812 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07098374 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081351131 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094655393 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075964462 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070938631 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073845849 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071608277 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072479843 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068053802 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073013974 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.07102881 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075043732 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070623831 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073323441 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071973389 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086761808 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068657994 seconds)
  done (took 9.091755838 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073643226 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0708571 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072847439 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070497613 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070803022 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070773654 seconds)
  done (took 1.903090849 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094465966 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07059639 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083419871 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070774978 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107257685 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086597561 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087513455 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081175376 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084159679 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082163412 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087202371 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089737067 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090945491 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072618757 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086400772 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071691936 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087396999 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075183202 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08225289 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074254924 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084811943 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073373542 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073612722 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090124326 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073996329 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070934179 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079184032 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082648837 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082170651 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080781046 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073173015 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075418612 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077870124 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080851228 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086888683 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07764017 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070547271 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077118515 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073822918 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074237026 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089274415 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07320256 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073246352 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077522979 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080609372 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.080365397 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077640812 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079587178 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085956763 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077289524 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076989088 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071368029 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074181253 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076933438 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077887962 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080334607 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077064087 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086355769 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073234718 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078014339 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070217007 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074563286 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07997927 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073763003 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078347133 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076902429 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077891729 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07329682 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07313708 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070116309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076935801 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071395722 seconds)
  done (took 7.128571109 seconds)
done (took 28.395637627 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.521792306 seconds)
  done (took 1.944400908 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625692884 seconds)
  done (took 2.076344469 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.516589748 seconds)
  done (took 7.966314235 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.387113193 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.456620923 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743416711 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13997736 seconds)
  done (took 3.209816812 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715205365 seconds)
  done (took 2.178401109 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242641492 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231958521 seconds)
  done (took 1.943499412 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.356083222 seconds)
  done (took 1.8078684 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.081053682 seconds)
  done (took 2.538872671 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239596567 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16431772 seconds)
  done (took 1.862791723 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.453623473 seconds)
  done (took 1.91045811 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.21099493 seconds)
  done (took 5.669726742 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224627286 seconds)
  done (took 1.718366364 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240311086 seconds)
  done (took 1.695135335 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.74625183 seconds)
  done (took 3.203633774 seconds)
done (took 41.196782496 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086246016 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089239121 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088506622 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084959113 seconds)
  done (took 1.787011156 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076718886 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073096372 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077037201 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072740798 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076956078 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073248278 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074564306 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075899581 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073577962 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073379987 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073271011 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073685016 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076081016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074729177 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071782244 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07616534 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077476846 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073086389 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076278631 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073665861 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071339264 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075692911 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076230916 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072343705 seconds)
  done (took 3.254220143 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079215364 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075828806 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077911751 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074654584 seconds)
  done (took 1.784003828 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077736099 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091516226 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089433837 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079800951 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091297289 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086480361 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069115254 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069543123 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070604993 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078959083 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068874338 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09613182 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088828393 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079460607 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081475222 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066357759 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067927482 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087689976 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07976781 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079603492 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071180506 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079335307 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068683553 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089646197 seconds)
  done (took 3.38248724 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083648258 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.069097241 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08412757 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094820005 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096630826 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06892622 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082690857 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096717966 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139760937 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068516884 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074740039 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06856918 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.107782615 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068492754 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08405654 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112088464 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115108194 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072249976 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101534835 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068467701 seconds)
  done (took 3.237230195 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.087437 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074869325 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072943995 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067722597 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079370695 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075827473 seconds)
  done (took 1.932363585 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07158529 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070312056 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070252126 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069150907 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074677774 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070607274 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068743966 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070043658 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070145641 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070044159 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069257397 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068306948 seconds)
  done (took 2.312992674 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193113212 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068713065 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06865692 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06823956 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072876778 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0689918 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084447387 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070177846 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09733083 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069125885 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06968409 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071714853 seconds)
  done (took 2.474158971 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194196726 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076595322 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225786697 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147750874 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106484846 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112988251 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115125477 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111596423 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13668122 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101022986 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156838507 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163964799 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107084334 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132372785 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090538058 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.122827687 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147456054 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159718531 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102826923 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157909013 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13860793 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125643764 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145161302 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099876385 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104574312 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115195813 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074046433 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080563685 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162947669 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126050349 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13933019 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108669108 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093273866 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168857826 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163065049 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135805013 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146031061 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084836841 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.121671477 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132899359 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195540294 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089555235 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152345488 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105039998 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080112018 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126034502 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112392079 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117301765 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102962877 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088920128 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281872147 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177517383 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131996625 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086824571 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121143186 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108953097 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113664792 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118090481 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172740444 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153598443 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123916507 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072503486 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110424232 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146193844 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129444933 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107664245 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121497013 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092633775 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127744456 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153101215 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120478605 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139649211 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11582599 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087980261 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118385163 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134618344 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123741798 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165579468 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120723789 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073630669 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118930383 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098766954 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080678135 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144857594 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076088965 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168776712 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098916117 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124504108 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128727832 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108277321 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108233433 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152921994 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13643789 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104672976 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08716701 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102206825 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117705551 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140517918 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087443204 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106012715 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111816436 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079464785 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129738078 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07498004 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117633017 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095352729 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115050881 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121344376 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079118817 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117892062 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251450174 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102939159 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126483357 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152537916 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088619006 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081827121 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160607949 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11861763 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103981531 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137982466 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152964849 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121200181 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097384443 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141835509 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166432106 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090604673 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156510618 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102545283 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0841373 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106751603 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120652125 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110303606 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122537809 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080386067 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117808346 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157329446 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075482275 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097487767 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130104023 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081843232 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080934003 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105233817 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103705163 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097012693 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101143342 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104003752 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133677291 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120666776 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10523938 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121284618 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097221457 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159591357 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087932238 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105185747 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104350631 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073200118 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129678116 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1499198 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079306345 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153747844 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119459651 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114122765 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116066202 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083335829 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132613797 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078865848 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073129586 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134699414 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11127631 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10576237 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.141349957 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263232675 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1225947 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119372105 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128848408 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126322474 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126207293 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106385477 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089744767 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113715009 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126806222 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073914636 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092271509 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082565108 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102215678 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095144296 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084627394 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135231375 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119969764 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111074875 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113241773 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096160655 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143731966 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078809013 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121688234 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120783355 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095734874 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.147840734 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146857964 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128040066 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101484312 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133096192 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074189642 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075415026 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088155859 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118740611 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084943466 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084515727 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11263439 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145918618 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123492344 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133452024 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12164855 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11490913 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152930458 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073582928 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118865588 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140056028 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119030532 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104238837 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092233046 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098046387 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139058178 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103298258 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173132708 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111997474 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12060175 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151134426 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101049429 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079184415 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102539274 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126990886 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099108707 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.29178215 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09986087 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087969094 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107888955 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07947516 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099396761 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122907799 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116111601 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135787883 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111894186 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12888728 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078221748 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109319752 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121564359 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119490665 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084918088 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115165845 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160106367 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096538861 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115188513 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145869382 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079546365 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138163931 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165262609 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1396638 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085837784 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104891539 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120478526 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123839511 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116481166 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132928235 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102295301 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134450549 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11068654 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08569409 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086553829 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095532642 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102835003 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112646991 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103732929 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113047151 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096312754 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126670272 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10290276 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110046076 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116366896 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099441196 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096038689 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096420237 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166572843 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116226346 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160935361 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098455331 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137276318 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153171829 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075349294 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079017609 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080180621 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132437664 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084335327 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124400132 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.261575473 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116042257 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12135906 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134963284 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097654672 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072464636 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109456087 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130774018 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120013463 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09666761 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10330759 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152462493 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11901117 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079870473 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109602874 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115881621 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103825487 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166797872 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082504926 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109430598 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077862127 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080680397 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123309165 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145164507 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083529636 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104338852 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118580887 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10886825 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120663971 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09434712 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107171434 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125648056 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140535478 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12148225 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090658128 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110394877 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125415297 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149178951 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103202858 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100906676 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168479627 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147163569 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154090491 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088199979 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113978128 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112854946 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108495196 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133645698 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08445933 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155227213 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082604838 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129677494 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099921893 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089333354 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124460569 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111566083 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088075805 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137915201 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112822362 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08228685 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079029467 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260705233 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116563816 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101714995 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076291085 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134398944 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075489744 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13346551 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162687953 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080842352 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104816018 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095571005 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082711844 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102866253 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100320027 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086437127 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099389262 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163666236 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08812775 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142697193 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12957387 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109554021 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133262711 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1042066 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643547775 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080766495 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145486841 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114422554 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170471687 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099140126 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116628439 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110022376 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118735784 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1378754 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101570553 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179413838 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126767937 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11626503 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080027346 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101409167 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103024926 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089479859 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10609013 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112557061 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112239619 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094518649 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1160592 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120062344 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083114801 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095495363 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149421128 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114450429 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135971951 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132739602 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084221258 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115354893 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13184787 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079856291 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114975222 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142686101 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258014735 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102393499 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083737607 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101646983 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167881091 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074594208 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153672852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117504628 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110076343 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115706774 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109363532 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126513285 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102535279 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118890509 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093596671 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108316182 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149163833 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083693912 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079737275 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104450421 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110128418 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097926139 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097613656 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099543537 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146443837 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072834883 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097643342 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112316722 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138384322 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165087424 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106456842 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084199002 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115904614 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115658468 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11156081 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117182377 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079609177 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081221467 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083022861 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.101767865 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.125053284 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112829703 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117855581 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108095873 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155097939 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084694892 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224202982 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096536091 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105242295 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090308183 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080966875 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096483149 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09677281 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103933989 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110420758 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167618819 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095886978 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091251654 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092177056 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074700931 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083032297 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12027937 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107326523 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114172922 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102396824 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081774759 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2530267 seconds)
  done (took 58.214454807 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104540692 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078818097 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102151309 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144318225 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121800955 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199816226 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150239926 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189229833 seconds)
  done (took 2.654618003 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069512641 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094289287 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107039578 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085539226 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06821297 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070651416 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230517415 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084259555 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068849543 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094266067 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080342567 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069135001 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.446611129 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072018897 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070317071 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07806164 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067649218 seconds)
  done (took 3.420382039 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383746081 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613041262 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.348902471 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078081296 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.989205448 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092389244 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.197554319 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141456196 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081833754 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539470413 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369458456 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135898173 seconds)
  done (took 18.550125009 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083707478 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079994025 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094608107 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094920115 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081883002 seconds)
  done (took 2.095023809 seconds)
done (took 106.576987154 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083145946 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.441942469 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073238937 seconds)
  done (took 2.120786408 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.095900786 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093689312 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093295687 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091195477 seconds)
  done (took 1.958954152 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078567879 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080717176 seconds)
  done (took 1.736978836 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233183874 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.182142624 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100980083 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084672504 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084380966 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085175039 seconds)
  done (took 1.837609325 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074534168 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076671706 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076427829 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077564359 seconds)
  done (took 1.884337687 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070215336 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070923275 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.072470554 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075017282 seconds)
  done (took 1.871603825 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088402454 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088985861 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083696345 seconds)
  done (took 1.843633676 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103407133 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094413455 seconds)
  done (took 1.778402468 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08263284 seconds)
  done (took 1.661696439 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091716709 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101708716 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137073577 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119979285 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.144710761 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119950827 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088510733 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08946144 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082740632 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090537471 seconds)
  done (took 2.646488172 seconds)
done (took 21.519642245 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079960816 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374543066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364621334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093945615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674082871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361471208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00918718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097596286 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147595512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072103838 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089633577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654550094 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989960783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3311667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978477813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334585121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654390801 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072843848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071770746 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07218485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984624492 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072235301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071971111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072574721 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653344178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377552732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073972546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.335848897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073578456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075194861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360937765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073798026 seconds)
  done (took 16.306970026 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071831025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124034769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076908449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089871128 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074627198 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074516892 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075709388 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07341868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125818741 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07220513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0910586 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072860929 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075932645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073749626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092836878 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073258462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074405489 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07425101 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073589465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073758651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093342896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073483434 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073625936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074137102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074042291 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085981779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076487636 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07381095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073927297 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075818757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076226576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074577827 seconds)
  done (took 4.15387761 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118120922 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13098106 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077804454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111873394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117739241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075388767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153142211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099013487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132582055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072914989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090181378 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072505463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108423131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073427501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094664917 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07407103 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074726759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074297361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073509742 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073630965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093977969 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073269302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074088158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073502017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073850378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088004215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07445806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073733081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07371224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075445755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077197223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074581004 seconds)
  done (took 4.419589872 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073608621 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07689236 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084251777 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085551312 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070971741 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073401411 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074980371 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071029766 seconds)
  done (took 2.209458108 seconds)
done (took 28.681348139 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082653101 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071784209 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074662718 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091860855 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078192111 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082331354 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068811397 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078394483 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075048163 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075582636 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077653145 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071197454 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073741511 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068529572 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076074188 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069954525 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08468791 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074342019 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084403989 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085255206 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073357065 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076531402 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078945464 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084368979 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085039786 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.085212605 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08053389 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076937273 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071519965 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07449962 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074895264 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084449966 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085055364 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084669858 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070481069 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070846406 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075123382 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072518451 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086314811 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079963861 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073116406 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080893883 seconds)
  done (took 4.837806195 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088435215 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094608498 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086585543 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08355062 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095054212 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086846848 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091162289 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08221589 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081420394 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090464664 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077972312 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08509555 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082923014 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076507707 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.081746768 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.079855133 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.084949557 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078628202 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.081087979 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.082413896 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089137259 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076230969 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090425645 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080930206 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076161961 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082088025 seconds)
  done (took 3.791691384 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077400103 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089837953 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096368558 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149119696 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116171713 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084129788 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085091296 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096001177 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100439384 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07199345 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076497011 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096765503 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09663449 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078143249 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071899759 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088368547 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087850939 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074184161 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078759264 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10109077 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093287153 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089679022 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098200482 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088770809 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070982663 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074138528 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076894469 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08867265 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074260736 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08341531 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073166259 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076434695 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070204895 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081970764 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073905947 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0706142 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096954145 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08344413 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084686623 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072369851 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081193925 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072874749 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097363703 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133058477 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070638373 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07640232 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075571969 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082431131 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070829821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099429416 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083507091 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070879992 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071965352 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070481828 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070727237 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074035116 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.0732318 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074379345 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081699631 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078188607 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094059731 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076453957 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089821207 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07109012 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081884137 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070687875 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07265372 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070216631 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100487806 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073034558 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117233971 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072217785 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069935321 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082703503 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081564329 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077684489 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071160594 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089908648 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083201902 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075595968 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080161253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07516112 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075221134 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102383012 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071603577 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070592964 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07006685 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075333433 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074879814 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071818586 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084348666 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07095842 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074906936 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090607618 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071166681 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072163458 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075586024 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074321701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070938642 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082805393 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074521594 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07268148 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082117001 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07214757 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074962601 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084565818 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078015442 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069845322 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073892936 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075324353 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072574189 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072904187 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075388799 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073388638 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078471884 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078213766 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077517483 seconds)
  done (took 11.095931681 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169344641 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160908112 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074541944 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153786754 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080817533 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083746004 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15549821 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099342696 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071902759 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073764761 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072204274 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114939531 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110110315 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124459982 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085703088 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07352223 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095197583 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.12031648 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160087796 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151783506 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095222703 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080501128 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074687614 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074013769 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073683302 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08241719 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092899659 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081516689 seconds)
  done (took 4.530279996 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078932055 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104656367 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076091453 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095173132 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092046872 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073030254 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074003395 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073605272 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088463156 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081260927 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072500902 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078081279 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076105624 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075794865 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073187801 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07885184 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079433287 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071544344 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076100772 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077986923 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08246302 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098059153 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076341492 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072064582 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074654916 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072442656 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080853945 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085277057 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07239722 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108960169 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070094611 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07799551 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.089533431 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072623384 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071603428 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07251521 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072574539 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072028852 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073946725 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071002277 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070854766 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075974898 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071071408 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080180553 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0851186 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074051946 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074188958 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075241897 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07530171 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069760127 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074974094 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074643283 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075631818 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.0796839 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076252068 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074738455 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073369335 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100854303 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078619345 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071368771 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071299546 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070698284 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074261261 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.082396739 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087622339 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074404706 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070505276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072393537 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085668562 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08512887 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07117478 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076915638 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069904704 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074028674 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074825137 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074887995 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07315723 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070701906 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072194839 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076395357 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072697958 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071812219 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071361207 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075170109 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070856141 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070769598 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073135859 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073799568 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081193016 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071911783 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.0760614 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073208698 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071611762 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075249978 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077713379 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075530204 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083584346 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083906429 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072568762 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070941082 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086727316 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074792927 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071344298 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078377242 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07727039 seconds)
  done (took 9.721666595 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093246109 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072822391 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089018744 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09655053 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.082141924 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078048267 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082382986 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072073369 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088281752 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076686449 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080760689 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070857436 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083575763 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082844061 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072990315 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082812339 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075766571 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090055454 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086921716 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070637917 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080855185 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085462611 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085078215 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087208478 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085698806 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087805349 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084554227 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082635844 seconds)
  done (took 3.965622409 seconds)
done (took 39.535389838 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.689853963 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.85103496 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.669017326 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.883694551 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.970247989 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.689700459 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.760842121 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.659707889 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.932413281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.704941804 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.932119653 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.895423989 seconds)
done (took 64.381773029 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.694060134 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.821201822 seconds)
    (2/2) benchmarking "String"...
    done (took 1.921854636 seconds)
  done (took 5.349488413 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.856455444 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.459102139 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.904254727 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.66578354 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.668642832 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.941018351 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.447543262 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.11315162 seconds)
  done (took 29.80253034 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.827735345 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.888444326 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.383983568 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.403694091 seconds)
  done (took 15.150594653 seconds)
done (took 61.544481835 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.67297749 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.709308538 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.699556918 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.666478282 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.759438832 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.686243652 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.795650489 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.913662582 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.664004148 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.674004205 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.66911285 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.153779982 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.671185888 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.774727631 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.662774776 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.665816213 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.706980231 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.285255436 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.866357242 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.675675336 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.675278341 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.698664714 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.669679979 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.669061131 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.68919826 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.666160898 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.049161356 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.667801794 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.275642144 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.66751941 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.707595605 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.964545963 seconds)
  done (took 201.376175192 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.663601472 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.613101483 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.69210233 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.712854338 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.127003216 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.860795887 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.770285862 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.151108415 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.672597976 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.682411283 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.78732235 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.671587395 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.814571595 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.663986844 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.705996794 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.674866148 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.810909241 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.828420305 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.708704617 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.829873599 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.6896198 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.679085 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.644766784 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.776112271 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.707915827 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.76175439 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.687484797 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.687563755 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.855406051 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.786201651 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.709681794 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.689403252 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.831256019 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.534367273 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.681786136 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.665598323 seconds)
  done (took 165.438672119 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.850949112 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.668983271 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.669340091 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.671514339 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.673122844 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.669846692 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789408064 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791281306 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.309819119 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.042439285 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72256024 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.668056825 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.422889856 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.665948399 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73097475 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.681576834 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.672687424 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.685652903 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.693091865 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671645038 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.666625129 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79171507 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.684053762 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.671269484 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.678646933 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.669882709 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.674183135 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.05579447 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.667955612 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.781826934 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.670068203 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.675883398 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.90924556 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.670286204 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.673442019 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.49862836 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.741970562 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747068576 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.671116371 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.67489082 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.670623985 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.888019655 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.669062896 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66792634 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.671895296 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.668862409 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.78935711 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.673261322 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791634101 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.672371974 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.143093385 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.672681291 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.674131361 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.271584175 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.456097914 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.673542286 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.675954801 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.668042932 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.671955755 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.671519944 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.684208998 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.065702451 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.750675185 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.672577142 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.676631866 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.677846958 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.672316877 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.671911305 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.767473371 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.670919591 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.345910208 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.687455892 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.799283338 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792690992 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.675877932 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.737003345 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762409232 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.670586443 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.6720859 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.672023793 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.671768838 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.752842768 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.674135988 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.788729387 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681743766 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.672045017 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.730753808 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.673665752 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.741846431 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.670480242 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.506739589 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.675629606 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.67525517 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905138612 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736795902 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.67293472 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.673122234 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.763995131 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795328496 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.384538506 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.677120676 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.162808281 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.760980372 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.672713887 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.789447853 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.67331841 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.670493867 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.751632553 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.680218068 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.674389131 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.708317344 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.674107659 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.68793604 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.676848922 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.046952868 seconds)
  done (took 389.821520794 seconds)
done (took 760.151387766 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.285831294 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.255746165 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.356276173 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.265233554 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.246629114 seconds)
  done (took 13.019932293 seconds)
done (took 14.632789096 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.755765183 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.756339843 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.69418965 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.755333504 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.6887218 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.752820026 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.739735812 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.697853551 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.726144258 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.695967673 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.72511077 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.693866125 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.681706587 seconds)
  done (took 23.975692934 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.904738008 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.902942985 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.740028716 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.895699596 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.713859881 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.903345062 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.829588131 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.820209656 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.835110951 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.688486412 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.684349969 seconds)
  done (took 21.531033362 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.905849602 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.922426067 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.745454814 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.904544783 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.719324026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.909160145 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.84506719 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.824585267 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833201615 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.688230775 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.680833475 seconds)
  done (took 21.591351275 seconds)
done (took 68.710341241 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.676984482 seconds)
  done (took 3.289286413 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.696028829 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.853457769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.678362645 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.677906872 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.676283273 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.678473241 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.680077121 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.67757256 seconds)
  done (took 15.233715293 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.677384415 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.677497932 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.679180811 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.676771833 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.678358798 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.677990218 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.678267799 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.67689962 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.677849593 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.677415927 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.676409549 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.6779127 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.678913814 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.679868338 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.677773092 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.679906569 seconds)
  done (took 28.462840072 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.679194114 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.678157315 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.678555088 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.678650318 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.679042288 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.679077343 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.676955505 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.677159518 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.677550555 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.677715252 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.678736237 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.679951244 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.67730427 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.677738473 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.677384197 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.676918906 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.677864327 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.67948457 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.684482626 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.677731079 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.679944631 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.679607657 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.678575247 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.677219668 seconds)
  done (took 41.901926095 seconds)
done (took 90.501415976 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.421631669 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.289124714 seconds)
  done (took 9.324596579 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.682704189 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.678732054 seconds)
  done (took 5.050574799 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.682167254 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.679321482 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.681113835 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.680462273 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.679933766 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.6810073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.679381298 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.677448526 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.679759441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.680555052 seconds)
  done (took 18.415990697 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.680873094 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.679479104 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.682485263 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.680537552 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.679825949 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.679465406 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.681473688 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.680164931 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.680264636 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.681103649 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.678259832 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.682144816 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.679128488 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.681800526 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.682032787 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.680144854 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.683136392 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.679933951 seconds)
  done (took 31.86773097 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.681366985 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.683012497 seconds)
  done (took 4.982008438 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.679820531 seconds)
    (2/7) benchmarking "second"...
    done (took 1.68124648 seconds)
    (3/7) benchmarking "month"...
    done (took 1.680743822 seconds)
    (4/7) benchmarking "year"...
    done (took 1.680700269 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.682363169 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.680254752 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.680000938 seconds)
  done (took 13.38054728 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.682401461 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.833425137 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.897401195 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.348079341 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.68236128 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.685507332 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.636380248 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.685621673 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.684067078 seconds)
  done (took 18.751861054 seconds)
done (took 103.388111563 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.543601348 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.67953015 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.937959242 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.779950355 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.696453153 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.972028491 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.691544345 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.937958842 seconds)
done (took 41.853970057 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.754993443 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.380054713 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.393312956 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.741081437 seconds)
  done (took 15.12886668 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.675797389 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.004500081 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.696707549 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.509474431 seconds)
  done (took 21.503842987 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.036584826 seconds)
    (2/2) benchmarking "read"...
    done (took 2.019354115 seconds)
  done (took 5.669699462 seconds)
done (took 50.670679267 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.678993906 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.67746553 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.677931158 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.680340278 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.675351636 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.680191194 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.683031197 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.674941126 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.676612906 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.679472015 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.679834288 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.678240843 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.681850238 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.678646666 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.676897835 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679977091 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.675106342 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.677924924 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678158485 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.68093399 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.678483094 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.678392741 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.676848542 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.679740972 seconds)
  done (took 41.895113822 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.678524418 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.679298094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.680220672 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.679087462 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.677974259 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.67866849 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.679062735 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.678970892 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.679512583 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.678276441 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.679933265 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.678946588 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.679705764 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.680295518 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.679489572 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.679923873 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.678660421 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678988797 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678606867 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.680039395 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.678786729 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678105781 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.677982389 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.677843181 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.677198954 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.679668178 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.679331006 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.678967499 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.678069942 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.681471806 seconds)
  done (took 51.981495616 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.679259502 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.680915448 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.678531762 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.679752114 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.679086989 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.679499122 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.679167039 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.67701149 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.680999546 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.682679372 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.679332286 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.680290468 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.677009661 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.678238435 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.679271054 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.678833477 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.680790586 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.680611527 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.680909853 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.680563282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.679738429 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.680267762 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.679811 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.680295798 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.680507037 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.680747592 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.679506949 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.679875301 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.681340054 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.683685448 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.681122905 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.680500485 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.680371765 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.679501109 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.681728423 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.680762599 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.684410243 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.681429496 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.681629023 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.681247073 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.684499319 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.680583725 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.683722457 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.679746412 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.681079907 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.681765888 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.680430392 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.682145131 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.681163511 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.682118558 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.680870714 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.681297051 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.683103234 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.68389411 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.68373574 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.681376911 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.683133415 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.681464671 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.682148749 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.681782904 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.680953281 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.681608769 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.682191847 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.682158672 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.682845594 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.683801031 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.68240386 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.681249625 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.684323383 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.684050792 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.682909929 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.684866425 seconds)
  done (took 122.658110827 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.683538469 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.683623168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.68363296 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.684740764 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.683788516 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.683395907 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.683444919 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.68421665 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685113683 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.684244524 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683582419 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.68551644 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683440049 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.686083403 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685656874 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.684942105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.684516983 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.684898745 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.686788555 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.683163016 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686126885 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.684034084 seconds)
  done (took 38.672880082 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.684528128 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.684892414 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.684452288 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.685941009 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.685558407 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.685042784 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.684678651 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.684259992 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685780739 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.685014378 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688332048 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684977684 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.683931167 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686282608 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.685168924 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.687487071 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685256473 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.684868168 seconds)
  done (took 31.951974629 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.68537331 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.683924194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.68421366 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.684511282 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.68667728 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.686521349 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.686083198 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.686033305 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.686318531 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.683831444 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.684000577 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.687787943 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.68490192 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685285663 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684387009 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.684912842 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.686959414 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684195101 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.684482224 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.684379395 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.686707828 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686969525 seconds)
  done (took 38.697409781 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.685354697 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.685390788 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.688786616 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.686774968 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.685530714 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.686860357 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.68410885 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.686536193 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.686723871 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.687897528 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684206647 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.686690617 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.685727961 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.686474214 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.686416404 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687338363 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.684463113 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.689736029 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.686058531 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.689440992 seconds)
  done (took 35.34979747 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.686487842 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.687489896 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.686452738 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.689077278 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.690592853 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.69029171 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.688778689 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.689193605 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.687975674 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.691583837 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.69146134 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.688107858 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.687827913 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.690342667 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.689643812 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.690681235 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.689963835 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.691110518 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.688124935 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.688831042 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.689520076 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.688697737 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.690843233 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.691927959 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.687755201 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.689514706 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.687637578 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.687914509 seconds)
  done (took 48.91838529 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.691055296 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.688456773 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.686567513 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.687825 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.686061471 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.688760172 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.689027604 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.689981755 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.689981137 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.68880394 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.690031783 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.688970464 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.691452975 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.688675989 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.687513358 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.687183836 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.687199261 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.689427075 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692250286 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.689036373 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.690321901 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689503672 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.688214087 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.69048617 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69042189 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.693591345 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.690237888 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.692779952 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69007423 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.689764874 seconds)
  done (took 52.304106658 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.7099166 seconds)
    (2/2) benchmarking "in"...
    done (took 1.713319952 seconds)
  done (took 5.043941791 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.689500922 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.687758701 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.689855816 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.691043531 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.691648394 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.687806799 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.690065185 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68980919 seconds)
  done (took 15.141023122 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.691597811 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.690190187 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.689969659 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.689878084 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.690322554 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.691390151 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.698376491 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.692459061 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.692075488 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.690734047 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.698584932 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.698880082 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.693490212 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.692764434 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.693321958 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.692908681 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.689965333 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.690634722 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.690351796 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.691558276 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.691004268 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.694297226 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.694319984 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.690113678 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.691609544 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.704388151 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.697979633 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.688477838 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.692194472 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.693939737 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.690341027 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.690259172 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.690594292 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.691191554 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.690880175 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.693159586 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.700612325 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.691455846 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.69931757 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.691563598 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.691490901 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.693538023 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.693094885 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.694749974 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.694887368 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.689955874 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.692999459 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.690339691 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.694022806 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.695244487 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.700515655 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.691109918 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.691189225 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.69619722 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.69376981 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.700391884 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.69110125 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.698737881 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.703451815 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.703230178 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.704275151 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.70363052 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.696666958 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.69177712 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.705039216 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.723856771 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.702843305 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.689503808 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.691496314 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.692652176 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.703003296 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.703037111 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.702392496 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.691323528 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.694369128 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.693227731 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.694632111 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.691530188 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.699881421 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.694476279 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.690641031 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.693880745 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.705062534 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.719459415 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.695996104 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.694047782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.693217687 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.693784108 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.694162418 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.705547689 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.692070496 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.691670286 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.695760252 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.696973989 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.693740655 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.691928527 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.694138299 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.698430435 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.692743224 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.6934747 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.694218926 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.697041913 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.707633736 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.693621041 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.692345091 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.700073415 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.6952383 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.69696136 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.70051429 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.693809894 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.695618709 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.697209962 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.702988577 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.693976641 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.698970053 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.70610273 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.696608111 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.69999154 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.693550814 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.692248976 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.704574412 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.72570094 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.69383728 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.695568736 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.702323356 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.710223285 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.695980201 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.698771537 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.694995825 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.697063973 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.695748306 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.699936404 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.698471676 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.700094962 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.696187266 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.697685058 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.697653995 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.696776755 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.697111808 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.699642067 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.701059139 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.698634072 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.698487431 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.699644919 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.696334589 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.700526209 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.706290049 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.697807578 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.696868885 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.700628062 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.696343169 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.696243042 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.70152361 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.69887605 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.700483247 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.699040077 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.700102649 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.698101365 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.701142223 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.697969481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.698334223 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.698688314 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.705730758 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.696742761 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.70469633 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.698082718 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.697302041 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.699885751 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.69729634 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.698327703 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.700508987 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.697737547 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.70240495 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.706511565 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.697977762 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.697553808 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.702665578 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.699652877 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.700723733 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.699664778 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.701704607 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.708527984 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.698508642 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.703756259 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.697606511 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.697403898 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.696383657 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.70370162 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.699093082 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.696694952 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.703058184 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.711277009 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.708886149 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.711818966 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.699720707 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.700721068 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.700845858 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.704308983 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.702455735 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.698085105 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.698011619 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.700237944 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.700976416 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.698276603 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.703446125 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.699266121 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.700032543 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.698801843 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.697205874 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.697900429 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.699218895 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.702314245 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.701974719 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.699240665 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.703135917 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.698157537 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.70022902 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.698395792 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.699798487 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.69959285 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.70065569 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.700056407 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.707407728 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.698850906 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.702607796 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.702851317 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.701264521 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.70147077 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.700160003 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7031061 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.701113204 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.708636167 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.701817824 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.702910258 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71026028 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.702339797 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.702267782 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.703961787 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.69991871 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.698845411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.703074233 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.711269061 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.700019303 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.701326166 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.701445183 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.705203486 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.701271483 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.708352892 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.701993757 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.704481326 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.699387198 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.704380886 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.704291435 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.705343991 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.703536203 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.704321756 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.705032825 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.702319848 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.700694571 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.705456897 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.703513162 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.701888617 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.701562613 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.705979067 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.711109489 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.707799114 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.701969701 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.709352129 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.704550414 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.705711754 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.703409876 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.704600903 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.704022485 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.715816542 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.709390865 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.710402376 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.706667236 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.703046962 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.71066829 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.704621695 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.709328897 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.704250844 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.705591448 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.706765404 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.705763115 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.70267463 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.704686303 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.703119765 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.70844318 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.703861501 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.709735608 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.704988748 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.705924259 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.7043087 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.704017886 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.701942253 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.704733126 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.705369298 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.707828071 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.709094725 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.705538572 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.70678495 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.713851171 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.70717337 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.706639377 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.705147034 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.706986281 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.704216189 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.705578909 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.706126162 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.712543188 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.713628011 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.708061433 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.716362369 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.708526047 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.717033017 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.704963281 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.708006487 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.713807322 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.705141319 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.703151126 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.705796985 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.705485965 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.713694626 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.703822596 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.709702504 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.710228034 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.705143146 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.705421956 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.706461115 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.706517094 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.70699582 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.706238689 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715585336 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.709213822 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.712112555 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.708977574 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.705527609 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.705811949 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.706515651 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.707278399 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710932337 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.706807906 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.712861645 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.705171359 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.707764229 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.706388444 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.704684431 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.705345333 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.706179665 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.706686071 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.712448254 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.706605686 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.710133686 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.706401401 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.713152531 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.707384871 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.715901723 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.707969307 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.708927821 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.709796119 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.710189045 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.710456607 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.707650802 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.709693437 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.704818933 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.709326739 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.709345563 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.705745394 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.710077195 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.708564398 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.708141063 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.707734147 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.717421524 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.733648007 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.712624242 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.712977987 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.706750882 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.710330684 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.71295257 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.70693592 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.707654095 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.711304107 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.718985646 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.71826837 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.709501614 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.706169693 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.712013099 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708298295 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.708277492 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.708660074 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.710636905 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.707934278 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.711730874 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.708044794 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.715048441 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.70994481 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.713445529 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.711978063 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.711123378 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.72094473 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.710464233 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.708278496 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.711064695 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.70908533 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.712837897 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.712976481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.713995017 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711947495 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.709940121 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.710816444 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.718370802 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.719948884 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.714667782 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.710037023 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.710307877 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.710297277 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.71015948 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.711042877 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.710071908 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.710734105 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.712664177 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.709628454 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.711252877 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.711605185 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.708207982 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.711938207 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.711368459 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.715488264 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.719692505 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712300294 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.710531008 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.712699682 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.710737756 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.712956203 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.712130312 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.720716275 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.712357744 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.725990623 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.722773529 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.713786807 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.713760507 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.716381992 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.720816298 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.711094723 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.713232524 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.713293937 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.713886485 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.716407582 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.717347842 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.712727766 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.721236365 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.715047838 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.711578171 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.721121439 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.713368433 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.711873162 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.71410193 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.716648951 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.716269041 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.713984507 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.714478089 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.710936113 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.719568988 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.715234053 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.713759935 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.715345575 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.711858109 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.712962144 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.715829667 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.713361904 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.717156183 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.712717677 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.71507168 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.716503947 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.715024577 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.714874889 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.717535554 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.716026808 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.722370115 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.723900445 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.716527625 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.718747835 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.718494215 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.712560455 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.712992944 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.711898205 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.71357523 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.712401568 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.715447941 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.71660591 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.716373159 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.718317453 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.714804043 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.716218511 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.716434397 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.71433699 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.720171524 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.726289086 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.723623001 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.715418844 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.715698824 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.715848866 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.718880809 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.71446961 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.714172576 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.714905867 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.716900756 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.713286599 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.718140153 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.718258491 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.716429593 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73280929 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.716139173 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71701463 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.71806839 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.720297167 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.713451793 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.712597687 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.711770571 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.720063257 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.720324696 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.723976985 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.715240178 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.722881419 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.716789275 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.718995237 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.720332857 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.717857746 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.725326354 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.718303013 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.714716378 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.714847195 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.721184841 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.735275228 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.714433082 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.728626019 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.749757102 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.715982618 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.718437368 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.716320163 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.716945703 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.71629325 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.719845567 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.716746586 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.715068362 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.714468628 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.717966722 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.718211745 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.725902183 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.718518381 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.717801202 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.716842185 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.716524766 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.719057453 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.715840138 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.720306268 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.719658322 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.715908443 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.716551966 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.717089046 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.717082248 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730555836 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.727916313 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.719214919 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.71735728 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.715620561 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.720967552 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.719734755 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.729054444 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.727263991 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.718733738 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.718462775 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.718918951 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.714853366 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.714953943 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.717914512 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.720118622 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.716343817 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.716871114 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.726775357 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.726124607 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.724506007 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.719596166 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.716701484 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.717004795 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.721201308 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.719597294 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.71777541 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.720992666 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.718591521 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.724553485 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.715840125 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.717713675 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.723715152 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.724869618 seconds)
  done (took 1018.953072207 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.717759671 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.720081886 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.715583076 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.718526509 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.717583775 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718012378 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.720395087 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.719024395 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.717021978 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.718165221 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.72033895 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719868244 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.717879156 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.720679454 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717581225 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.721176748 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.720678142 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.72089099 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.718361851 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7182507 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.720356288 seconds)
  done (took 37.75076583 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.71679983 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.721697404 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.719147946 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716584703 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.722343635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.71980572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.72186091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720782919 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.719990905 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719620509 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.719826658 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7205582 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.720994718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.722933992 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718625919 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719403754 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.721697561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.71997308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.72204754 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.720238889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.718736006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.723590107 seconds)
  done (took 39.500699253 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.721113828 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.722245223 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.723756048 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.721395577 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.719346961 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.725836357 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.72115493 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.720882641 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.722739925 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.725236511 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.722157025 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.724288423 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.728864485 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.732181492 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.724521458 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.720601091 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.866090211 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.723558077 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.722700014 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.720520854 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.72400181 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.726367784 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.722457676 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.722834538 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.725711699 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.724700433 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.724781208 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.724255911 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.725288628 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.728441853 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.730920133 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.723040624 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.726577867 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.727550663 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.722529808 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.724608889 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.729942868 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.727429384 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.723885264 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.725941688 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.735279189 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.746773299 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.72470325 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.730905921 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.723250306 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.722404861 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.729699882 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.731718988 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.72294062 seconds)
  done (took 86.344739499 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.723897682 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.723681291 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.724810555 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.725821781 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.722626591 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.726104903 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.72404882 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.723251505 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.726311709 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.724513602 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.724576337 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.723691884 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.723530614 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.728186609 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.728073604 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.727402134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.728413853 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.72872253 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.728636391 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.730495401 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.727912104 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.728764887 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.728676734 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.729740924 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.728766199 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.728730657 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.729178593 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.729659902 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.728456708 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.728555489 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.729165966 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.728138979 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.729302124 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.729127895 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.728229231 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.727846586 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.728825138 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.727778845 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.72905462 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.728485246 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.728458745 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.72799423 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.728493056 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.72719396 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.728837458 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.727172594 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.727844047 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.727579531 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.729049945 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.728403421 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.725883974 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.730930489 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.728796312 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.728599831 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.728478548 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.729330359 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.728168241 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.727933286 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.728387453 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.730963012 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.728037759 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.729377349 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.729514982 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.729358748 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.72763112 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.729047774 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.728743206 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.729150584 seconds)
  done (took 119.149480038 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.728869906 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.729459447 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728327093 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722340749 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.721717324 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.722096721 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.720545308 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.72244708 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.721427941 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.720925127 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.720927001 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.720800516 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.71998417 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.720561585 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.723844049 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.721155229 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.719688334 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.720975706 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.721128484 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.720296633 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.720687173 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.721215685 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.720959993 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.719590695 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.720946773 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.721393568 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.721281631 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.72109738 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.719939985 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.719823482 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.721131298 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.721103198 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.720614782 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.722087454 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.720586636 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.721433572 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.721231191 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723096347 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.72256403 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.722587999 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.721555981 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722297493 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.721079683 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.722107495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.722063826 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.722413984 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.721931341 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.721643064 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.721838517 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.721764592 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.721327064 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.721977629 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722713684 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.720451819 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.722678344 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.721311081 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.721340533 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.721987253 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723002837 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.721580039 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.722555761 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.72068715 seconds)
  done (took 108.416862226 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.721076674 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.72041151 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.720478052 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.720935581 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.72029298 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.721118084 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.720923276 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.721623718 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.721058873 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.723095066 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720867398 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721539508 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721673662 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721463197 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.722603038 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722861748 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.720727015 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.721561057 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721505213 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.721748143 seconds)
  done (took 36.086206212 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.721672367 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.722386949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.721841741 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.721764636 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.72075202 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.724053982 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.722733148 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722596856 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720067421 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72223873 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.721684882 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.720950507 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722851615 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.721228033 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.72198599 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.721980714 seconds)
  done (took 29.21081761 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.722481046 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.721411577 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.723290637 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.722381944 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.724127745 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.722456808 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.723183975 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.724335462 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.721090205 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.72180177 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.721259234 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.722912852 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.719037431 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.720269465 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.719595006 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.72047402 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.720659844 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.720179868 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.71819456 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.718390561 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.715429845 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.717666342 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.716551137 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.719366595 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.716138998 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.71920014 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.714955264 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.715289491 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.716192272 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.71873517 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.716996252 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.716354895 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.715349523 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.715925541 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.716019165 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.712490591 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.710451033 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.709120413 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.711274022 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.710661705 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.71155771 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.712106817 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.712181986 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.711173998 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.710125346 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.712083182 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.71257045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.710926996 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.710910397 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.711428805 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.711187031 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.711564424 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.710509384 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.71304301 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.710855091 seconds)
  done (took 96.064866165 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.710263295 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.710271875 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.714715701 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.709929636 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.710448697 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.710485952 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.710302152 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.712788046 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711632831 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.711981409 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.712300349 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.710872286 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712337606 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.714332879 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.710271304 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711432266 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.712346996 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.711520429 seconds)
  done (took 32.452301878 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.710648122 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.712094489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.710674062 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.710220794 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.711631561 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.712138534 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712202074 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.712718824 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71332764 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.71205482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712604068 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.713218847 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712255902 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.710303855 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.710064016 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710660368 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.710243996 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.710553477 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.710524467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705820611 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.707076178 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.708329416 seconds)
  done (took 39.283480757 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.70973438 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.713404416 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.725460086 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.729584768 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.729170382 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.745862677 seconds)
  done (took 11.993739608 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710230891 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707155782 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.706352375 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705943802 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706186006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705573766 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70962264 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707495962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706002685 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706401681 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710436971 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70747681 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707792884 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708283289 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707649086 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704432603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704241368 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70663121 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706777393 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706061434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705347659 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705334398 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705812046 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707662689 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704827467 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705528318 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705248771 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703525688 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702878874 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707508249 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705295051 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706965167 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705645748 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704360993 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706809279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70593332 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704361365 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704510034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705160225 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704899745 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.704455633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705047129 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704758355 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703671756 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703340501 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704659524 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704921527 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707844611 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702830395 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703325701 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705438521 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70275445 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704327558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704750322 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703112564 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703092771 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702732881 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705318045 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702702586 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705667293 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70177182 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703872367 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703454344 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704190943 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703465995 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703131264 seconds)
  done (took 114.193966506 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704642745 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.702846163 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702796739 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70534797 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700598352 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701014255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704998286 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703849315 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702676204 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707574048 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699262127 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70256789 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702992042 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702549509 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702680193 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706202987 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70029278 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705547036 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70284528 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700007934 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700529671 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699885346 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702348576 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700191502 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702354809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7023259 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701397849 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705574975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702317384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701780401 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700970701 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701046254 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700683368 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.702376731 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700920654 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700301991 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701177181 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700803672 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700446043 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700659518 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70053695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699385334 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700322599 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701778215 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701187049 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700973852 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700407346 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70023667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701328234 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699284448 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703028725 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700354164 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700904868 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701520335 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699141069 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70087509 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702288398 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700265328 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701972471 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698563622 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700204638 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701923557 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70552587 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699395769 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699541594 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699952231 seconds)
  done (took 113.949367179 seconds)
done (took 2367.577611302 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.722487115 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.70315683 seconds)
  done (took 15.058846098 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.864018304 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.813204066 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.702035725 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.709479664 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.700939262 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.700784739 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.705839086 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.69959193 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.699484261 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.701790433 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.701238185 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.884868674 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.760607618 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.700455941 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.702662262 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.793036281 seconds)
  done (took 49.476729704 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.701243392 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.701871942 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.712419604 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.707458997 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.703575943 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.714521733 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.732113833 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.705489458 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.73285154 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.71700108 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.770526774 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.713928969 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.701207791 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.751879793 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.7158601 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.723946797 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.791417881 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.778245414 seconds)
  done (took 32.706742645 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.78036428 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.709551242 seconds)
  done (took 10.13057874 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.716018906 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.758816954 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.703947822 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.719110608 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.704506439 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.721420953 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.727904696 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.7098918 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.710627985 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.727932426 seconds)
  done (took 68.834781261 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.702804345 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.701339498 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.703619336 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.699862491 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.696026736 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.702305762 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.701256615 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.698449748 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.35335229 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.733391048 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.707235156 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.705056531 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.700634989 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.700774313 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.697557996 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.722230437 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.81186466 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.701094986 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.697226228 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.704835592 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.701967793 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.748774206 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.717253521 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.701474401 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.730514933 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.353358856 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.708603272 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.706328384 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.815127485 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.698923659 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.69915421 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.884754628 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.70118529 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.1673457 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.963430027 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.705384594 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.716396364 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.705000689 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.696815766 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.823857261 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.697948074 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.706225275 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.595771982 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.942883529 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.791794566 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.746254627 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.001872434 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.71593224 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.702157019 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.725919363 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.703904083 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.698872082 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.711375816 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.216035082 seconds)
  done (took 123.373214218 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.699501485 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.044972037 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.868227186 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.697801598 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.981504674 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905779814 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.699472166 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.742017805 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.705861293 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.923417125 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.949801461 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805005603 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.698391373 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.697625599 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.697384122 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.698284494 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.849423772 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.768880299 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.699820562 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.699092062 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726102569 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937611008 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.822279227 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.701426302 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.725839794 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.913386928 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.818519514 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.801114802 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.475775252 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.702057211 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.760761758 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.703848918 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.699708282 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.694879423 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.849623461 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.796317178 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780134239 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.700473112 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.699980735 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.697341634 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.355554675 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.89606654 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.792481565 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.832611842 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.947073861 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.902604235 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.476338439 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.697742384 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.432055813 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.861489889 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.926505289 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.926778892 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.820296931 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.705268486 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.03742919 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.697844037 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.69878844 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.946828139 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917527434 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.795528265 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70250867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.699215674 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.704281812 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.935950587 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.700304776 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.794379803 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697698605 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.697293874 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.79471233 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794243661 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.925962968 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.912177266 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.726244003 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.03654006 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.217311609 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.94454993 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.770031901 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94678529 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.702702966 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.701097015 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774311089 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.536998865 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.949405224 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.943234796 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941720219 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731906678 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.417513902 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.699370871 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.925064673 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.917001224 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.956544763 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.940827901 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.933940315 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.043906878 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.700750971 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.703738684 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.941561858 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.821943213 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.704225878 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.047103286 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926049301 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.220544354 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.726658038 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.003256654 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.827016216 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.703551137 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.33022297 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.70156571 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.930584432 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.740071348 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.700176561 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.706230845 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.917552373 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.68823872 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.69712981 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.34561293 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.76338471 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.700687018 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930737239 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.703067562 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973568246 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.705194723 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929428068 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.15069925 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.732847074 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.872462558 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.949621374 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.707115075 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.942501121 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.949574421 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.818066053 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.919011395 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.416956948 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.703259746 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986047393 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.701881415 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.701393699 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.870416039 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.70362423 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.841692035 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.707694673 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991988628 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724444157 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93169153 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.706187266 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.954281307 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.732343601 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.751501369 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.704482407 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.820207281 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.703272537 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.527590501 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.858810268 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.12124297 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.703217017 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.260519064 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.6999282 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.848260008 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.929338393 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722956225 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778580616 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.363844015 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.700272699 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780056002 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.726067702 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.090924204 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.704959629 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.953693962 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.708369939 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.703501612 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.706206147 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.933255909 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.883494061 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.711105833 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.702094745 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.606307795 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.703236326 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.704992827 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.883601329 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.225100391 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.703137413 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905553704 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.708411388 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.832603975 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.708919467 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.776884873 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.037412549 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.703479971 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.703226999 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.704190845 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.706061562 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.707453712 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.910652162 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.728748108 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.197635103 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.840134708 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976345992 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.010578447 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.946463529 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.746697567 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.710937167 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.956401345 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.709972576 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.767040289 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.706826939 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.722847003 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.930227613 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.710511336 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.917416968 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.974982962 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.549680062 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.749334188 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.708346944 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.706671768 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.705528805 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.84760714 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787827136 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.707852144 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.704362477 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.819924503 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.827075602 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.919441431 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.707305483 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.7818535 seconds)
  done (took 865.174508422 seconds)
done (took 1166.388873294 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.704712081 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.712004044 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.708369478 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.710209371 seconds)
  done (took 28.47408869 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.716781535 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.707177987 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.711751717 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.708312582 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.710167191 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.710446435 seconds)
  done (took 11.903902956 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.703325359 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.711073941 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.709753944 seconds)
  done (took 20.763421129 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.780070028 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.090989328 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.837704441 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.125480868 seconds)
  done (took 9.473295552 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.708018875 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.713185019 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.707677284 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.709223405 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.720022954 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.717623668 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.708297199 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.711190259 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.73433346 seconds)
  done (took 17.072201812 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.940866954 seconds)
done (took 93.266846084 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.730621289 seconds)
    (2/309) benchmarking ("sort", Float64, false)...
    done (took 6.424927653 seconds)
    (3/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.876443692 seconds)
    (4/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.723688334 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.902726632 seconds)
    (6/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.719644513 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.542993275 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.522902 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.121484404 seconds)
    (10/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.824286657 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.739982182 seconds)
    (12/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.852530077 seconds)
    (13/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.719332247 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.255462254 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.836620494 seconds)
    (16/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.729172034 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.937182924 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.758929939 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.881357431 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.021322029 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.733033392 seconds)
    (22/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.003025318 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.748016655 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.941162893 seconds)
    (25/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.726980474 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.704295045 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.809510479 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.980459923 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.725282087 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.727343394 seconds)
    (31/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.999806486 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.752448988 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.722269283 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.813287871 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.096322942 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.397090931 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.872280968 seconds)
    (38/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.210919889 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.751812006 seconds)
    (40/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.968702881 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.727397104 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.367422 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.391146355 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.919869748 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.693596268 seconds)
    (46/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.867973948 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.72613539 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.892992662 seconds)
    (49/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.725814646 seconds)
    (50/309) benchmarking ("sort", Int8, false)...
    done (took 4.701653139 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.830570566 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.075892707 seconds)
    (53/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.554378248 seconds)
    (54/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.812063634 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.72263242 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.732908641 seconds)
    (57/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.927767853 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 1.947497264 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.96770962 seconds)
    (60/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.726557206 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.545357684 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.967584881 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.049770811 seconds)
    (64/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.2976442 seconds)
    (65/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.18236956 seconds)
    (66/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.731472986 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.037394419 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.87905106 seconds)
    (69/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.542261624 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.889322011 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.745563101 seconds)
    (72/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.967804015 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.854030503 seconds)
    (74/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.746351198 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.724247453 seconds)
    (76/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.929441341 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.816723947 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.828499647 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.913088857 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.622499242 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.653897388 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.746728539 seconds)
    (83/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.747781067 seconds)
    (84/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.176277796 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.852790907 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.736899153 seconds)
    (87/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.858942883 seconds)
    (88/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.837097396 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.042451202 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.885975886 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.832310302 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.726304922 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.960459551 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.729779119 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.827993076 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.970922199 seconds)
    (97/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.754162318 seconds)
    (98/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.904242752 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.630547054 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.043032673 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.054438539 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.948400972 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.728576487 seconds)
    (104/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.967257266 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.870987932 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.755178352 seconds)
    (107/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.10780499 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.75527951 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.726791952 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.822681482 seconds)
    (111/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.819432403 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.917876326 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.106329639 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.705186772 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.758603134 seconds)
    (116/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.243588133 seconds)
    (117/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.831499049 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.945815811 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.346626549 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.356605141 seconds)
    (121/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.731715745 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.255086356 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.130395808 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.517252908 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.923130414 seconds)
    (126/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.111280429 seconds)
    (127/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.737042269 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.852981772 seconds)
    (129/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.728005506 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.438398167 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.752594155 seconds)
    (132/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.761528254 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.862374992 seconds)
    (134/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.750701288 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.854684602 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.052254943 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.830303687 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.761719687 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.730520913 seconds)
    (140/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.134999284 seconds)
    (141/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.868231707 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.734032338 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.732392465 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.98305709 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.032530997 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.352197397 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.989969375 seconds)
    (148/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.806439591 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.746278587 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.811107689 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.745883845 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.048645086 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.486996963 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.754524027 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.898602702 seconds)
    (156/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.196942852 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.812913095 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.731228279 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.945010821 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.964907464 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.754895876 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.867203746 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.906540106 seconds)
    (164/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.220933052 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.982613405 seconds)
    (166/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.900401159 seconds)
    (167/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.937434128 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.737313768 seconds)
    (169/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.640807129 seconds)
    (170/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.743910629 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.06753305 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.742084309 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.088138513 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.732921332 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.930619363 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.739239978 seconds)
    (177/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.895284846 seconds)
    (178/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.411978986 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.998487688 seconds)
    (180/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.760809024 seconds)
    (181/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.73285733 seconds)
    (182/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.731432425 seconds)
    (183/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.831779053 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.616748159 seconds)
    (185/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.747952011 seconds)
    (186/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.753748968 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.645702868 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.873282077 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.412947702 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.000311651 seconds)
    (191/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.992040956 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.040685671 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.041067446 seconds)
    (194/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.870160423 seconds)
    (195/309) benchmarking ("sort", Float32, false)...
    done (took 5.452012851 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.736057203 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.461625544 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.246081496 seconds)
    (199/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.869270431 seconds)
    (200/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.841087286 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.075038462 seconds)
    (202/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.063881602 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.729673261 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.207605817 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.844366273 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.878799022 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.801470647 seconds)
    (208/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.961016767 seconds)
    (209/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.935966707 seconds)
    (210/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.735937661 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.614953404 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.847348863 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.070705739 seconds)
    (214/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.794812503 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 6.727207324 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.968904499 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.729934844 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.072378098 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.630329277 seconds)
    (220/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.869660007 seconds)
    (221/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.810847481 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.523410203 seconds)
    (223/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.811691421 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.376644752 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.932793586 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.808987788 seconds)
    (227/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.921562477 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.924582242 seconds)
    (229/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.030467851 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.737447929 seconds)
    (231/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.99299466 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.856988967 seconds)
    (233/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.976628598 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.73392892 seconds)
    (235/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.948597097 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.740743265 seconds)
    (237/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.960478885 seconds)
    (238/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.730344409 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.035766218 seconds)
    (240/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.757187089 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.299704906 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.734657121 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.720886625 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.068764036 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.418558494 seconds)
    (246/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.812495067 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.128820474 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.91285067 seconds)
    (249/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.811656272 seconds)
    (250/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.789910805 seconds)
    (251/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.73196788 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.871931332 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.208611493 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.864149418 seconds)
    (255/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.733340743 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.344070236 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.547364782 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.837697172 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.732450061 seconds)
    (260/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.736858884 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.82632778 seconds)
    (262/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.976253522 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.735666932 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.01436637 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.736881854 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.29359824 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.073388388 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.032773161 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.080289449 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.738912928 seconds)
    (271/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.366961552 seconds)
    (272/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.078936446 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.067756306 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.731784685 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 3.145613021 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.783880612 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.732559742 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.83010595 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.733772073 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.889743583 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.734466534 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.842716453 seconds)
    (283/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.940269149 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.734625959 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.96317713 seconds)
    (286/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.733572133 seconds)
    (287/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.132954692 seconds)
    (288/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.624846628 seconds)
    (289/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.756502285 seconds)
    (290/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.733524304 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.935077909 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.165356206 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.550208406 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.793140662 seconds)
    (295/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.81081658 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.922929927 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.052617613 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.769357752 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.825271645 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.038276364 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.7383492 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.516247653 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.654205159 seconds)
    (304/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.852511424 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.955803676 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.73859214 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.875210645 seconds)
    (308/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.864791192 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.122521719 seconds)
  done (took 962.99878965 seconds)
done (took 964.945151967 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.760702291 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.754388501 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.736146835 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.758023413 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.850532529 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.784504049 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.750948356 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.742276466 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.787513058 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.786786321 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.735933032 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.782920277 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.738285567 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.737541645 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.737643966 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.755476 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.048999892 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.770508988 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.755406957 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.749876003 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.755412363 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.736149641 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.787567045 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.784404019 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.741359222 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.742534637 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.742393474 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.758531046 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.851595545 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.741186411 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.742333064 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.752695832 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.048332615 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.766861167 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.736165571 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.758287229 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.750842076 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.749736896 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.744710927 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.771717572 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.133758429 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.778518059 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.740660129 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.740755324 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.738912413 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.745878764 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.740669954 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.74785771 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.754829104 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.75647055 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.128409967 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.796563756 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.744628252 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.739439575 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.751950877 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.742259751 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.744757996 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.75605649 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.760624305 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.756164567 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.034970651 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.777370231 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.743680359 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.758608951 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.749432582 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.164825765 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.777849313 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.745972147 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.135076385 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.789100728 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.162380779 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.791117516 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.742024648 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.755607545 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.772088309 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.048135862 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.771067629 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.739979325 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.750694843 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.739192389 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.753153917 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756695465 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.745314369 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.740621477 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.757024055 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.790694826 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.753009811 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.741073508 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.753270373 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.761345921 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.751023797 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.752798395 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.745311039 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.740227999 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.754857349 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.745823847 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.745566653 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.743821947 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.746371785 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.753843617 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.134828519 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.798579067 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.739537625 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.738778852 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.741118752 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.758074402 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.135512666 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.782956794 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.765840787 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.791535564 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.743981295 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.036091775 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.775190574 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.760341511 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.755077157 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.744411872 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.741725883 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.035392067 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.160827997 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.796645063 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.743296558 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.741652616 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.759331081 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.744413294 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.739274533 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.052375397 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.776842439 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.758676351 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.864906869 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.755425036 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.774650648 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.741303764 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.7468683 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.79312991 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.760431628 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.77555793 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.745141259 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759179149 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.762206965 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.740903664 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.756711171 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.755982277 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.743771734 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.752641489 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.741428329 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.794333464 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758933679 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.758869826 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.765687328 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.866676115 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.740961196 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.036955614 seconds)
done (took 274.390120999 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.824075776 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.743096327 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.833645093 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.742232594 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.834446004 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.817878783 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.743864996 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.742366596 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.743293279 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.229240695 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.742485972 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.749208462 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.741637942 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.743273374 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.815511125 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.745135973 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.744108631 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.175017965 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.744219614 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.823731071 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.743428496 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.743316623 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.742699048 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.22912676 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.742972879 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.743280415 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.823252633 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.744513835 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.178541361 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.743801155 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.74230979 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.179611482 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.822966699 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.771157229 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.751270611 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.749130515 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.837005676 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.754884789 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.813599193 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.813270548 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.839981838 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.778296312 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.746045293 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.743615407 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.746556246 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.745789309 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.743943991 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.777499243 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.745418455 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.75294734 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.178726597 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.749857924 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.752837495 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.74478103 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.743255772 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.773176989 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.746111125 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.746220381 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.825422935 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.74711204 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.814501053 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.232578819 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.22896581 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.745897005 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.745326313 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.746031826 seconds)
  done (took 176.767379026 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.811200486 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.822406273 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.813021907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.750307208 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.794061856 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.812529701 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.750714024 seconds)
  done (took 14.232846673 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.753218933 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.746167321 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.794384759 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.797208474 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.745442288 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.901674992 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.747474245 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.758848412 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.75276504 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.774004985 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.747408849 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.748171357 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.753889641 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.746866258 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.7957777 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.759188809 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.862865661 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.749030876 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.746109107 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.8954001 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.751925782 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.754479857 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.77134186 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.757997151 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.748318287 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.754020931 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.319133931 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.747926541 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747086322 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.747336425 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.747037818 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.788685445 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.747323248 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.747940971 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.748250998 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.86091988 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.748622461 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.746513789 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.746124077 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.747098745 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.747335109 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.746378509 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.748650919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.748323389 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.748111778 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.771337763 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.747700111 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.748105316 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.748521917 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.747910405 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.773612532 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.749145845 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.748040121 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.752796975 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.790658209 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754212543 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.750513903 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.748327146 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.748403016 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.749634461 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.898141891 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.799512075 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.748656809 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.798719213 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.750482473 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.750375783 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.749231096 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.748926114 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.836827281 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.74971066 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.799096239 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.750276724 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.908789021 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.771670769 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.7510501 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.752685042 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.752427658 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.749498395 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.749401692 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.757351006 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.749031648 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.752237549 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.756486793 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754441515 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.748725713 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.862367697 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889506531 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.749788379 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.751524816 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.75805475 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.750198522 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.792966269 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.749189762 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.749596532 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.80727605 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.864994585 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.776757534 seconds)
  done (took 193.890155794 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.756559607 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.75812416 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.751308435 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.766257895 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.750949317 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.752578889 seconds)
  done (took 12.219596457 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.752326317 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.754616188 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.751368649 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.749692291 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.75116024 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.749880316 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.750530799 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.753716068 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.75577388 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.750557819 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.751771052 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.751684031 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.751776093 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.750894743 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.752094548 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.75152141 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.750558871 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.751216456 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.751069414 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.751906952 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.001985128 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.751512349 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.752190611 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.756325001 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.758134813 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.751392789 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.765059578 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.751498522 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.752075141 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.760280513 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.757272914 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.75271164 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.755430858 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.757955365 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.75688504 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.755549836 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.75565109 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.753779356 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.752344059 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.753780833 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.75425643 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.752680791 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.754008878 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.754072867 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.753793757 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.7599223 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.756731337 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.766601405 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.753179771 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.754145524 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.754218343 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.752556352 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.753612295 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.753081063 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.75728805 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.758538228 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.760417081 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.754693578 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.753801766 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.757698268 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.757189927 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.75353072 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.756343044 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.757529272 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.761358494 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.755251793 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.757602308 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.757302326 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755267908 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.754327761 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.754283321 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.753829487 seconds)
  done (took 129.261491173 seconds)
done (took 528.065489515 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.012903099 seconds)
  done (took 8.700764398 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.83256434 seconds)
  done (took 8.57853529 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.227634859 seconds)
  done (took 9.918056716 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.771958236 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.78898095 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.768740721 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.763948162 seconds)
  done (took 28.804606726 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.983761985 seconds)
  done (took 8.670278615 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.775728987 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.752211208 seconds)
  done (took 15.286135832 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.782123098 seconds)
  done (took 8.470792363 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.81400137 seconds)
  done (took 8.507064314 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.767331238 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.784852253 seconds)
  done (took 15.266847789 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.757776406 seconds)
  done (took 8.445170171 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.927859136 seconds)
  done (took 9.717332314 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.766429977 seconds)
  done (took 8.52622794 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.831563609 seconds)
  done (took 8.518976451 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.822232734 seconds)
  done (took 8.510396893 seconds)
done (took 157.60846257 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.757860704 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.754565585 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.754546075 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.753265526 seconds)
  done (took 28.708771287 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.788655838 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.786895006 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.788905364 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.798834819 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.791843993 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.786475867 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.780051625 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.78054692 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.798404779 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.7911756 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.789093255 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.790387391 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.789356115 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.780931756 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.790867917 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.791416576 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.798623272 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.789332645 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.781050916 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.791713299 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.755530246 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.800462904 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.792411844 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.755164884 seconds)
  done (took 44.576813877 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.946445192 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.826824192 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.909493013 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.810689973 seconds)
  done (took 9.181000953 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.806582824 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.80864174 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.819785814 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.858792278 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.882609707 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.819920218 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.781473864 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.776902162 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.762234022 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.809210759 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.885359342 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.803707049 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.894022072 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.755839486 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.942835707 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.755897219 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.755959959 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.808784444 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.859029054 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.8719664 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.756540376 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.807846741 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.810609777 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.804870272 seconds)
  done (took 45.328807803 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.756866598 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.765434123 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.766671324 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.759335958 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.75941255 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.759570265 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.765662138 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.76091403 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.781417392 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.760221332 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.760384444 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.759252657 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.765936731 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.758081238 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.759155176 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.772148258 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.775034718 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.758873756 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.763038236 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.764873717 seconds)
  done (took 36.962481168 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.759349081 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.605518329 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.104615567 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.010246446 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.757164574 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.759977043 seconds)
  done (took 30.688459335 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.771100969 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.766120282 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.757847491 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.813951041 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.901594299 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.767312627 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.760813458 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.769727309 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.805336881 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.822824632 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.781117497 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.788538101 seconds)
  done (took 23.196673541 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.759402604 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.763238232 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.76290006 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.772142325 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.769930069 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.767297839 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.766989962 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.759128975 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.774566554 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.777903122 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.768071569 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.770910097 seconds)
  done (took 42.907828416 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835659212 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.633711643 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210142797 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233105457 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282022632 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961819381 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.757887042 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.843985429 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.760406753 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028538532 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.112798322 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963976161 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001964785 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480988701 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.762462246 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.247563505 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051206032 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98846665 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787938833 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.468345277 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869704195 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.258813467 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.4239796 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.872831488 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961753832 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.882778797 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.021923666 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.710984622 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807890387 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761047361 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766092518 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.760235357 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031517833 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878634241 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827995397 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766079298 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.172253503 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.464603915 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.773912282 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.433038288 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.283744158 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.882331836 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762767316 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76068755 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.68772931 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263441426 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85275805 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.763167166 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.462623736 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.762956663 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766317548 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835986245 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.761501786 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.573452287 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443240973 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.028822153 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.762266402 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76765048 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323357156 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790365553 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360180251 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.694210338 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.846912428 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434946738 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229710169 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.915001721 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.762498684 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763535216 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686851864 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.425908278 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879364813 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899318109 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.779977383 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403333336 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062538841 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.204132564 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819078584 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04712958 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.525548561 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.692577291 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97921744 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.708991068 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689131897 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.588605336 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.689899451 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983210067 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800021578 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.372150619 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799119557 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843345503 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.769238545 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778357764 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764187 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977770928 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.657504941 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765706603 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.091100763 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021014644 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781531597 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848557782 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.690163603 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.766617446 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008463968 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.968202054 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.971928407 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.265452315 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855814019 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.550832031 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.875574621 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.652177427 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.769596997 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.045578032 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826915116 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81055662 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883958773 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.720060941 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02087902 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.579363997 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.964969452 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.150613106 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005922572 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.113950931 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014778374 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826272744 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.772366757 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.763576204 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.497252318 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37849049 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.985929819 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.779793492 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265642024 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.769454996 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.76630551 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702085567 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.386354843 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.16873702 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.857324023 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980239497 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.679119266 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039028415 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692153557 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900760808 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.76229384 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.980753677 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.42399499 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.852853053 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017713707 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.847750486 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.948173017 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886969852 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78070694 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858753638 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782369534 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.030283075 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109972008 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.766655638 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.769489202 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.48468142 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.824968755 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768285477 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.771726059 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293980528 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050762941 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.792249661 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.771479574 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641503698 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.778290599 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830176396 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770684476 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.771619388 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.284866995 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271835777 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.773424482 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.404468392 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983323798 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771495379 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.475100251 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955243394 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.781009719 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048938558 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836471545 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.693974197 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.467230034 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.468110336 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768373837 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.694582723 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.768609109 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771293903 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773072983 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.955925635 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053020682 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824798717 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.426785036 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.876695482 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773660727 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.770472894 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769757312 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.284622648 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.813547493 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.232380006 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873722166 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898193533 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.780860045 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.697439621 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.770586043 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770577241 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.76819935 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.716433371 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815870678 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.439711298 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97217974 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018128264 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.172962689 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77787444 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.436585675 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.886384623 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.787714732 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.097579813 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259244375 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.864266734 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827440317 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.774486978 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.428624599 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.508322287 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334118211 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06994307 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098229952 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129252808 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.107668326 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.084029687 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.854165766 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996775532 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290905121 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826876049 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863987494 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709575338 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787208328 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.429405664 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128969923 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779316497 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987763442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066985758 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.16383708 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906409734 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973584078 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800706949 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.531404071 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790961803 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.308571121 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788904591 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.213400398 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977083201 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854432753 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100158183 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.856270405 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.77155504 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117430217 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813597899 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.477910636 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126548541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.170685878 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.279557679 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996415961 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.775592901 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.211128201 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134016898 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.912700565 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885583827 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70028191 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.778552145 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.778224206 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.785341691 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.742308105 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.609947102 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.015592973 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776886034 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998289167 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.847554452 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143650504 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.67868645 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.77485643 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773161481 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023976971 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406663907 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921265977 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.026891092 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.336571257 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781879599 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.701525962 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700253247 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.473135931 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.774196097 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.737374176 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990125226 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.878330263 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45151463 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.107092712 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075541996 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017378583 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.785726447 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051292128 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04823933 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.265317876 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794495832 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.870195439 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.115233113 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.465100039 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.987625659 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000752045 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304635144 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990476724 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225416139 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.749398712 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.774452909 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980153012 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.988892696 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.181844894 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951203708 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.486405441 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.792052337 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14390985 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840225519 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.185269957 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966059285 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.869956864 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.781566881 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851690371 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777513113 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.782398603 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.7823331 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787048535 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.18915175 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895943243 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.788171729 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852491886 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845542264 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.346686627 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.784694416 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054896124 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141637438 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120378134 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839001946 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.775274058 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776553003 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702602039 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907149938 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.216712733 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047488357 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.897923256 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.911090003 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796619824 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.112548697 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.985538301 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079103301 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049166196 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.659572444 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359702835 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.88910565 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.994239376 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781964851 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.981583593 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999778901 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087180422 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339712937 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.862953711 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961124637 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048966178 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141863822 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.77786273 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360531379 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.793030907 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179593653 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.814385823 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.187338939 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035895006 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781286486 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897694691 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.781574995 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.977285227 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.22878183 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454726556 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126211174 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636455459 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.781953124 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059045331 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119524562 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083514766 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855328388 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785283796 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.472172239 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911205432 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.663860485 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994836724 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778686279 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982274011 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.488648478 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.783092839 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060821236 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086189406 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.780391282 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.681811222 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81391982 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.783443371 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.99327936 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013962965 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02561199 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78256006 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.780893808 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.588138423 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063700818 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840693878 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706115769 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.781392518 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825756068 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.00678014 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798215092 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.295539 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.479867433 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070578158 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.687815905 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797274173 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.140422994 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159711414 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12207528 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.302747001 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008293791 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335079508 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.56662766 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149789517 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.782816952 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.134999958 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153845249 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.782687613 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.231812871 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883367103 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.058473081 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107318953 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.798102256 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497641363 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.814642584 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995441114 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.137560174 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711522302 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786048926 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.828931604 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.783079005 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.779408961 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.790688249 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.72558583 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219627227 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.61461092 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338605336 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.785890563 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.90614453 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.172727321 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275698061 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882846945 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800313378 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783599873 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.480260036 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.069836461 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.026303974 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.246551461 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.870554316 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.78407524 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782956501 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701318009 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966973397 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.97086522 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071280255 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.07705456 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.88415341 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7853654 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.991363217 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987299295 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.202454326 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918297351 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.866476655 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890316203 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.724016929 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490249305 seconds)
  done (took 1613.424608351 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.804924792 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.799396457 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.803046861 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.815512975 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.828021397 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.802828906 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.84996115 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.881114809 seconds)
  done (took 56.302310406 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.784462946 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.956737377 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.791726889 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.786063471 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.790664351 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.785938281 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.945888823 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.79834725 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.790403968 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.791178487 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.787032835 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.787270641 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.561526034 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.812155717 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.809724031 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.788454925 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.793959264 seconds)
  done (took 73.288951642 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.790222307 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.206098337 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.82622311 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.790633242 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.87210136 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.799901596 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.883636068 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.851699692 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.794032309 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.039878859 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.087364505 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.824165439 seconds)
  done (took 89.489457092 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.804801397 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.793663687 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.793035166 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.791995654 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.791100011 seconds)
  done (took 10.704328366 seconds)
done (took 2106.464396247 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.02594752 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.986918604 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.030998608 seconds)
  done (took 5.739329541 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.929726062 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.983384636 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.091995463 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.096730657 seconds)
  done (took 9.823108135 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.092483258 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.168465941 seconds)
  done (took 5.979218918 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.107548436 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.821513375 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.202870211 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.791258151 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.795656004 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.795709548 seconds)
  done (took 22.107728334 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.789813858 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.790906579 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.791205798 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.791844508 seconds)
  done (took 8.882734304 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.787578499 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.480734606 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.785915335 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.796909689 seconds)
  done (took 20.568743221 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.940063882 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.90421272 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.929704194 seconds)
  done (took 7.493876054 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.930404582 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.021200241 seconds)
  done (took 6.669414129 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.946821147 seconds)
  done (took 3.666918849 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.820346253 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.058294594 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.27513444 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.309489971 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.372641508 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.680473166 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.11568462 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.011720131 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.230989351 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.25117017 seconds)
  done (took 23.846695273 seconds)
done (took 129.659106266 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.132375289 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.818140443 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.994629115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.139269119 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.028516333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.992933538 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.008220479 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.134513242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.822043576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.812316314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.147056497 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.026786239 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.967140122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.812986872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.968911073 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.808943357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.027514639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.149952155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.827572886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.072900415 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.023503652 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.787860752 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.984225456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.801014918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.036465861 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947084854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.33377159 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.81744019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.965228167 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.34247055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951112666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.213757701 seconds)
  done (took 165.61670798 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.791591833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.791853238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.790987988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.789127461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.303455899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.794788447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.792722589 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.791148201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.224026528 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.214691064 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.79257947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.295019791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.793490157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.791113083 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.793360032 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.789393833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.401162218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.792970591 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.793329477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.789595911 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.790522859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.126507227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.792962754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.137331078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.39606509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.794462812 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.792647991 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.792524545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.791782405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.790093764 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.791897781 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.792158519 seconds)
  done (took 206.829158989 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.693112949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.793803853 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.794341043 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.791204688 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.794473795 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.793209969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.795584898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.79144944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.555612865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.551082568 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.792752971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.7944258 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.795897577 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.793846147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.795745251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.791210629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.792577832 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.731155507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.793638689 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.794558149 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.794817248 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.399557506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.794319366 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.401853874 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.794723955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.795064633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.794975388 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794721747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.793247571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.794802741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.793703264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.793588245 seconds)
  done (took 217.699420116 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.034368298 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.794944671 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.794963777 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.711411788 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.796268109 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.795536506 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.77039636 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.040662808 seconds)
  done (took 18.465623928 seconds)
done (took 610.342702742 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.156852431 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.001406045 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.971232893 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.820634567 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.069275495 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.862026099 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.816083533 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.881241108 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.639102664 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.895527492 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.487266723 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.838729858 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.580868826 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.846312131 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.938419142 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.878734125 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.412663775 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.514834293 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.990178216 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.900641982 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.992075175 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.739434003 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.903980348 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.670839382 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.612931428 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.794784479 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.862233911 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.421633605 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.828061672 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.976881298 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.470587446 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.089494713 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.832754979 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.816195904 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.871403818 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.851534294 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.04142491 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.830345047 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.944921263 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.529079678 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.898648107 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.548856454 seconds)
  done (took 99.755333147 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.808724311 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.804289196 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.806890691 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.804362787 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.814196741 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.805067229 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.804681524 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.804340308 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.805642568 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.805252008 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.805672855 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.813791597 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.804595652 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.81655267 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.805619328 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.804451667 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.806161241 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.815174564 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.805219828 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.807230884 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.805928889 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.803642698 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.801660049 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.805826537 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.804186399 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.807061957 seconds)
  done (took 48.718047063 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.79950308 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.969192723 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.049493139 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.823256264 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.802518593 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.80359973 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.821065187 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.807281741 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.80287526 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.80403294 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.894033873 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.809442038 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.816939062 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.047093784 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.818200224 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.800005559 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.799952694 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.799673193 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.97757933 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.820465989 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.820197168 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.809420856 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.818311422 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.816784644 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.802429439 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.802791419 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.805557549 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.243850273 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.813699535 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.893426774 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.848538526 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.823053155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.184802899 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.060276041 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.859642581 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.80990565 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.801630193 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.896046127 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.808762217 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.804381096 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.819460574 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.81079493 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.048795992 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.329580542 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.820665136 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.804218971 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.250528666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.907169616 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.845153521 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.810365267 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.049073573 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.821519785 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.802641742 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.804042798 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.838097741 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.804856467 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.801034226 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.115288188 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.815235552 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.819172957 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.80775858 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.802759763 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98143127 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.811130897 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.970626756 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.812724521 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.808976899 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.8047365 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.047423991 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.818047281 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.342346423 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.820256451 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.802004093 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.892747539 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.980676942 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.276999154 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.815328898 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.981275036 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.198105538 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.828379513 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.812378691 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.232079807 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.834702918 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.813325201 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.805666538 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.805375961 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.804456078 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.845494437 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.817674649 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.252032764 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.341490369 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.134914601 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.833382452 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.820555056 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.804469147 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.115290357 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.814696435 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.801722905 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.041035079 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.346808461 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.819372114 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.81270722 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.322526518 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.821226944 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.820817778 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.812720836 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.053586297 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.817040033 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.846021538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.803174116 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.809706159 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.80614758 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.821994328 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.813790496 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.804164248 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.308479434 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.911271775 seconds)
  done (took 224.324171104 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.80352079 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.805606292 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.805760952 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.806414282 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.804252087 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.802968407 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.801016576 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.802906168 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.804057819 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.804051431 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.801735911 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.806299532 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.808681719 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.805285814 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.808695744 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.804145569 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.405333323 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.805043697 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.806366648 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.802495711 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.445143496 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.805846995 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.804208763 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.802522341 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.802261097 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.802819061 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.810205525 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.805180253 seconds)
  done (took 165.510769205 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.804674015 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.916108316 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.825023001 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.830900629 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.810646653 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.804071715 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.902570137 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.824685904 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.809064546 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.805023161 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.803524318 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.864598133 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.814966982 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.904701139 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.838039531 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.910977865 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.911923107 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.811196252 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.8057345 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.805067802 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.834319796 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.812935887 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.864341176 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.92665753 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.824984477 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917854311 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.824414413 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.803571031 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.806816187 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.919268565 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.82578366 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.866693349 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.832699451 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.822913144 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.9215308 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.92264239 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.914046842 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.913638454 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.813805652 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.807758143 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.806773411 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.806366496 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.917320683 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.824742666 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.807554501 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.924494183 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.825752027 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.805671777 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.808619042 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.804172899 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.820386685 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.82278799 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.870002857 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.934038145 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.842992111 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.831686199 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.904978236 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.936205063 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.805979495 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.903895413 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.814653334 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.920579598 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.831125334 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.806247507 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.810922679 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.812514849 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.836793614 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.914913925 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.915785064 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.817802239 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.907404579 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.843409385 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.816858687 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.805920426 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.805945875 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.916855095 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.922907359 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.844231773 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.842368192 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.835530527 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.816298892 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.808572187 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.809162555 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.824753606 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.815568355 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.921015532 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.925619296 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.819263669 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.809136275 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.809432734 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.807005766 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.832798518 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.928327986 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.846901822 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.919302131 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.877706468 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.879626273 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.821174597 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.824052017 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.813948632 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.870886662 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.821460272 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.820997318 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.101515499 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.867970369 seconds)
  done (took 196.136957874 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.180425126 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.859683062 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.864546793 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.124498615 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.169008561 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.745350393 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.853568542 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.853390566 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.880942058 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.040742422 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.93061771 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.87602277 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.84706455 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.829472737 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.851665961 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.880051433 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.863388929 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.211669499 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.077910832 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.977473699 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.846863297 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.158617511 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.174364181 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.455102809 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.905304441 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.26054936 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.430588134 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.984069274 seconds)
  done (took 59.878166186 seconds)
done (took 796.048167261 seconds)
SAVING RESULT...
DONE!
