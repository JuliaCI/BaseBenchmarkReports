cset: moving following pidspec: 5293
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.695539404 seconds)
loading group "shootout"... done (took 1.203951386 seconds)
loading group "string"... done (took 0.443060991 seconds)
loading group "linalg"... done (took 8.221661662 seconds)
loading group "parallel"... done (took 0.161631803 seconds)
loading group "find"... done (took 1.35298651 seconds)
loading group "tuple"... done (took 2.078345962 seconds)
loading group "union"... done (took 13.207726128 seconds)
loading group "dates"... done (took 1.386533126 seconds)
loading group "micro"... done (took 0.211711904 seconds)
loading group "simd"... done (took 4.596799413 seconds)
loading group "io"... done (took 1.055962278 seconds)
loading group "random"... done (took 9.017458947 seconds)
loading group "problem"... done (took 1.575830347 seconds)
loading group "array"... done (took 20.43329705 seconds)
loading group "misc"... done (took 1.544615787 seconds)
loading group "scalar"... done (took 41.42197717 seconds)
loading group "sort"... done (took 3.316350198 seconds)
loading group "sparse"... done (took 12.313010957 seconds)
loading group "collection"... done (took 18.013695123 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.520260314 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123514112 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128990217 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121764398 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183964504 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119392682 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130331999 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086189834 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.846021691 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.135086227 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114371075 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428131188 seconds)
done (took 5.282912993 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172417358 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090955478 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082717869 seconds)
  done (took 1.304544546 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064343748 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133910201 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065830268 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067156878 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066865012 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066406305 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066514879 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066028936 seconds)
  done (took 1.662506498 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071021041 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067315217 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065772839 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067404069 seconds)
  done (took 1.404953719 seconds)
done (took 5.759365999 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240382108 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101805108 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.290859215 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.443283593 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.605332914 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092329542 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075387542 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070596403 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130273512 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316373605 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102012035 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183636175 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089263602 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.170205038 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.012991929 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.122757702 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08617231 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.125140904 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095441216 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132845796 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.392845289 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078984536 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.076798712 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.071371679 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068140554 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.644019996 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666066423 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.123310151 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084821871 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160636849 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116494265 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.651222966 seconds)
  done (took 10.788317403 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091530058 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.090583838 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06971168 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.124137965 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094490528 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070272105 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075388505 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067890847 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08889268 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123927547 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090055716 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099436219 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066637102 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0688505 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074145113 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197454711 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07842227 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080555637 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067929012 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081542298 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106907139 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078888998 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078620017 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078331055 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129735162 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170969072 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095123389 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096808103 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06498794 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081121037 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114979028 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126041063 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071093806 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065231058 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119768409 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096277525 seconds)
  done (took 4.554784551 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.977846365 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093922844 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100732016 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.632009165 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066129119 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.152740225 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241803053 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07327874 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.426201684 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.115413723 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.149568963 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.112890724 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.148383124 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.118323301 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.07007174 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.253079339 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.119030118 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.54037925 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068486127 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.067587901 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066288889 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.068725532 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068154161 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064152575 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069644966 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096129538 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088671651 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.160511994 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.961735991 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.296843061 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068105361 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167139659 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084343633 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.369639392 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07068611 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083373746 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.447358602 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.12206185 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064469641 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170908761 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.117795535 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065474929 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.122142429 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07927531 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069913125 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.069621464 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068636931 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071188295 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07946679 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101115916 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068722476 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065340482 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172755157 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065842326 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067029501 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067295623 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150795298 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065223429 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06441972 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.141771073 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064547622 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069359642 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.102764515 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.069152107 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08732863 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.096626591 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.334920849 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.031064588 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068900815 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.974366384 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078605202 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066237711 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070599139 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.0667389 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.068394466 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064319008 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067475748 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073506873 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070815062 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069310145 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109809427 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067711518 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.07109688 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067818082 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.073132407 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097685704 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066170565 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.510404032 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098125282 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065642921 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076407123 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106258943 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068148799 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071927047 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067854549 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06727048 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066274759 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067593113 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070046577 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.097320129 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070836922 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113824148 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.140585042 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068273503 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067560546 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072795422 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07234228 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070595187 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067716075 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069823834 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06896866 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064956139 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064378492 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108076427 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067932015 seconds)
  done (took 22.006856814 seconds)
done (took 39.45791549 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.253451933 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078459512 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08037538 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079100071 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079124071 seconds)
  done (took 1.801674445 seconds)
done (took 3.019561457 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108946544 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063909541 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.101523216 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.100106039 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064365157 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064387965 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098970748 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064674284 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098984857 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.100105998 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.102486376 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.101125721 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.06426988 seconds)
  done (took 2.359192826 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069051475 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081928756 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083682825 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062053525 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071663836 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081976086 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062066393 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081449399 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.087533807 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082315073 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081782784 seconds)
  done (took 2.059790622 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070496885 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.082160711 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083547182 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062527165 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073270686 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081834895 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061921355 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081527663 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.08435566 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081887028 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081755923 seconds)
  done (took 2.050731889 seconds)
done (took 7.675289351 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064888257 seconds)
  done (took 1.255165419 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.512110156 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.217471725 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066445775 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.086014488 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192643992 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.092875145 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.199209432 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069782177 seconds)
  done (took 7.80178168 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100553358 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068248573 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069250463 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069919382 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068346516 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067293366 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067317886 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068305104 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.068810483 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069177538 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068476681 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069022771 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068131756 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069266148 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06947056 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068145877 seconds)
  done (took 2.420174032 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099096739 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097982931 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072071592 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072656849 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071616587 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070646933 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073328257 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072407954 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069876006 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070645112 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072637502 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071499131 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071118836 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062449526 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072467449 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07342646 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06908107 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072161866 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072463324 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074083136 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072844782 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062192985 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070838478 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071941667 seconds)
  done (took 3.076356533 seconds)
done (took 15.758059529 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.177666688 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073775065 seconds)
  done (took 1.449917693 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066619048 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067801161 seconds)
  done (took 1.348888998 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07233851 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059647072 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.077803532 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069996371 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061369677 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061123628 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077054423 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061314155 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.061130189 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061484114 seconds)
  done (took 1.876900444 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062094678 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069119257 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066941277 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068538647 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067148728 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062424985 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064702307 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06256926 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06879051 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061758563 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065574958 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081596145 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065420068 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083018415 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065184531 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066161885 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06752441 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064791619 seconds)
  done (took 2.432535864 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060390754 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061946321 seconds)
  done (took 1.344950852 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063570218 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061830958 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064601701 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063938122 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062211685 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060955267 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062238001 seconds)
  done (took 1.654097787 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.411187758 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120865669 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338628004 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.068567548 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076254067 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252587889 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063306495 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068693124 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068186727 seconds)
  done (took 2.726774061 seconds)
done (took 14.058116622 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080512612 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.179010675 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.089070989 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412960651 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09212789 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067263682 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112785117 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.168942468 seconds)
done (took 2.438166791 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226670428 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.328462276 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.896455868 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066430025 seconds)
  done (took 3.518688387 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327704108 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.078950774 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07878235 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068090734 seconds)
  done (took 1.788742849 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064387675 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071637128 seconds)
  done (took 1.36510268 seconds)
done (took 8.135256771 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063200049 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063448345 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064447169 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063819755 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064455937 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063790978 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092090261 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064066967 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063588603 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063998999 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063654231 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.063228076 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06362983 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063374194 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063642993 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063805832 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063628537 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063427102 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063717905 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064019949 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064147989 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063223557 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063827851 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064028901 seconds)
  done (took 2.816475165 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078052256 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065887915 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06693422 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066812323 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067143221 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06653422 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0666458 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065397016 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066693501 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06518328 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06686978 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06701518 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06512077 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068065212 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066341796 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067471757 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067245902 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065836056 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065313034 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067691335 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066547883 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065107393 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066664138 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066181624 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066716528 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067375914 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066101171 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065837608 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066758939 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067274091 seconds)
  done (took 3.247945184 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065114872 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060059452 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061330709 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070391372 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059986754 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060195884 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060820698 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060116979 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06070622 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061490369 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060364033 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060052053 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060957264 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059893444 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060213866 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060570596 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065244634 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078815739 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060580146 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.05967769 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064342072 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.060183259 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059932589 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060104516 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060690305 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059725787 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060079193 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.060595577 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059807493 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060664277 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059916443 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064346441 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064865132 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060194434 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070013022 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.073461378 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060238004 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064694134 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061158048 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060307137 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059775971 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059930402 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.060117352 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060004911 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069651443 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060620914 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060907574 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060469301 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060096351 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059553202 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060540686 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.06180142 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065483833 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061320193 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059555189 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061339395 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060107498 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060520858 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059811559 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059709134 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060159796 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063953043 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061597193 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060640349 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079244374 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061470746 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069721644 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.05996296 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060879474 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06393978 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060452239 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077292173 seconds)
  done (took 5.731888229 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082378578 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083892691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065136348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065650255 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061109992 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060254633 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0677634 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060425221 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064950808 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080331824 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060949743 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064916561 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064805032 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064510591 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060765552 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06477471 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068251265 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060920578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060497044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064441786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061014333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068945363 seconds)
  done (took 2.713067766 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137259087 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064572589 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105707357 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074999342 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068852156 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074968683 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066277334 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065838206 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065653873 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066885743 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066884939 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065891666 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068390028 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066805639 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066912265 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066370227 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066654413 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066144934 seconds)
  done (took 2.572888504 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075183065 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066192068 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087007999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065577979 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065332358 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065568637 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069767132 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070231635 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065100924 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065927613 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.070061633 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065133123 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065394042 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065563501 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06514268 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065610435 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065081379 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065499621 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069531937 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069022329 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068957545 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069823134 seconds)
  done (took 2.749129073 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075052389 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065000771 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079936262 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066929077 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060837058 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060454212 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065222912 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06518796 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065555101 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06487286 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065554939 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060826407 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066879595 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064880881 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066208468 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065017671 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064551202 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064997021 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06478919 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060633908 seconds)
  done (took 2.562933958 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08459152 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063012628 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062755129 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082910148 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063119635 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062907707 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081934652 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06268049 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06340058 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084675135 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062959281 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063238428 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082308433 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082449261 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063193253 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082459255 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082620491 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082474345 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063145706 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06506404 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084639416 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063184225 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082457634 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063477172 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063359748 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063903759 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063438545 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08186492 seconds)
  done (took 3.258768612 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063383422 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06368266 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063520082 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064482899 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064349972 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063845327 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063556344 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064062556 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063232928 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063619452 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063258929 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.063602186 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06337873 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063750045 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0631453 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063134536 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063912116 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064213149 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063663505 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063968356 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063751691 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063377706 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063286471 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063829547 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064131486 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063207532 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06353592 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063560026 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063432372 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063861951 seconds)
  done (took 3.165577701 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072062274 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071920912 seconds)
  done (took 1.399784563 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060821409 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077187103 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0600436 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072126125 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069206216 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064001785 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069354349 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068710987 seconds)
  done (took 1.793305054 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065136837 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088812525 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062005214 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062367883 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065484463 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.121817378 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074692361 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.073290542 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075035521 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064359741 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061932963 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073844456 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063419639 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074790046 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063514241 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070702821 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068950287 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073869987 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074618343 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.05995112 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073991408 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062382062 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060629132 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062825641 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061522241 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069773356 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076925293 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074110183 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070567188 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059500388 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080408044 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060683206 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061630283 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069920526 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.065353226 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060934574 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097338103 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.061456456 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066510452 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060671798 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072712933 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081682728 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075337369 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.079103906 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0627526 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062832369 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060571457 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062871535 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064172503 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070187376 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060606998 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067894 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06007158 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062548843 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071042025 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061174806 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066347393 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069767578 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074369035 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071646001 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06932483 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076087249 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069558888 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068431778 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062230916 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08033645 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062358665 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073370113 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075914042 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061694119 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073952977 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060520051 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059433627 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060510696 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093997525 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062501316 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062040734 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.060526665 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06104036 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.062643484 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070283447 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066022772 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067884784 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063875963 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076683712 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070243323 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060714364 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067105505 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.079032241 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064171493 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061134596 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.077110685 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064158148 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060184355 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078073041 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070875161 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062816302 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061343987 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063640026 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073936352 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061389438 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059606708 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068746724 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.06210108 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063055301 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.06527338 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068596581 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.060718081 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070542519 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.065405385 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.062339268 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059370852 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064579165 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061589746 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059011789 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069315662 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.060140436 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074537583 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06601761 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073590092 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074712021 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070341209 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075360491 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.059579219 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.05891171 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.077904649 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069176496 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061102976 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077117116 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059208891 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069881709 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059743229 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060948118 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069377745 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059391576 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061935336 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060370114 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065176832 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061371082 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061363592 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065111479 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06845256 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071885194 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060964897 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068841848 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059710271 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074899113 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069786781 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064442442 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063478845 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060701334 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071583098 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066838762 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069348936 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059879195 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060498452 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059820916 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07013107 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069294333 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061829215 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066647736 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064594966 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060728799 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060477809 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060894691 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064000894 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063339361 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06067175 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067647594 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069285478 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073767944 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06775973 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06924316 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059767554 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059675269 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06558578 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060033395 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064944355 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069029866 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075819684 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071525519 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080562154 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060490773 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069533789 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061323251 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076757684 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073302862 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060842685 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064365005 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059220762 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061249236 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069454589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071642722 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073449731 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075441201 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064477852 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064781994 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06013392 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074874387 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060348802 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068350539 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069929341 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064420935 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060406404 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061289517 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069290852 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064983995 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060243483 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074910519 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065870772 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059861736 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073859172 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059818546 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070274995 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059777258 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063653817 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065237739 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061771498 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069586753 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075446008 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059150719 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061366211 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075808247 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062029783 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061732246 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068138288 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075424644 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064866726 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068003471 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070620889 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070768106 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064291789 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069956664 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060998123 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069405964 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063009885 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07159742 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059829947 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07688778 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059745197 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.075172813 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060260841 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070988885 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060745517 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069995826 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.061087377 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07702919 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.062168405 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060698248 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071307026 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.05929114 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069323331 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060288493 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06484783 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0664435 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.069512205 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062380863 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069577238 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061730498 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068897075 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065001243 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068309687 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069797919 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064240275 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059522245 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068191346 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071217735 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06800584 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.301914887 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.064832363 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064169201 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07261907 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064667911 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065145643 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071581151 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067367689 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069633603 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065074916 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.065876411 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.065493286 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072722079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073769624 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082694031 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072654038 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071925809 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072574323 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06262382 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078819614 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.06347042 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070993347 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062113083 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068603994 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072594469 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.062762644 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.08169713 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064541377 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070989428 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074804648 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071078168 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066769461 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080264672 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.065578078 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070571749 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07007609 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066403909 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06894515 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064182799 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070066023 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071504894 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072320714 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062816225 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069043581 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070874589 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063577491 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068996245 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063331832 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069532011 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0629104 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060930833 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067076697 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073341676 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066411901 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066789844 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062129655 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060059739 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06204716 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068182703 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066118368 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070680595 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076755694 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060664432 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.062101798 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060880926 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065131313 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079109353 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070853684 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068927604 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066426531 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063243339 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063147872 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.063208479 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.061908117 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064646566 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061093299 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061438514 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072196185 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.063360068 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065891525 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061312375 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062279803 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070600877 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065722794 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061691118 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067768057 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.061470696 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066739262 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060790104 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.062857219 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066152983 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060640495 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065159831 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.072330303 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.078170309 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068384021 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069982558 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062280483 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069539211 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076805708 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068870721 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062716334 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070778315 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06073496 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.080102719 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070708731 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070227315 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071601787 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062903513 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078396073 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065901828 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071435114 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077005735 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062544369 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.068518838 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061051568 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.076635761 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066110511 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061098715 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069425836 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069196941 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067050582 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072930513 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062446408 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069068622 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066479485 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064636673 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062450699 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062263632 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069604385 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076965113 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062379486 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065388484 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069138493 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068934415 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065094698 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.215902558 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070523903 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062826163 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06347043 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065940656 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062484643 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073029961 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061863264 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066064334 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066186794 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061003367 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.0679341 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078024321 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07082101 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071011891 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061578786 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060449792 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.078839901 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064739901 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064860584 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069488965 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071088805 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073969314 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07126262 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078049923 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06201771 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067221379 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073657156 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061998593 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.061245937 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064674556 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062848905 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070355168 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071285033 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069163188 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063171765 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068156739 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074984563 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062611547 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066308647 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.066400386 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.06186636 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071372848 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069428752 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070202348 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062645214 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060594045 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064412787 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069468173 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069441917 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069869847 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062497983 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067680088 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.07496117 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068369096 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064749878 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060841462 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06454388 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070096473 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.06565032 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060730099 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065928274 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066017055 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068596311 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0706989 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065806718 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060854167 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077471995 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069477793 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070008273 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.063102294 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.063069533 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061674593 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060636491 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072665633 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061315576 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062875338 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065725073 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.063407315 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07825796 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069028227 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.077199395 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062017458 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065822006 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060759112 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070433967 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065859655 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061608576 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071912869 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060644585 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076602324 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072999754 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066619339 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060783334 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066292672 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069270008 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078313347 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070920298 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070106258 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.064829216 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071066305 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.063098053 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071829696 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060996212 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060562875 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071117293 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070185291 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073860668 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06128839 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.071296167 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.063636839 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070039644 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06948375 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063574309 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062971897 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.062955461 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070712759 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066333006 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070618268 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06601045 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077883716 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062120451 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072510107 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069907192 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071962603 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074778513 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07341654 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069481681 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061585655 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068219303 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069171094 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062451422 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066372988 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064544634 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082849185 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062284455 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.206756552 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.077004878 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068229068 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.062366514 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070779255 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065622669 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071469892 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.062679019 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071572307 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.065401414 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.062339847 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066318939 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066015381 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060469778 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061384758 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061205918 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071223219 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067037127 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061419395 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080603608 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.063273644 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070224421 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072610983 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067889769 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063036868 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060949923 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062910921 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074551813 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07660845 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065073624 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069606569 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062581401 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070621113 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060970206 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070484533 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06972342 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069839919 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061119208 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061491731 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092284293 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076460629 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065512579 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070099725 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070046434 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062596443 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081875268 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06943716 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062024609 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071685037 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063633481 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.060374215 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060395489 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062457539 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072387722 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060909919 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063784067 seconds)
  done (took 41.93028646 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097677652 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06272713 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061312536 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061936466 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073088189 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062505141 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061725686 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06236092 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063321737 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064063205 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061316715 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061186191 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072253147 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074717137 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07167487 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065052534 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061123595 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062099494 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061236531 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061991605 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071435418 seconds)
  done (took 2.805960545 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066345043 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076702964 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072630234 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077448102 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07007091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065510777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072953997 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066412065 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073264618 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071171821 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073555024 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065852242 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070773073 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071545459 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071021535 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065740558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073074299 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06957611 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065442895 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072916063 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065684318 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072912327 seconds)
  done (took 2.928619495 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062083571 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062285811 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07071488 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06105693 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.061851975 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064926346 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.060423034 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.065363378 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065535965 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.065585312 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070395055 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061579367 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060640658 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.067380594 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.060661834 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061881672 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.103674519 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.062091457 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062587201 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060755412 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063555926 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070951448 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060807349 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061118684 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068112276 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064597511 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060779307 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.064012416 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.062020666 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065216127 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062224145 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060737322 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070162221 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070013054 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06582621 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065621349 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062388419 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.0622269 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06096448 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060858961 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069330494 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062243551 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060951449 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062608672 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070031344 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.061091693 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060770877 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070003916 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060738691 seconds)
  done (took 4.553484956 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070351558 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112568835 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06707361 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09327827 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073859142 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067147394 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06699241 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095825655 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062089986 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06269747 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074807298 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075190683 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064372039 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065298315 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066798435 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063584863 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064957277 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062954472 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066470094 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063978509 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066704591 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068216351 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074075477 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074597258 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064774037 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063400884 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063424872 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065379191 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074683706 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067329217 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06606451 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065942855 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074903348 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068981339 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064225217 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06417178 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075282806 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064311764 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06423092 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062921418 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063363487 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065463663 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.0682246 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075439665 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063964958 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068881108 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063675624 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062401639 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074221649 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063626444 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067867807 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075661882 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064836039 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064368299 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065724328 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074578846 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063960796 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063196938 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064390722 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074165303 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062661096 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065354876 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07470083 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063571978 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067320398 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075594898 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068877292 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065512107 seconds)
  done (took 6.185690379 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069441067 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096029904 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073142114 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073123524 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071802227 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072246528 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07209861 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071600719 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072059637 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07315397 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072047241 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11123191 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068233362 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076078891 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071547505 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072308938 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071795245 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07184052 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071915873 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071576051 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071966152 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072151641 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071639233 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072494905 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074494099 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06826958 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07170787 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071803801 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07248508 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071449103 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074737052 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072055162 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071996812 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072001355 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074348275 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071591496 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062121799 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071488431 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072070172 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071904479 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067996177 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072645826 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072000218 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070562669 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071636133 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071640113 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072476219 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074453336 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078239532 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072469634 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072247365 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072500589 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071641162 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072102562 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072504233 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078474096 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072600929 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072249745 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072475632 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072386852 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072369215 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078930424 seconds)
  done (took 5.956313002 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073217691 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067981339 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081032516 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061338377 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061292654 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070352365 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061271446 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06133938 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070123547 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068127263 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069951753 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070989061 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072730551 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069708648 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070704873 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072712583 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070312251 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070559123 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068212844 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070494958 seconds)
  done (took 2.790658874 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074892654 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080460626 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066902791 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070376918 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066788209 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070685206 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066029942 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066639222 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067417942 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067004188 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07193289 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071920868 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067430929 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0704263 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071448828 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070436057 seconds)
  done (took 2.51814288 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066511187 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068284516 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067637428 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062155665 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066719811 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061629027 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.062538685 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060680785 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060967873 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075160216 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061938904 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074179366 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062024038 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06146774 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06189629 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067404771 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061559497 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062533929 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061688989 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.066915542 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068730231 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06280462 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065926148 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062214112 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067545689 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069437109 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063630971 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066107576 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062085083 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062397275 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068613667 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068766402 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061640914 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062596763 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061161195 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062156845 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061734309 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062424572 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067522546 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061996193 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060591042 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067151859 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.061971733 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06299139 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061424029 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062653835 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061141759 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067898576 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062282421 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067634752 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062266007 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064070267 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063028391 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069361462 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065226997 seconds)
  done (took 4.941233831 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07683823 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066429694 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061450897 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06091635 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06620895 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067015803 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066326304 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066496201 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06706968 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061009028 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066668058 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06584545 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06716549 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066137993 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067169653 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066464477 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060755645 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066896969 seconds)
  done (took 2.598670604 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073185817 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066402693 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071090538 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066374346 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066032366 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065625119 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061262119 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061587592 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061246725 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065809316 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065778954 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065470712 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061531706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065543052 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065971957 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066016294 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065457887 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061360459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065751357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060925693 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065778474 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061250416 seconds)
  done (took 2.834948591 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086532706 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084389095 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.12722692 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080475427 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088586921 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072283524 seconds)
  done (took 1.945823948 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092173293 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104207479 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065828301 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065896127 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074856699 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068907382 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069138265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069636673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074906937 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07322163 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068984396 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074436562 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074862868 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071097842 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074694535 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077104124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069471922 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069849256 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06629448 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077440861 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069754455 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075213233 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069598061 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068993384 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069337801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07141482 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077552823 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073338872 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069371868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074982864 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077439561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069603659 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074983637 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075995803 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066405861 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074908463 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06936192 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077428894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074808285 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071593051 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066271099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074815694 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075001433 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071289149 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07757862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069616771 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071088928 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069589267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069696568 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079695764 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075007646 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071477106 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075219673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077467943 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07778502 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080076334 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073902241 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071400818 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075482496 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074088869 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071593685 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075014225 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071557083 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073907557 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077716595 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071287795 seconds)
  done (took 6.264208551 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098913866 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065995549 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069560466 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073474618 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071032957 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070219784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069809996 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069470582 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069598785 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06709979 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104681335 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069933217 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071596978 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071584019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069908933 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069856008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070297117 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072151007 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067203177 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079967359 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069743786 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071414071 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071533634 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07153117 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073872569 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077618318 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069312884 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069472485 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069210215 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069753374 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07173435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069607383 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07105981 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066756324 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071039191 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069578656 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069536783 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071404947 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069342571 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075069108 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071398964 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077509429 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06967556 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069484505 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073339141 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069656154 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072996817 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066693003 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069430322 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067119954 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073179128 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073688017 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073617925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071348506 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069767897 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070119463 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069818021 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069844658 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069930527 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078146534 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071683181 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069714025 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080020302 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069894225 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069785941 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071470188 seconds)
  done (took 6.181651695 seconds)
done (took 127.678613437 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210981826 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180844684 seconds)
  done (took 1.787715548 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073632265 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098330712 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076513057 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135664596 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071219092 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107646551 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104095 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074748852 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072662404 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072464326 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072760256 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07530723 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138137105 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071315707 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072661408 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075439642 seconds)
  done (took 2.806402245 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106431039 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.185410206 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115326886 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071364459 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108617549 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077574729 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070574529 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0818394 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074517688 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.082785092 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077920306 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075979083 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.076778637 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076089261 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074513278 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077216347 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072123376 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077449375 seconds)
  done (took 3.000639308 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096247211 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.086666808 seconds)
  done (took 1.607008229 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159061656 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105043443 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143925073 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.323528139 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.133577327 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.129259302 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.132226019 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126776945 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112864941 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121306878 seconds)
  done (took 2.904009738 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10453412 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178158803 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316912822 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122926893 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076968094 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100115719 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124577556 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082764628 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081309056 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080713347 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08048897 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078295243 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102952842 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077046347 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07593151 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079589488 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10611348 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07500641 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075991393 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076572656 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106978164 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071312795 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077051536 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074853699 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078636839 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078736803 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072712886 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070807585 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076304761 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075708784 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078717978 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097205941 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079082614 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100384314 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075634878 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10066206 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075523279 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074651587 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078290528 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07493379 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078311306 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077320426 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08039195 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077340701 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072855335 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07530585 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073447372 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071499296 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080274725 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072234689 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079508108 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078398822 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099147408 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072255398 seconds)
  done (took 6.23527611 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106173644 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104962193 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069025449 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112213241 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104778435 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071226878 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105597383 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101904543 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.109948041 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070567412 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069997195 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070439752 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077151159 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081300825 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114499121 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106683795 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070440352 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069557862 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108667206 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109376025 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069888958 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102098864 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100712727 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108252132 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069461471 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07069483 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068791118 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069573035 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07483519 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075753385 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069566506 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076661361 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085137781 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074120144 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067738455 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069495751 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069347626 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.076470333 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077007839 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077160492 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076061996 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069264182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069301579 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069634266 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070073043 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068860967 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075199851 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07645457 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07565963 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069059131 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070111068 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06916006 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069884248 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07597741 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07589527 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.077683902 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076651459 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069189969 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069670623 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070766942 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077742771 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077713753 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076915814 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070791768 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078189822 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06946688 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078587467 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081908105 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069942891 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07024428 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069436583 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069727167 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070256234 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075401041 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075966005 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070669089 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070014424 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069068061 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078277199 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075701688 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06921159 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075034688 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068562248 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06928901 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069573328 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069430144 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074646741 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076330876 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.0704111 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069150155 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069378905 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069429983 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06828085 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075483067 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076901319 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076413515 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075787098 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069800647 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075884332 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075863081 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069191855 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.074209806 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068692238 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069566936 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069684805 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075531856 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075164008 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077257322 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0694484 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069183705 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075402253 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077531503 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06927567 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074382596 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076851913 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.208524622 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069988429 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07999201 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070501888 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078746986 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068954239 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078452647 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072430911 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075947939 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070156109 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068832739 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069680013 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07652481 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070397779 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069812638 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070450096 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069877246 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076990978 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080541075 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071023454 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076425048 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076153468 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070490354 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076512247 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070440519 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077596437 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070692058 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070301073 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069628658 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079153813 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0696566 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070543616 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069691035 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079055046 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0688504 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078018766 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075277135 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069387092 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081861612 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076302099 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073172363 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076788315 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070802439 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069768528 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069844159 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070600156 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075350301 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076774845 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070348257 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069682174 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07543585 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07840634 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069358761 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075695329 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075766043 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075660836 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069696536 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069637169 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078963742 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077531262 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074871633 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075079983 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077149656 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070309201 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075373222 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075683181 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069553033 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081111146 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06993239 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079689603 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076240585 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074942206 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077314577 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077532155 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078467759 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078768965 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079823619 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069915576 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069975542 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075959751 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069702255 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069494126 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075379638 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070206542 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070099794 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080865166 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068246642 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077095811 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069278444 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076744644 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069294704 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069900383 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080670766 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070135578 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069692703 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076134414 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069383479 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075638204 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079292015 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075150992 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069956546 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069661968 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076319572 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077200163 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069921032 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069297381 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069641492 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075469356 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074917079 seconds)
  done (took 18.463605021 seconds)
done (took 38.235942224 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220216934 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168442277 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.206547951 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118193038 seconds)
  done (took 2.239889554 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.090171609 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098565497 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076226248 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066273992 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082312614 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066648775 seconds)
  done (took 1.948324056 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.249636695 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.187947973 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174945538 seconds)
  done (took 2.07247266 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.217968078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19538904 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.50356054 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.309935073 seconds)
  done (took 2.792685613 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.129182639 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.07797933 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063899675 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.074933413 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.105105447 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.13435701 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087081914 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.109438981 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07611258 seconds)
  done (took 2.381546484 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.13222996 seconds)
done (took 13.049092877 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.202771118 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10618325 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.156199097 seconds)
    (4/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.203799037 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074166975 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138009663 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.124785217 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125910982 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114851982 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07807627 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123157867 seconds)
    (12/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.220695066 seconds)
    (13/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.194020603 seconds)
    (14/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.210092474 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079184716 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092980727 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075635919 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.226266829 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072513649 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.291002853 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.230478783 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069409387 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172658734 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080254584 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.195082381 seconds)
    (26/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.186178858 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074046494 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.219216744 seconds)
    (29/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067482216 seconds)
    (30/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075082591 seconds)
    (31/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.172903785 seconds)
    (32/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065043429 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.157005102 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076883476 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080969681 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066022944 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.160981005 seconds)
    (38/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.086705079 seconds)
    (39/309) benchmarking ("sort", Bool, false)...
    done (took 0.150956839 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08625715 seconds)
    (41/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172894211 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096806371 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168666238 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109654661 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073634024 seconds)
    (46/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.18926998 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073690984 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 0.067557932 seconds)
    (49/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.248845033 seconds)
    (50/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.073669382 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.0833668 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074299391 seconds)
    (53/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077677971 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092775627 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065739903 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076008337 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075092449 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064603379 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092521415 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094097431 seconds)
    (61/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.177447822 seconds)
    (62/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.067318122 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160790626 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.233218529 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067656688 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07772608 seconds)
    (67/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064942125 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.14311773 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064438971 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089066504 seconds)
    (71/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.168485328 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092874453 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079056642 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199939696 seconds)
    (75/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.140846517 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090593093 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17989144 seconds)
    (78/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066941815 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075220552 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081163065 seconds)
    (81/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.10083379 seconds)
    (82/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141667865 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065982424 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066430439 seconds)
    (85/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073417492 seconds)
    (86/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.361586265 seconds)
    (87/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078950915 seconds)
    (88/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.069699342 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068141436 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09173985 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.129354839 seconds)
    (92/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074038197 seconds)
    (93/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.086093761 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07583902 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.238867663 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.135597431 seconds)
    (97/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.076205101 seconds)
    (98/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.07147696 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066412075 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078418641 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067520837 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074220323 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072190647 seconds)
    (104/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.144105913 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176117044 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067397701 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067074815 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076704375 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067541147 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076409716 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067146335 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193881258 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084796958 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076825369 seconds)
    (115/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080453367 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074774481 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067045781 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091021292 seconds)
    (119/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.178036883 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067363926 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094864973 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071047936 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.10033842 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090612886 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07419664 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.125507066 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.147407028 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06649376 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064766861 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.226793662 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076360425 seconds)
    (132/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068553442 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.190590969 seconds)
    (134/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.147239994 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 0.264284662 seconds)
    (136/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139951888 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076243322 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.0651893 seconds)
    (139/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082488573 seconds)
    (140/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.226358385 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07705006 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06873671 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195120635 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066948503 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073995298 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131537458 seconds)
    (147/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.233576266 seconds)
    (148/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200832664 seconds)
    (149/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.178935358 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092571046 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090869198 seconds)
    (152/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.095454584 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.151971002 seconds)
    (154/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06674015 seconds)
    (155/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067843258 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089312088 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074140896 seconds)
    (158/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.168141781 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065587575 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065263923 seconds)
    (161/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075308733 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161898284 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074218838 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074441467 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195310026 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067033941 seconds)
    (167/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.139260813 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075469177 seconds)
    (169/309) benchmarking ("sort", Float32, false)...
    done (took 0.139298681 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067900695 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.216627621 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15178761 seconds)
    (173/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.06626054 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065397319 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153450178 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06523262 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064700057 seconds)
    (178/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.078612799 seconds)
    (179/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066903208 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172401467 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065600722 seconds)
    (182/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.066684917 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068010127 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065548526 seconds)
    (185/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093493071 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065892715 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 0.167268058 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.064826771 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065563223 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067639371 seconds)
    (191/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07302795 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.146063376 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068716421 seconds)
    (194/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.065265322 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.224364891 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0675664 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071383346 seconds)
    (198/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.074971024 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078786061 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067072869 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06988518 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131786958 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187826952 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067810124 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065851123 seconds)
    (206/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.065259426 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065924347 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065317595 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073601299 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067828194 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149912499 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088169656 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092462434 seconds)
    (214/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066110638 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163549849 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079855416 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077311547 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065604922 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149753466 seconds)
    (220/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.075093097 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06978856 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066417016 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073964182 seconds)
    (224/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.077785045 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08818272 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07455457 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067698047 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066899341 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065743383 seconds)
    (230/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067639669 seconds)
    (231/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078541241 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.144393902 seconds)
    (233/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.06581045 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119491895 seconds)
    (235/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073870755 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06890135 seconds)
    (237/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.075085325 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065443251 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065422668 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06572011 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.160939663 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092702135 seconds)
    (243/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06706148 seconds)
    (244/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.0646106 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066737421 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074196481 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064993775 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074355162 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067186355 seconds)
    (250/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065480352 seconds)
    (251/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067338625 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065251374 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076824458 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188255514 seconds)
    (255/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.138204868 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14761539 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087290431 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068914012 seconds)
    (259/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067322574 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066607079 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066273887 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147528337 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.132575934 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066308361 seconds)
    (265/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.066262563 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066266786 seconds)
    (267/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.066548411 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093909903 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066879843 seconds)
    (270/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.065857562 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073311412 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065192063 seconds)
    (273/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066468362 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065994293 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065730486 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065782812 seconds)
    (277/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066858377 seconds)
    (278/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.153459437 seconds)
    (279/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.065155063 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065083546 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065443317 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066433835 seconds)
    (283/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068542533 seconds)
    (284/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.070438438 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180903865 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073554979 seconds)
    (287/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067196045 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067124568 seconds)
    (289/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.07914588 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077880297 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065742157 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151764457 seconds)
    (293/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077963561 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066813153 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073472027 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066622786 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073478683 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077474336 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067622251 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065293838 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.141928939 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122415989 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066097681 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067591211 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085529593 seconds)
    (306/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.067291185 seconds)
    (307/309) benchmarking ("sort", Float64, false)...
    done (took 0.137843155 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074392118 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067078232 seconds)
  done (took 33.636562153 seconds)
done (took 35.11693935 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085086863 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088679659 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07338413 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084316064 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080426442 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099198844 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072847471 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080088907 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079608575 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078112308 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080129461 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073761539 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075902061 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076025168 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074201788 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089968169 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081650854 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074701219 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075491013 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065496685 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075133275 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066239324 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065567423 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072966331 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078014463 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073381941 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076409073 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076096902 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066787984 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06692537 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071915141 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075361937 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066808487 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078084328 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075274118 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074890295 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07911821 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08028161 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065819753 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066655924 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077666273 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066890517 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074804861 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073058432 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071531186 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074425899 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075191114 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078584368 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089118317 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07184866 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077414299 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077788474 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078127449 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072464341 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071689341 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074883097 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073793441 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089115912 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075372172 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07166262 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077083718 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075929696 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073748461 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075325068 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075393481 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078083855 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078047073 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073778353 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077590542 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074366121 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066001203 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07531777 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071672008 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066864567 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078019009 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080303044 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065372046 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070832435 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074547911 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07476935 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065405643 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069751038 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06362962 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071572729 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071194337 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07333668 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071804944 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073647636 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065110097 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074845753 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073778929 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074827671 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065111347 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077982586 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06550027 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072926672 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066907227 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066625309 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06558426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072143008 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066170531 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071051455 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074988151 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064880007 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071516383 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079711034 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066642369 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073997899 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065707625 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065940374 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077405548 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077787105 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066857159 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071689041 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065761346 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07244569 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065505951 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066330024 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066574738 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066559756 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071040948 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066815058 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071676981 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072585351 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078587558 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066249307 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071396814 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071030844 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066580183 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073155818 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066979426 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06624732 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065184277 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080245458 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070825819 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06714572 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072007949 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071648552 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074657009 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064748374 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075410584 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072563179 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070564112 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072529463 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066566802 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077778584 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070630652 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070404624 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.204349281 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066523685 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06577669 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067452179 seconds)
done (took 12.834712797 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066752564 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.105824594 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.07386754 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.082285335 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.078852778 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06796482 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.0708129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083434477 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070331885 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.086074956 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091851183 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088223194 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.093832504 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066238754 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067210038 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068410395 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065587273 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.074619453 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.081862291 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089670774 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095868747 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067131945 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.076109788 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.083029795 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.077942287 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083807541 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067867604 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067724196 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069325466 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.083895249 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091999806 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066760453 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067864615 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.081427114 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.081147043 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073974993 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067830655 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.071060585 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067680058 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066809545 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069001408 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.081103373 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.070774385 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071775063 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068603486 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06846158 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067725818 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072392677 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.0808074 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.070170178 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.074580828 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.078828744 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068633695 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066890109 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065020303 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.07121355 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067100436 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067628475 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067021567 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066889689 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067546217 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069202854 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067667169 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.067671079 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070194948 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.069727174 seconds)
  done (took 6.437726191 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082987042 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094513109 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083161268 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084074151 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066859503 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067632608 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067356441 seconds)
  done (took 2.125732147 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067124541 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079229339 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082488205 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083287346 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.075202229 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084967613 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067755838 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098398253 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066508402 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.079324089 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.112891614 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083854906 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070659909 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078928598 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067789768 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.074377618 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067426208 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075931475 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075052123 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083373952 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071118711 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096744482 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.082046465 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068014721 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.087524629 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.071642141 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.066393682 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067709841 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068160341 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068410364 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068177202 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106175737 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.071278095 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07940409 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068654063 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066935355 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.073312382 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070524018 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.069706055 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076327911 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.071944701 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068029042 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066130995 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068365206 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069648271 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.071349563 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066089656 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068264822 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067838839 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078466178 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066093088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.071111828 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070665389 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072365963 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073489958 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07149731 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076387853 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069061412 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.078421093 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075269212 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068466022 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075469068 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07532854 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.072384873 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07534611 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.105372095 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.071163717 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07203632 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068047102 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069614413 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06892479 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074923828 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067064477 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.069318973 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070981094 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069109957 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07142397 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.084389268 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.084133151 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080426463 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069659895 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068810107 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071377761 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08406918 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072316885 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068297953 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070910015 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066917922 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072335385 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068743198 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073928281 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068893524 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.075774215 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.070188633 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07132497 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075373383 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067291456 seconds)
  done (took 8.765318954 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068773784 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068450232 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06991258 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068291409 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068587802 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068484164 seconds)
  done (took 2.026509472 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088006779 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06802395 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08278521 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068025814 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10361299 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073980446 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.074407408 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076397173 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081162758 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080682402 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.074010511 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076973587 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.073951673 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069386922 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.074259085 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069027548 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.074530511 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070820848 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079816425 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069805836 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080888512 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069554809 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069243765 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079642067 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07050925 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068362675 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068916142 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080608915 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079708236 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075596401 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069252106 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070179841 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075738296 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077912672 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.074118752 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075975344 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067802238 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073109439 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069974338 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070323793 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.07689352 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069615213 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070319743 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073243168 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075414447 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076287379 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07343844 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071747416 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.073655532 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073018695 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07343172 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068376756 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070369439 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073473164 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075869627 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07563606 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073485825 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073689322 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069348082 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076349383 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068110623 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070500476 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075187119 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070260769 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.073137438 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073104601 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075844211 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070048265 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069619439 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067539387 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072967494 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067667578 seconds)
  done (took 6.889958193 seconds)
done (took 27.804686922 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543885211 seconds)
  done (took 2.09907364 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.574621242 seconds)
  done (took 2.169959496 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.69647139 seconds)
  done (took 8.287834283 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.285839324 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.312066888 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.733047975 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133412652 seconds)
  done (took 3.083176154 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.748990503 seconds)
  done (took 2.349989868 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232570582 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228344413 seconds)
  done (took 2.069200945 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.341843836 seconds)
  done (took 1.935373379 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.13038581 seconds)
  done (took 2.71844333 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.223405417 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164653345 seconds)
  done (took 1.987361648 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.492476642 seconds)
  done (took 2.088197413 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.245565379 seconds)
  done (took 5.846622228 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230212389 seconds)
  done (took 1.867109681 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234249058 seconds)
  done (took 1.834660022 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.774111721 seconds)
  done (took 3.369230313 seconds)
done (took 43.305979621 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084151045 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087572768 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087637296 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083112715 seconds)
  done (took 1.909276765 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.074269097 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070290512 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.074319993 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.074373431 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072199642 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07326456 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.073330634 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07025856 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072094439 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070344045 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069366115 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070426377 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.072662502 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.070234832 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.07254352 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.073963276 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070285922 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.070642116 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073450715 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.070613737 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073200433 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070399445 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.068921355 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070631742 seconds)
  done (took 3.317813213 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077024225 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073201908 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076121233 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071812768 seconds)
  done (took 1.906905479 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077071097 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084419929 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085498355 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090808432 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077627062 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.077074241 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.08375945 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.084511637 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066704292 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08681938 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068888968 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.06765373 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.067713969 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086268187 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.083344838 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063334152 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065009336 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.07717386 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.076233757 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.078971757 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069143138 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.066273829 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077735661 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.076418807 seconds)
  done (took 3.44696703 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078556582 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.0664189 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079202057 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092431582 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094015382 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065992575 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079754484 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093891102 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124579059 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066416789 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072403653 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066116488 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105507438 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066372408 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081320152 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107521252 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109781229 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070308515 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099599361 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067251482 seconds)
  done (took 3.302510679 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075972166 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070365318 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071561261 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066260264 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077673991 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074325539 seconds)
  done (took 2.050733499 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067538943 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069041714 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068367665 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068458914 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07333257 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068520205 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06683284 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068995329 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068755787 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067789876 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067876829 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067144207 seconds)
  done (took 2.430114721 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.163714459 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068481953 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068691482 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064797929 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071420403 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067529749 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.0820198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071569482 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085881529 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067420532 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067501498 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070115824 seconds)
  done (took 2.558409689 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098238549 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101272575 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.146136551 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117170976 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095450582 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.095922445 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.161089059 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.137481324 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117220707 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.070068917 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087439434 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101608978 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100058971 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134071042 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113266517 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073435423 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.113490023 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081592988 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.115766809 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123879317 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116563674 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123049944 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094189465 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099621346 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107027463 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12010032 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.071930893 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071475628 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15014369 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.100604904 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.092366448 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09856051 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109001008 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.06979073 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.087288449 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.107057686 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085020155 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118186602 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.089383101 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098682662 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08138757 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.13252351 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106760322 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104237732 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132265291 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093759275 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111760024 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.107135127 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083680833 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.119384417 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099117682 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092136264 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081171303 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.157857502 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089682843 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.111228588 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113131002 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.082873567 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089289093 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102550781 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.130394716 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.105834847 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113888859 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.25611491 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.092976342 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093353125 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.13268742 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086317885 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101900236 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131649996 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.093500052 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.076513998 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.097311165 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07049855 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.098226282 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107114967 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093906189 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112827586 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078460081 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128980127 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.109873532 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073911546 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.118061973 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10024339 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155069643 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095919648 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101709558 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092222047 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.15053342 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085933263 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081177108 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099701527 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130406041 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095218736 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09694675 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129458752 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097413063 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088176961 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076308463 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.090256371 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101600512 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108010392 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101865227 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090215878 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087361449 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097120428 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075937824 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081318078 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.101815907 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086713025 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.125473751 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110333849 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124899112 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.080154579 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106359922 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.097887104 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130882063 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.118389769 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.084413504 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107792525 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139076778 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.112192212 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.086080058 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101935033 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112530507 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109556769 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098256358 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.137260486 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118099421 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090307865 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094837935 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.246335814 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.115107979 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157084699 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09150135 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106589223 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.14075439 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.115804347 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091848607 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084865874 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09695993 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107334164 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141765674 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.097076256 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.071509067 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093395104 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132869483 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077375256 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100366776 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.093793733 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084348564 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082692855 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069524127 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101930175 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137549177 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.1152763 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100661491 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.107438862 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071417809 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100504524 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106012756 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14326487 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118765794 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099590166 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.100165758 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105453441 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080674965 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.13379525 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.134005099 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093016293 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091906948 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124976055 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.097527239 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.106798744 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11571141 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104488228 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.101860924 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.143977797 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122350359 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.125700577 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106382528 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125635059 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083425231 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118858282 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.076763424 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105470326 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07840113 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107794171 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.080683378 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.112642303 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.080164366 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100769619 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.070165672 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074547619 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.110591187 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.246382084 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087923001 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.137740282 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.132900408 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.083117109 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102752546 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101813494 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102700783 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.11075114 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.09182149 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092659357 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.08029505 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081506732 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100283117 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095113145 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108889769 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080559177 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076291988 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139960654 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104689436 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092106313 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09620445 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.121430474 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.089539007 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087978887 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105261661 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.139533593 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.11968038 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081080847 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092293047 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.070640346 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.085778942 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.076665842 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111622958 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076299402 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111647848 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.070163085 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.130773504 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088403329 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.10259713 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098642003 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.129832897 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.091052404 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129149328 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088093116 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108812497 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095080961 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095687748 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.111000005 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.097048587 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106472999 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111490929 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09432368 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09080541 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123111798 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10681611 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117890409 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106830307 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.136385249 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113853782 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076399253 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106087229 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101375264 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147308194 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100572854 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090675311 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.096550214 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105330899 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08303302 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.297400857 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0887944 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.088030141 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11491613 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.091545846 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098283468 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077592009 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101983679 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09594151 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115259599 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.100232028 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.0939323 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110716298 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111978147 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087227291 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08825406 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124576267 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.130928537 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.103462339 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095384086 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089640613 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099927543 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095201633 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110594667 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08146889 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077079712 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.069353314 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.073809134 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.118848395 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108803981 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099752251 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099037009 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.103301876 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073277749 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088437161 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092107926 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.08460829 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091262708 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.116266877 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104629592 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130343486 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102497354 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08717452 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.141354019 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129412243 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086747427 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093318103 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102098829 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075646291 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1489769 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12023516 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079276463 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086110227 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.078866174 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085810243 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.072662841 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105012058 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104491597 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076857574 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.104410433 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098924029 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.126959868 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098544942 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077579073 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080817304 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075905927 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076372479 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103043828 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.078464803 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07776686 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.132351325 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10504811 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108417929 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084582348 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.229398734 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133787478 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.070417527 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134267539 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083956987 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111574589 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082573631 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080794792 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091174931 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107522334 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10778482 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114687612 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071810192 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104486235 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155555748 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077362371 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076726298 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075624099 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111726202 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088976646 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144151087 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091015644 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094750443 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078722759 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129747805 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104494251 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084038531 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129220003 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080785371 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072719029 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087316052 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.112333158 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.073525902 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076547302 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115155653 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.511730094 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092098953 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076829434 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089739576 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129243052 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084670744 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109632495 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.11909222 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107748887 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.187203171 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.075024532 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09250132 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104881028 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099570575 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092743924 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080254711 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.088352217 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088937053 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.085825072 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108090803 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082196009 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092493526 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.08084301 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104877094 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.13149554 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087818409 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102602317 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089610524 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092603491 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100643226 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114084478 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106898576 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.088552896 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089578679 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.110084346 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084130345 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.232688126 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.1019965 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.078994771 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079819402 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.119414881 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085828678 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.095099126 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105193411 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.091237851 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114798505 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119374063 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113117872 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098907105 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080496269 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087804955 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.089385176 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075253717 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079482535 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07608238 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071851512 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108405673 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087208518 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082999861 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.101759039 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.110661388 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101318397 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108529659 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091709027 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098322469 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101899108 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128454547 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147770426 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099432542 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124616487 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13327225 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078125726 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076961135 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.082032211 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133678693 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.082648829 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093975784 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.23817821 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.079907475 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.082536497 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092775885 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108979418 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.084436368 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081650799 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099712251 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111958578 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085806676 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081904554 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095320949 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.109143195 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.130133125 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090607068 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076996282 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110415447 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103872275 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124970924 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.074681988 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082354486 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.130467144 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089599699 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106458684 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081207408 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125364682 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134506684 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075666138 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090081653 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073968233 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089034703 seconds)
  done (took 51.708062448 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.147423525 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.140662002 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081493118 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096602099 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.188027642 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.209733349 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.13059111 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.105900449 seconds)
  done (took 2.862427766 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069739726 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.084792535 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101800929 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084097271 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068133731 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069152285 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.202488858 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082475913 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068324715 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.107042658 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076488944 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070650538 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.364914817 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067245325 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068280782 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076673802 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068893428 seconds)
  done (took 3.462483156 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.374206874 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623871483 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.32083485 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07618563 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.026984574 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087482074 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.284314109 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137060645 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080650936 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.568723712 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366996839 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130527935 seconds)
  done (took 18.807054054 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077632629 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076553954 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079601126 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.078614651 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075426347 seconds)
  done (took 2.114277335 seconds)
done (took 101.491407783 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084677849 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.173034082 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069251887 seconds)
  done (took 1.999009876 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.083782418 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082370225 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08204771 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.079360367 seconds)
  done (took 2.057489581 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076371728 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077259899 seconds)
  done (took 1.877772715 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232738051 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169194575 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092368817 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084088069 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082876069 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081942496 seconds)
  done (took 1.97992206 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07397353 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072333764 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073228828 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073409086 seconds)
  done (took 2.00788903 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069479226 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067233837 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069740615 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071962934 seconds)
  done (took 1.997092165 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084725969 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079926563 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079072723 seconds)
  done (took 1.962238239 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111444098 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097942977 seconds)
  done (took 1.928607802 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082392959 seconds)
  done (took 1.804404128 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091448493 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.097780003 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.141924352 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108829269 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142178865 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.128133295 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077966061 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078692284 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074417755 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.073369858 seconds)
  done (took 2.733958542 seconds)
done (took 22.646937478 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081013709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365712803 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361568236 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088930028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.679258224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358038086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.971209099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092293973 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.101320522 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069685173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086212428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.663759343 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961788726 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326776066 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.947824646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325201112 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650727422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070105888 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069231956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069786528 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.956033595 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069719572 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070090181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070385084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64959754 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375791935 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071153362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325735869 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06977969 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071531412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357379852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070482892 seconds)
  done (took 16.189409787 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072144072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124181079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074091697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086191409 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071973923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070933587 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072799904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070405233 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111985321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07015269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087258155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069362662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073644197 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071600409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090748136 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07124268 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072369515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071514497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070712561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071519388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089306546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070758286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071344083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073305752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071097813 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083876992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072568398 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070579896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070771359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073156277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073905842 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0726805 seconds)
  done (took 4.205958698 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124147654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127833976 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074997186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111306333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119732867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071843242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153160489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093174516 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115560072 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070796867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087057068 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070416182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106460724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072426602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091888939 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071015643 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072616353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071968007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07086101 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071670318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090260711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070640558 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071498513 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0717244 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071637737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086191545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071788903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071045402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071055171 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073607413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075228168 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072573545 seconds)
  done (took 4.482263512 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07163022 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072804053 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081485213 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081906919 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067908231 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069714593 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070923521 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068694861 seconds)
  done (took 2.325508349 seconds)
done (took 28.937718669 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081288861 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069689974 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072874987 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089570253 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075700058 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071661594 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066345575 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075749796 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07280726 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072271316 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074493454 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068227852 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071746454 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065867177 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073030114 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067706856 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074198693 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072218589 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.072678845 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07424674 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070375257 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073378444 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077262972 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.073247931 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.073287622 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.072858715 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077730358 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073980721 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068357192 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071075907 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070265619 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082578392 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074888467 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.074062835 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072103203 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067974523 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072628283 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070867755 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.074853628 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077030673 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070087835 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077005615 seconds)
  done (took 4.7828278 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089918001 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095162274 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087996613 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084276462 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.106461511 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084286161 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091396875 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080783598 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079553825 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090804397 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075462927 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080097436 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081015154 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074058849 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079743026 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076352876 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081616722 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075872163 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080722732 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080537686 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093042841 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074122145 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081096435 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081721315 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076375452 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082149658 seconds)
  done (took 3.913767179 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073951748 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089788174 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09396608 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142727543 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111477868 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084319999 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083797824 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104223061 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.102505134 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069886404 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073229817 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09648872 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097516287 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076273632 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108459925 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087476969 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081250438 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071122656 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076793421 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104332813 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092515518 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088476301 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102831978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090121958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069591111 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078767712 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076515356 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084987092 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077253536 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082189155 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073525609 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073012537 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070365077 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081407533 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074083067 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067310623 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091043412 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081541083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084037548 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108130685 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078710725 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070956234 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098708412 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135708545 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068671841 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071483073 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072714222 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081517553 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070297751 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098485934 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087443902 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068466382 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.08815701 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070335047 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070228379 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084892997 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070988092 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070555152 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081152226 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075070048 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09005382 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073599605 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0893413 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068940752 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079771331 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070138837 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070387863 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067473598 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.104697868 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076219248 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120855407 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069728308 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066898606 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080903994 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080017903 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075516696 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069083727 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087821541 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081194569 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072584474 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081091226 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071650682 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072324013 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.104635165 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068494858 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067476183 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067117364 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070965326 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072246572 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069326009 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082650273 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068309282 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072006619 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083319676 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068822719 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069660411 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071853229 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069870197 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068216346 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079960735 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072992009 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070162061 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081415944 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069967415 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072401887 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083474918 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078401264 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068161791 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069963277 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071320222 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070762319 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07353289 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072172123 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071324659 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07526276 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076784669 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074910891 seconds)
  done (took 11.17003213 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164186453 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155270631 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07032313 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149458864 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077819244 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.073488955 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.1501096 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.089351645 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069579504 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071402368 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068886036 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.097434644 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092618057 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106393559 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.073487227 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069112541 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095483067 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103034666 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152249506 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148212845 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093535018 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077844597 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072058438 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071104603 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070890555 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07879814 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088908826 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07718061 seconds)
  done (took 4.50253669 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077478351 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.113068594 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073703181 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094334296 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088795063 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069953536 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071734041 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070772642 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087069378 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07660925 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069515481 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07414114 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073329603 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072347933 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070288149 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076237068 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076327576 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068632819 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073244403 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07477297 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080187035 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095494419 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073701295 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069603758 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072415979 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069201241 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076630839 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.07929231 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06817428 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100086521 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067073676 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073801011 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083829396 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070488283 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069218213 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069957243 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069871355 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069731385 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069372989 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067392511 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067503041 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073880285 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068042484 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075545845 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083191872 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076905942 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071182024 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071542489 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07176888 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066364567 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072325937 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07258913 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072435378 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07814491 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.0731073 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071700716 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071083297 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099377283 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075702969 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06884962 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068513791 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070083913 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070369473 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077470136 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086321734 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070978677 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067890796 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069840991 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074602441 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083674499 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068770796 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074761527 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066520775 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069773121 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07171116 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07233776 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070902015 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067836027 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069238971 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069761007 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069456277 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069156654 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068980209 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071626346 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067650966 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067828315 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070016089 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070830441 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075750938 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068841848 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072295453 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070357914 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068373749 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072752596 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074758454 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072340652 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088502011 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078726371 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071325601 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067069957 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084044997 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070897818 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068570132 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075695004 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074802422 seconds)
  done (took 9.568769612 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092560836 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071165225 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088874872 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095764179 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080314196 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074840359 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082542773 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070461162 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085168116 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068711865 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078035154 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067755995 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082025359 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077974671 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071387611 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079773082 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072272233 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090339941 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084649224 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06849395 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078022015 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081935389 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081781946 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087293577 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.087352863 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087395047 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081756058 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072007324 seconds)
  done (took 4.037476565 seconds)
done (took 39.708275816 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.827518115 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.983841665 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.807493602 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.004076967 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.899243411 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.831685952 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.04777859 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.809213097 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.89137594 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.836563955 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.107964758 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.193802307 seconds)
done (took 67.045033838 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.831968366 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.965259215 seconds)
    (2/2) benchmarking "String"...
    done (took 2.031173639 seconds)
  done (took 5.74719742 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.988716426 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.452902581 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.089328741 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.81232714 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.814948806 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.323776204 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.622715074 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.30875301 seconds)
  done (took 31.169831422 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.955722883 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.032353423 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.505998367 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.542611655 seconds)
  done (took 15.826269191 seconds)
done (took 64.400119451 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.821478834 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.810598217 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.869584074 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.841046246 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.811151564 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.813334696 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.810234266 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.813514012 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.819815994 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.043478474 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.812242424 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.816242446 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.813143073 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.833171327 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.643436831 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.86093325 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.820149507 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.822077719 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.833257907 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.842248608 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.820572199 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.831048442 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.27834706 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.970100504 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.421204768 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.017292479 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.047829583 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.246729746 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.825723082 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.825946349 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.896867107 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.081887802 seconds)
  done (took 205.557677876 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.816952799 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.591997941 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.702606777 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.85796122 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.06098807 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.992392159 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.914290179 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.179786501 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.819654883 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.835187857 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.948630991 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.811550354 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.97944885 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.809007 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.851293766 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.894553435 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.957341144 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.000756477 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.851636847 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.962521552 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.819536247 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.803452406 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.74658379 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.940353932 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.849536444 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.820751811 seconds)
    (27/36) benchmarking "syrk"...
    done (took 7.076190293 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.846016419 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.001577217 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.933847447 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.812646972 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.826317288 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.030488859 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.687271009 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.830177783 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.830144606 seconds)
  done (took 170.446521797 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.001747765 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.831201393 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.818376015 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.876386655 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.937438865 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.817867995 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.50406386 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.826094578 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.51856222 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.818511895 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.820144598 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.81885275 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.818705814 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.817794431 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.83095705 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.943563982 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.817753002 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.836196203 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.821619487 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.845915643 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.815632966 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.81787725 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.818072678 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.817767119 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.820855622 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818384541 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.819542192 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.588431106 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.070712739 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.816494487 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.819991842 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.977189755 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.833181307 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.380778775 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.82122735 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.911967115 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.872816833 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.949462552 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.820004192 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.036602188 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.929728298 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.816658156 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.818394159 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.886461333 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.830999748 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.816896852 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.821999334 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.828923385 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.886053047 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.109086063 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.825029736 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.943637467 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.336452236 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.816625252 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.820487422 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.820573899 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.474729535 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.820735201 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.821050949 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.820776638 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.826298035 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.827320765 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.821275569 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.821339053 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.207886381 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.888563686 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.390245956 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.562877588 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.818314617 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.529179845 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.007531923 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.821661302 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.822730705 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.822296447 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.82292868 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.821247842 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.824384703 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.824611032 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.943321139 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.827228422 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.95809782 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.901273779 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.944584354 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.819439322 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.833984873 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.670265729 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.891228311 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.857596118 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.654303934 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.818512156 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.197550201 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.611438684 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.821852057 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.821161868 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.835540542 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.819255603 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.823279969 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.824600955 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.902306947 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.818926563 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.947708934 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.567073183 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.474058021 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.820852829 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825058101 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.834377688 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.905508219 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.943542733 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.822188765 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.888295768 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.824259603 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.825294304 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.823257114 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.938870265 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.820045595 seconds)
  done (took 409.275562416 seconds)
done (took 789.087993742 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.411861215 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.381669641 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.475324631 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.401473445 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.369030933 seconds)
  done (took 13.790928308 seconds)
done (took 15.542959444 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.83708164 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.829954078 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.881490975 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.90722961 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.842306703 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.840661686 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.904656209 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.845018164 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.873973749 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.881590443 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.908955282 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.907933072 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.847601154 seconds)
  done (took 26.060422306 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.834254288 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.985777611 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.036817997 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.859922676 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.833301949 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.043255591 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.889283715 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.96724762 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.965322823 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.043583055 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.051456666 seconds)
  done (took 23.267767025 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.832755828 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.969264925 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.041428531 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.867019466 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.834199084 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.054570568 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.895710286 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.965213376 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.968777427 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.043524848 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.065549759 seconds)
  done (took 23.300062262 seconds)
done (took 74.383034231 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.829104083 seconds)
  done (took 3.583894791 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.853238667 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.023300249 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.829115188 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.832209988 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.827539628 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.83070835 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.833857884 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.829051441 seconds)
  done (took 16.614609195 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.828214552 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.827098883 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.828938059 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.828542822 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.82958141 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.828433796 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.828324541 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.829198177 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.828572491 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.829619506 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.82916401 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.827851002 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.828916024 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.828772623 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.829133636 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.828743674 seconds)
  done (took 31.014646095 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.830283364 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.829848213 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.829890108 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.829145583 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.829782473 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.829702904 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.830655876 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.829465286 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.829472344 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.830090709 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.829872953 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.830517455 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.829145789 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.829933998 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.829042924 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.828953768 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.830593278 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.831038492 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.835945798 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.831278398 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.832268332 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.830412569 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.829369016 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.830443092 seconds)
  done (took 45.684729777 seconds)
done (took 98.659108631 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.552879368 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.552430242 seconds)
  done (took 9.86210588 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.831981346 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.831656069 seconds)
  done (took 5.425006462 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.830765292 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.83044991 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.832029851 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.831176395 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.832847798 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.829762217 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.83148392 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.831275246 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.831127107 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.830831475 seconds)
  done (took 20.069862856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.831512669 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.832533303 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.831790935 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.831349364 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.831950156 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.830830844 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.831259599 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.833383398 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.832243758 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.831737763 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.832120724 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.832067571 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.831706626 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.831701092 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.832452862 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.831566346 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.833174588 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.833028626 seconds)
  done (took 34.734736793 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.831275097 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.83146891 seconds)
  done (took 5.421143064 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.833276739 seconds)
    (2/7) benchmarking "second"...
    done (took 1.832589809 seconds)
    (3/7) benchmarking "month"...
    done (took 1.833078108 seconds)
    (4/7) benchmarking "year"...
    done (took 1.832476093 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.831746586 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.832787513 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.833522626 seconds)
  done (took 14.588325857 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.832612506 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.980947402 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.033933772 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.449095623 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.832857775 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.837576287 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.692039868 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.834804602 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.83834036 seconds)
  done (took 20.090931284 seconds)
done (took 111.94861455 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596284581 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.834410147 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.070843853 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.88611957 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.848439689 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.169675127 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.858088393 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.423291489 seconds)
done (took 42.447464436 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.911215113 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.832519336 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.855710224 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.856822525 seconds)
  done (took 22.305738594 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.835420142 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.127614496 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.850734504 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.720043635 seconds)
  done (took 22.310078171 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.223310437 seconds)
    (2/2) benchmarking "read"...
    done (took 2.169972178 seconds)
  done (took 6.159191856 seconds)
done (took 59.450295485 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833941891 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.833254277 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.836923534 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.835167619 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.833393814 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.835219394 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.834817246 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.833179543 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.835026745 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.835399331 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.834823896 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.833928306 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.833856365 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835599387 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835619818 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835866987 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836114524 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.833802034 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834479599 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.834090454 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834018894 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833847667 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.834300143 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.835769993 seconds)
  done (took 45.793285319 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.836171475 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.834456808 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.835956452 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.83481647 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.834188315 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.837172649 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.8351388 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.835852369 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.836489096 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.834429384 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835411575 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.836626777 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.836643686 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.83662358 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835177339 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.835916054 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.835825277 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835307754 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835100781 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.83652889 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.837612917 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835484768 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.836286693 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837193945 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.835954697 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835703561 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.836309443 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.836105322 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835760472 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.837223008 seconds)
  done (took 56.840715904 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.836613179 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.838644193 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.837662163 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.83772424 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.83673137 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.835667429 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.838037723 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.837777939 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.836947997 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.836358627 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.83836765 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.839641576 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.837337672 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.838666283 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.838951237 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.839385423 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.837785268 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.836219986 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.838701185 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.836853919 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.836443544 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.837477823 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.840230835 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.837557473 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.837528329 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.838130365 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.837119631 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.838960603 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.839786824 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.838565562 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.837579271 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.837700307 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.838335558 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.839485255 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.839930224 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.839027563 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.838334641 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.838064923 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.839138286 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.839477982 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.838663629 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.837358693 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.838324923 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.839573921 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.838013252 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.839735007 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.83909996 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.839383119 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.839052534 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.83771639 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.838758177 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.839278129 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.839704477 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.839535195 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.839176822 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.840084297 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.840958034 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.840251611 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.84047047 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.840573488 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.839587167 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.839585251 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.84060599 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.841831495 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.838824954 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.840003005 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.840186999 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.84098485 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.841034848 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.841320878 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.840074884 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.840532735 seconds)
  done (took 134.158710633 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.840949507 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84101658 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.840634036 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.839658423 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841194694 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.84297594 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.840688664 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842133249 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840991415 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.84318596 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840485318 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.842648482 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841306664 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.840224224 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841637169 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.84209831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841315503 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842790042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.841915831 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.841856357 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84321088 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.84264254 seconds)
  done (took 42.281244339 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841183442 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841222263 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.840958924 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841922668 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.843021561 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.842755331 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.842762554 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841927094 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843386571 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842269734 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842386616 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84221689 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.842315686 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842148752 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842411356 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.842259898 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841943719 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.842487214 seconds)
  done (took 34.928496948 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.843626115 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.84199916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.844228866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.841987865 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.843198096 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.843560241 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842964649 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.842275542 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.843621401 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.843270189 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.843215308 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843817556 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.843300591 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843769899 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842756722 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.843063003 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.8429839 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842153901 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843636309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845264968 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.84387829 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84387264 seconds)
  done (took 42.322559935 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84402703 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.843986491 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.843670494 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.844540257 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.844179859 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.845839667 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.844716955 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.845157783 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.844135656 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.845429435 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845008679 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.844632509 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.844514707 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.845877682 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.845171668 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845162346 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846666372 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844640363 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844402921 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.845886626 seconds)
  done (took 38.668721063 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843257313 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843469485 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846452786 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845432584 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844986469 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.844855723 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846871398 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.84546288 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846184961 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845158406 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845063113 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845289963 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846113842 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846354087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845404675 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845056791 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.846308768 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845645046 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846445182 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845973797 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.847164329 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.847066707 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845998861 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.846953608 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846430659 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844061256 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847363556 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847067482 seconds)
  done (took 53.454592922 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846197983 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847030213 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.847236185 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.84918008 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.847274552 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.847934845 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.848193219 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.847242083 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.846468928 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.847911773 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.847429837 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.8478778 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.847113354 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.847833182 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.84646319 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.84749373 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848004864 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.846901345 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847124258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849596281 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.846210547 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84833556 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.848289884 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.848190988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846556915 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.849646607 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847844128 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.848783354 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846310853 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.848049971 seconds)
  done (took 57.201141584 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.868768611 seconds)
    (2/2) benchmarking "in"...
    done (took 1.868407752 seconds)
  done (took 5.511135502 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.847234429 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849795689 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.848882452 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.849403279 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.849878034 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.848848023 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.850730539 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849864362 seconds)
  done (took 16.568489951 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.848599976 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.854007325 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.850205058 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.850032615 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.849551218 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.857897705 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.850388885 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.850974157 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.851138824 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.850046881 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.852242669 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.851955779 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.85721628 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.853870417 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.850008195 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.851092388 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852808804 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.851430148 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.851664503 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.85141912 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855109522 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.851114599 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.851026289 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.850658033 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.849257427 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.852262841 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.861421121 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.851825929 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.852126425 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.850595535 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.859611341 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.851006221 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.852059282 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.85332455 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.852492834 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.851366947 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.857768338 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.850799504 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.850336432 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.852141845 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.854352897 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.85560852 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.854313331 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.859473008 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.851775574 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.852020314 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.853609998 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.852455481 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.852486305 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.8554361 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.861092179 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851845078 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.852701694 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.853624882 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.852987078 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.852303766 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.851817994 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.85418896 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858607261 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.861428629 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.857367685 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.872233489 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.861216432 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.852467739 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.851771862 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.862966236 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.877465939 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.853487797 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.854078248 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.853252709 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.862329971 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.852284491 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.852545162 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.853621898 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868205857 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.860599123 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.853823879 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.855087533 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.854357899 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.854362589 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.856344094 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.854149264 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.855672736 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.854293941 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862413732 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.879842397 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.854458894 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.855577887 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.857198162 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.856183631 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.859549877 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.858154786 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.853805057 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.853773301 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.854933819 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.857073496 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.854304041 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.853308538 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.853905593 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.864752423 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.854844612 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.854471544 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.857701614 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.863789732 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.854673564 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.855376723 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.854559472 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.855889938 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.862598792 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.855411654 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.855238509 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.854542378 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.85870222 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.859716978 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.855976087 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.858325194 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.863826004 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.865408141 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.857419793 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.860183077 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.861292481 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.859317062 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.866743806 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.881496586 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.856448357 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.861437603 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.86246429 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.870271044 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.861033052 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.858130284 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.85970965 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.856826771 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.854994563 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.859990803 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.855269221 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.855122815 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.856469102 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.856568862 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.85696055 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.858017689 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.861417372 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.858163671 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.858433008 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.856866447 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.862308915 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.856847245 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.859195283 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.865036507 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.858072805 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.857269931 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.857409215 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.860693888 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.860587994 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.858432965 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.857420507 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.857659141 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.857594157 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.858521704 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.861298059 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.857507765 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.858254795 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.860002802 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.86248813 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.858444373 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.858326911 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.858192554 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858686222 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.858657422 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.85994243 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.859946157 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.861012278 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.856935422 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.862905741 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.858338473 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.858399084 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.859883982 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.859704723 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.858471641 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.863572415 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.870580738 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.862603363 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.869896124 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.859423408 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.868132734 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.858368841 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.862499951 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.858692836 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.859661516 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.859696546 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.860434507 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.85957944 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.863499205 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882258098 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.87026904 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.862993663 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.860286434 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.86403345 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.864239413 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.865290408 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.859782623 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.861293467 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.86134996 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.859925893 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.859420916 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.859780624 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.864902865 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.861051759 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.860671351 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.864312926 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.8582581 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.860242732 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.861625445 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.861085265 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.86322842 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.860282153 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.86013387 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.862573219 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.862053394 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.867432259 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.863046438 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.860665693 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.860097046 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.862931266 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.860465505 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.861145579 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.861087149 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.865459568 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.86146214 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.861840338 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.869733069 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.863863575 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.862042835 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.862006049 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.861343854 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.864330659 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.86213624 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.863768404 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.86932227 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.864166228 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.861169631 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.867035508 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.861688038 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.863945298 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.861288901 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.863597844 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.860555825 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.86387096 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.863342876 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.861477782 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.870157587 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.861432325 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.863740914 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.863969827 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.865958803 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.863912365 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.864982768 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.863133577 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.864513153 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.870551357 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.867968096 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.863411703 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.866205391 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.865814225 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.865209539 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.866789159 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.863416998 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.875573613 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.872159673 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.863347202 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.861938703 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.862624489 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.865061093 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.864268049 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.863077298 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.871885161 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.86410598 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.864904932 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.870084887 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.863443593 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.863364478 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.871276178 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.86538012 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.865846292 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.865611924 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.865236791 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.865752964 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.866009399 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.866676184 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.865467156 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.867752399 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.868682611 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.864735199 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.86615254 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.865495408 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.875697258 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.867460883 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.86576348 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.874721812 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.86654053 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.866423759 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.867622347 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.867403801 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.86794955 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.866833546 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.865845883 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.867670297 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.86412043 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.869865022 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.877005663 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.868631122 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.873700156 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.866789729 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.876363235 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.866675494 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.865840877 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.86495219 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.869258921 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.875760319 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.866980074 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.86486463 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.874970593 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.866469461 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.866926262 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.868858098 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.864880522 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.866048839 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.865360364 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.868738514 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.871311094 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.869594519 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.86586983 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.867319664 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.866432483 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.867200307 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.869805727 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.86847941 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.868399143 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.8678668 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.866905332 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.86651359 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.869013748 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.866794753 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.867823021 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.867457769 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.868192246 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.877147866 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.868138859 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.869010406 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.87163558 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.867094968 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.87856264 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.86818465 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.865788524 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.869128604 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.868058301 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.872484091 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.867016359 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.867067752 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.868700059 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.866874311 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.871395847 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.87993775 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.87535271 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.871994675 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.87022253 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.868095595 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.869311487 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.877593886 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.893675671 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.869053698 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.870643747 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.872665954 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.875918062 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.871061813 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.874646847 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873422325 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.875815098 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.869981178 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.870428209 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.872158176 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.882367083 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.870576747 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.870666244 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.869149342 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.87412144 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.871678068 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.871281013 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.872770137 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.873061425 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.870358357 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.880845366 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.869062431 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.872522991 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868815229 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.869191921 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.869303983 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.868822914 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.872441937 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.870939419 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.872273985 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.871362115 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.873076991 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.876968289 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.869692901 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.875439832 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.880383228 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.870049462 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.869726306 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.874164622 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.871808747 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.873192064 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.870816248 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.870523696 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.872841472 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.870324721 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.87266679 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.875599741 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.881327367 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.874179637 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.871164415 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.872155425 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.876016864 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.871041324 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.870719276 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.873819936 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.880508309 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.876332894 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.884965691 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.88220289 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.872115526 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.874689345 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.880303516 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.879958951 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.873253288 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.874072445 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.872497876 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.875635458 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.874918305 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.873505294 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.872574006 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.873832692 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.878151633 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.873353052 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.875177307 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.87516731 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.872509278 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.876422442 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.874916234 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.880285954 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.875239243 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.874015858 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.873371142 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.875800716 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.875446016 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.877730529 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.875387961 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.875402024 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.877210606 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.876695267 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.880199169 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.875203659 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.874444376 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.876359242 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.874083557 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.876214889 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.872850246 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.874982719 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.875778285 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.876842062 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.883043669 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.874735179 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.878218683 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.876140139 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.878683963 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.873717302 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.874127406 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.874609914 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.875318652 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883681456 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.873213607 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.87372274 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.875837395 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.876037451 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.881047329 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.877764684 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.879247049 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.873958168 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.875211475 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.87504485 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.878762022 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.884855434 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.88001011 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.878189333 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.882825546 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.879409722 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.87846975 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.875529892 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.876147529 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.876455268 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.877840349 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.880034949 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.877477783 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.879727725 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.878991213 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.877354928 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.876558865 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.877778006 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.876021905 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.875113299 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.879252579 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.884649979 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.885911343 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.876430261 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.878218298 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.877279658 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.881028708 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.889221154 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.877629901 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.876902296 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.876122983 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.879568615 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.877636146 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.883929278 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.885006528 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.882254559 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.877944006 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.882296885 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.896871214 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.879353936 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.886801061 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.912690342 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.880380806 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.878235126 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.878001684 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.881157708 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.879210466 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.882511913 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.877453587 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.886346759 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.878793602 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.878729934 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.887957899 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.879454988 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.877854438 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.877564846 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.881333875 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.885020288 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.87863719 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.885761924 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.879201995 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.87875917 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.880800302 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.883993603 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.880226682 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.878352961 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.878557476 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.884034377 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.879741309 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.880207086 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.889474915 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.880052344 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.881618627 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.892612441 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.892951132 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.879140148 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.879293147 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.879911344 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.885639756 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.883544223 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.879325475 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.883585705 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.88871676 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.882983146 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.888992251 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.882138358 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.881631812 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.882205429 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.880758501 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.880998373 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.893950175 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.89223651 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.881819579 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.881371371 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.887675532 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.881629021 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.888043723 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.887626268 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.881566282 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.882072614 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.880697263 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.882354973 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.881796519 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.882732528 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.885321103 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.88856866 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.87997764 seconds)
  done (took 1115.060164234 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.880531509 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.880259811 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.880999293 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.879973342 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881975204 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882461839 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.880675676 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.881435736 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.881418572 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.882154906 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.880687101 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882614392 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.882431602 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.88394605 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.880135832 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.881617574 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.879784977 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.88356584 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.883470892 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.881514554 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.881232545 seconds)
  done (took 41.318959452 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.881314515 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.880771627 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.881823319 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.881580302 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.881263876 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.883186579 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.882426511 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.880498061 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.882298382 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883291687 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.883660733 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88174885 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.882827082 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.883709124 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.881484791 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.883054749 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.881987005 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.88096341 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.881404685 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.882314802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.882300059 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.881517854 seconds)
  done (took 43.21196768 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.882502118 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.881341016 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.883815046 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.884524976 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.884571672 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.884172698 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.883643194 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.885601175 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.883240771 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.885311277 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.891392043 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.891610388 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.883948417 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.887549379 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.883371397 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.884123498 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.028593184 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.885067531 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.885648307 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.88537957 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.884997158 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.893177555 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.886888729 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.885474502 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.886618313 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.886662783 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.885319306 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.884928038 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.886270279 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.887314309 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.890430223 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.886631385 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.887047456 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.888389083 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.886307427 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.887404706 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.88956636 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.886113152 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.884038617 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.887084152 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.895147592 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.912227319 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.884993464 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.884952876 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.893725373 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.886594233 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.886040876 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.891277139 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.895857402 seconds)
  done (took 94.425089425 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.885512773 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.886399544 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.884461833 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.88630225 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.886214563 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.886358688 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.886036864 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.885830041 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.886198586 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.885397078 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.885280035 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.886658288 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.886941879 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.887575142 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.886589935 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.886888064 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.886594021 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.887580246 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.886833652 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.887662399 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.887977814 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.88704297 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.887869794 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.888070638 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.887782694 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.888826074 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.887743835 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.888138919 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.889379872 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.889476262 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.888895449 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.889135114 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.889649594 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.888606223 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.888150886 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.888898908 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.89009134 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.888430626 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.888946989 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.887673034 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.888084185 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.887959879 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.888685937 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.889610066 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.887598545 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.889630741 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.890026178 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.888734228 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.889523152 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.88924654 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.889644143 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.890483729 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.888621259 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.889876775 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.888452246 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.890041951 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.890022248 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.889662043 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.890439023 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.89025581 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.8896286 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.891003419 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.890314996 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.8907624 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.890731267 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.89047759 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.889195769 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.889902661 seconds)
  done (took 130.217875049 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889084846 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.890262611 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890991934 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.891245658 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.89188558 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.891307764 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.892454978 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.891730835 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.891613092 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.891814536 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.890115749 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.891156253 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.891056452 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.891633795 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.891647402 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.890420172 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.890790504 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.891698724 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.891298781 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890376053 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.892017237 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.892083655 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.891335456 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.892739407 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.892204975 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.891524272 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.891511289 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.890627935 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890828292 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.891457909 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.891597243 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.891711242 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.89196309 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.891879178 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.892967925 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.891419166 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.892388139 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8906676 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.891051959 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.89275596 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.892756318 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.891420241 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.891338995 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.891368389 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.890878373 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.892494753 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.89189841 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.892239618 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.890407229 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.89307062 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.893005205 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.892577068 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.892366361 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.892073153 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.892687964 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.893606445 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.893834595 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.893477631 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893343202 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.893370753 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.893463768 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.893721856 seconds)
  done (took 119.107010533 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.893707347 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.893491612 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.892954082 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.893589452 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.894126884 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.89344318 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.893121598 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.894642927 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.895657826 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.893580077 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894055298 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.893664617 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895795616 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893570929 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.894970088 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894880488 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.894116506 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.894134945 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.893795933 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.895583739 seconds)
  done (took 39.700531689 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.89310869 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.894138069 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.894607187 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.895254463 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.894778468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.895282022 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.894843408 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.895165018 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894870062 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894657647 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.895740925 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.895762567 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.896104918 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.89407171 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.89634074 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.895305472 seconds)
  done (took 32.13869637 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.894695126 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.896277081 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.894991428 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.896591531 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.896000193 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.895864735 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.894957111 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.896551943 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.895950489 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.895802488 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.89628364 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.895287529 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.896141485 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.895703214 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.896554435 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.897641042 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.897366873 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.896225112 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.896071919 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.896728915 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.896728049 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.895567681 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.895857535 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.896679787 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.896059412 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.895747247 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.896682624 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.896107996 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.89609803 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.897946484 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.897075186 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.896810672 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.895620829 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.895936472 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.895734023 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.897964843 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.895941111 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.897532143 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.898109059 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.897156769 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.897902016 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.896250524 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.896535512 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.898709104 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.896927943 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.89604148 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.898623972 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.897712076 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.896832616 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.896765191 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.897406617 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.898088179 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.898211056 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.899267181 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.896820352 seconds)
  done (took 106.135142714 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.897200803 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.897183195 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.897394555 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.896505179 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.898379977 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.899140649 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.898573539 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.897188616 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.898595807 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.899474645 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.8989406 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.899902553 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89624524 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.899641199 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.898106278 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.898293922 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.898859812 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.897709659 seconds)
  done (took 35.988915437 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.899867594 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.900115514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.899486517 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.89881543 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.898929853 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.899330184 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.898288427 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.898637398 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.900632428 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.898794622 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.898509714 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.899193756 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900189083 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.898786267 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.899492608 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.899619666 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.899263427 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.899014977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.900225008 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.900635917 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.900524918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.899878352 seconds)
  done (took 43.610992942 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.899587807 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.900701663 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.916453844 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.922917688 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.921011253 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.938723818 seconds)
  done (took 13.322331686 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900964665 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899943628 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.901407651 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900726838 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900321302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900613292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90450885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902663427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899600927 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902882058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901192735 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900207648 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901181389 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901948306 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901849998 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902004247 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899943425 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902249919 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899861491 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90125303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902180676 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901684605 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901862379 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901415384 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901704126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902068553 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901973879 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902829567 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902237702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902901763 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90243767 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902905361 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902130656 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900324686 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903189366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902564125 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901096159 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902534826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901443947 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901632916 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.901770201 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901698932 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902281723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903384607 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901220402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901406346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903137069 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902861447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904625162 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903986452 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903772832 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902489021 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901918221 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901840619 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902711932 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902664376 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905056339 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902343049 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902631652 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902518955 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902595925 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903868884 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903041845 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902438345 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904144109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905748711 seconds)
  done (took 127.367555869 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903332438 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.903139799 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902998619 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90246968 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903113408 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904139394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904293802 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904404321 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903670408 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905989803 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906424405 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903412736 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903749447 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904599417 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904671949 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904788612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905991701 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904577953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905842851 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905139981 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904867915 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905435645 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906792149 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.9054544 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905975569 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905766331 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906516213 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905506633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90508368 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905164797 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906328622 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90520229 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905612298 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.906436778 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906277452 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906114286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906148277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907249799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906505481 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906662534 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906915555 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907181905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90660396 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905660396 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907197265 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90732081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906150591 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907924508 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908242014 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90827368 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908338102 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909168827 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909184045 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908481532 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907450344 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908900597 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908247284 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908775304 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909018201 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910022421 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910937098 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908466699 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910496236 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908507555 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908258868 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909645541 seconds)
  done (took 127.649871647 seconds)
done (took 2598.751938259 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.001147819 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.001543453 seconds)
  done (took 15.833294255 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.077024008 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.031576951 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.917937142 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.958240914 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.912903548 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.944529302 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.933860216 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.913046925 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.918827269 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.917583083 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.916759653 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.103224829 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.974623416 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.913411837 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.917514711 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.009643583 seconds)
  done (took 53.46838452 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.925751999 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.918738276 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.936967716 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.920181656 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.925224506 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.943317066 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.945201369 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.928812103 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.985347634 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.932758599 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.045139983 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.931493788 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.923532429 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.978797287 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.930827772 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.937798763 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.016028501 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.998560767 seconds)
  done (took 36.959073529 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.005155699 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.923805484 seconds)
  done (took 10.773341957 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.916366169 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.942171778 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.929948454 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.931122281 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.905187371 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.925716567 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.923464578 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.909412086 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.913309492 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.946952641 seconds)
  done (took 71.110684128 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.922951277 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.919977369 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.921470645 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.917130609 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.913853911 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.918250051 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.917262285 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.917267965 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.623732829 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.958116135 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.928104954 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.927487229 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.916088549 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.918680944 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.914681012 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.941849109 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.081959959 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.914666892 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.916173087 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.923570642 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.918825146 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.005096174 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.9337274 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.918962745 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.956087237 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.614230637 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.930288347 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.923494251 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.087694466 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.913836778 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.918622516 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.129725638 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.927076648 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.291725251 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.188713119 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.924895218 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.926496585 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.927375182 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.916267187 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.092929594 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.918782725 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.926603057 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.817738702 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.16310813 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.006943438 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.965786109 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.298099931 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.918332774 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.920380341 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.952848828 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.922808139 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.919638982 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.938278178 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.432280841 seconds)
  done (took 135.701250897 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.916705792 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.162002447 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.068376251 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.919871478 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168246376 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124670893 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.903741303 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.96380834 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.915892809 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.115530105 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.165419161 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.015573911 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.914642766 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.916839623 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.912082604 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.911385222 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062926158 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.983189975 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.914764511 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.917285885 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.941534903 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119954361 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.035988336 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.916691287 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.941776917 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.127416447 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.035019047 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.017014655 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.655101946 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.917451355 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.981265149 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.91719691 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.919151806 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.911553474 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.073385245 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.013148766 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.001594636 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.91805033 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.919179733 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.920382867 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.591813569 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121326401 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.009516231 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.035442007 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.167152804 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.130571569 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.525944875 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.918535144 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.547577303 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.08769608 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.125641401 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.126027111 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.035671156 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.918412479 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.198362343 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.919126067 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.920032369 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.139722644 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13634225 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.013770463 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.919195617 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.921745622 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.91541844 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.15761067 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.91870384 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.006808087 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.919387655 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.915937021 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.012460456 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.017496647 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.14401181 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13575884 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.946788954 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.264459375 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.425394685 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.121384587 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.986110374 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140413434 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.924491631 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.915681288 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.997565909 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.765126195 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.173949655 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.159067246 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.116550707 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945700155 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.550326821 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.921246494 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.110717256 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.102895855 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.152073106 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.166591605 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.154705125 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.230367706 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.920119213 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.92178541 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.213497808 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031501912 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856390095 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.264335394 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.155202424 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.402503259 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.948286415 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.208536235 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048075081 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.920767972 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.562732781 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.921506797 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.130299701 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.959980412 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.923417613 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.923377862 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.108263114 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.823112984 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.921215908 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.623457816 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.985641688 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.921407944 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.128303242 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.923952254 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.169587167 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.929988967 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.15966352 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.073578336 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.952914558 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.100303112 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.169935455 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.544363617 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.167008159 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.169000227 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039955955 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14789841 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.708501332 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.924911835 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.187222386 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.928126298 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.924138849 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.091160629 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.928090374 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.068385127 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.925195181 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.193351753 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.946198105 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.15527672 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.92476482 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.157031466 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.953957848 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975167636 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.929414281 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.052937917 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.927718322 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.742283908 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.08594511 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.925305569 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.918978117 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.509173984 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.927710092 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.071911616 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.153723155 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.94764671 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.995623289 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.474627822 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.914413286 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.006303994 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.950370536 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.218079382 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.928322712 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.176321841 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.901771924 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.398642348 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.926511775 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.16319449 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.109424269 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.927827151 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.919699456 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.762254168 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.909278509 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.926665687 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.081439789 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.271036083 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.69408701 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128560014 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.930232859 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05146233 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.930569076 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.001771215 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.259290011 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.921852534 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.926951894 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.928495791 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.927741003 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.928045769 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.139749049 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.955622171 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.362013572 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.064651356 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.183272922 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.23319928 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.125685749 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.964227592 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.931282941 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.149974622 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.932033788 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.991023112 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.931955395 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.947473366 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.161059063 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.933675697 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134269488 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.165660467 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.791800092 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.975669761 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.932377582 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.926146475 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.858352549 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.076554405 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.01312661 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.935042589 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.929603489 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.041465047 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.049866741 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.105870629 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.62835737 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.144349134 seconds)
  done (took 911.894355827 seconds)
done (took 1237.573603555 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.929578422 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.923895374 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.929202934 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.929614516 seconds)
  done (took 29.561977977 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.935918194 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.930938202 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.930816471 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.930560077 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.931954646 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.930944857 seconds)
  done (took 13.442857314 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.930369993 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.925921628 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.930770775 seconds)
  done (took 22.640615638 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.01056663 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.347136682 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.080033555 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365578029 seconds)
  done (took 10.656214725 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.932792365 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.932101275 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.93229755 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.932871474 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.937647934 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.938014582 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.931980662 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.935789251 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.940292902 seconds)
  done (took 19.268395911 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.926002737 seconds)
done (took 101.346640022 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.926931001 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.941265832 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.059265021 seconds)
    (4/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.100891998 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.945218489 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.025484798 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.240055891 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.693963763 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.146204996 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.945023862 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.167199591 seconds)
    (12/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.077100101 seconds)
    (13/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.006562523 seconds)
    (14/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.680650322 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.417964529 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.458419507 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.081252992 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.927554601 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.92989634 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.955600838 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.743942686 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.161120883 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.024215851 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.93384298 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.377770981 seconds)
    (26/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.014916891 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.019723752 seconds)
    (28/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.183120875 seconds)
    (29/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.108335718 seconds)
    (30/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.077273762 seconds)
    (31/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.930456385 seconds)
    (32/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 4.028633206 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.961851 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.047138651 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.937627695 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.235909107 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.928672105 seconds)
    (38/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.347697509 seconds)
    (39/309) benchmarking ("sort", Bool, false)...
    done (took 2.148099157 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.837363934 seconds)
    (41/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.194612069 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.981328886 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.036107153 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.484160074 seconds)
    (45/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.040604801 seconds)
    (46/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.780592257 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.219134448 seconds)
    (48/309) benchmarking ("sort", Int64, false)...
    done (took 5.554064167 seconds)
    (49/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.726180916 seconds)
    (50/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.325432501 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.176269702 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.01110381 seconds)
    (53/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.933061928 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.860081841 seconds)
    (55/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.052405572 seconds)
    (56/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.948936425 seconds)
    (57/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.635105994 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.094177905 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.529627374 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.933537898 seconds)
    (61/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.986349621 seconds)
    (62/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.247123551 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.009754525 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.161290895 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.935929156 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.634485888 seconds)
    (67/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.130888148 seconds)
    (68/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.03168163 seconds)
    (69/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.071147652 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.82499906 seconds)
    (71/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.143664262 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.331763821 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.931028001 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.351041248 seconds)
    (75/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.018062762 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.694904313 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.936685671 seconds)
    (78/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.602341721 seconds)
    (79/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.752432357 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.360837334 seconds)
    (81/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.94725896 seconds)
    (82/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.298958516 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.235653944 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.681954749 seconds)
    (85/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.145780791 seconds)
    (86/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.276073152 seconds)
    (87/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.953129298 seconds)
    (88/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.709211263 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.260114112 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.281599853 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.788118421 seconds)
    (92/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.043631877 seconds)
    (93/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.627852789 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.626620346 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.039713937 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.95128105 seconds)
    (97/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.08414223 seconds)
    (98/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.020840176 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.242517728 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.945706295 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.14602716 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.245366561 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.951953853 seconds)
    (104/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.204079256 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.860427703 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.277555903 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.934030127 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.012424148 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.306534329 seconds)
    (110/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.952736563 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.181826391 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.24422344 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.759071759 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.255255398 seconds)
    (115/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.410946736 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.954433814 seconds)
    (117/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.153203385 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.95227144 seconds)
    (119/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.214872342 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.03734232 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.94080521 seconds)
    (122/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.015131323 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.922174877 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.047867481 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.201250833 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.93652599 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.12048345 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.174371247 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.016590466 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.240198338 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.951904423 seconds)
    (132/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.034129056 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.937084057 seconds)
    (134/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.144203599 seconds)
    (135/309) benchmarking ("sort", BigInt, false)...
    done (took 6.937885069 seconds)
    (136/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.096180632 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.193299264 seconds)
    (138/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.039506015 seconds)
    (139/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.760815787 seconds)
    (140/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.263231768 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.254112798 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.936853934 seconds)
    (143/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.12373787 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.238147884 seconds)
    (145/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.95681704 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.060752729 seconds)
    (147/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.240377081 seconds)
    (148/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.349942054 seconds)
    (149/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.081739339 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.597690824 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.83580143 seconds)
    (152/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.983785134 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.937263545 seconds)
    (154/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.571159569 seconds)
    (155/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.288101327 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.050303226 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.178155406 seconds)
    (158/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.387931082 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.255331526 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.968968583 seconds)
    (161/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.940804754 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.199420953 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.947109153 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.016940256 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.327089402 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.934719301 seconds)
    (167/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.044031415 seconds)
    (168/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.068470599 seconds)
    (169/309) benchmarking ("sort", Float32, false)...
    done (took 5.595993121 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.939536835 seconds)
    (171/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.93645203 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.011110963 seconds)
    (173/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.648490303 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.114176144 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.944382893 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.042796423 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.947017282 seconds)
    (178/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.098690028 seconds)
    (179/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.940342548 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.021356092 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.137042594 seconds)
    (182/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.410164245 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.288597649 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.134672011 seconds)
    (185/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.958483241 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.941203312 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 4.941117346 seconds)
    (188/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.132120558 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.350235289 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.937552083 seconds)
    (191/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.582888218 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.997730967 seconds)
    (193/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.940272509 seconds)
    (194/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.386554393 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.006346316 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.125813087 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.94521583 seconds)
    (198/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 3.615800249 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.949223343 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.336381316 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.999637122 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.063677501 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.942519125 seconds)
    (204/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.046574777 seconds)
    (205/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.945995164 seconds)
    (206/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.505267161 seconds)
    (207/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.230782827 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.02644792 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.17580111 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.254306125 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.945224304 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.956578573 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.741960028 seconds)
    (214/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.154441565 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.070369547 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.617919712 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.232427795 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.312358445 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.938528372 seconds)
    (220/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.962288735 seconds)
    (221/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.002038853 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.027384929 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.959497211 seconds)
    (224/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.071807737 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.053704977 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.951331918 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.022741379 seconds)
    (228/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.325900011 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.329357315 seconds)
    (230/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.074056981 seconds)
    (231/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.428436398 seconds)
    (232/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.068895441 seconds)
    (233/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.706278292 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.071765567 seconds)
    (235/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.946027759 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.032788432 seconds)
    (237/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.046640921 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.080971827 seconds)
    (239/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.206172106 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.249957405 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.052931141 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.89816561 seconds)
    (243/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.501669998 seconds)
    (244/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.955616465 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.351083562 seconds)
    (246/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.952455407 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.228257945 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.951637186 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.944429481 seconds)
    (250/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.082138392 seconds)
    (251/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.947938565 seconds)
    (252/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.129440723 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.953112897 seconds)
    (254/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.996050119 seconds)
    (255/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.033762813 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.973456555 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.842610727 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.01501018 seconds)
    (259/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.044579564 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.811661633 seconds)
    (261/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.398528981 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.076848447 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.07842959 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.944739215 seconds)
    (265/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.354544273 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.24745658 seconds)
    (267/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.075132844 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.946255519 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.27941499 seconds)
    (270/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.071652614 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.961216686 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.240792438 seconds)
    (273/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.084178085 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.092876184 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.350187426 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.153934064 seconds)
    (277/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.146594532 seconds)
    (278/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.452839147 seconds)
    (279/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.316620562 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.253755095 seconds)
    (281/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.338707395 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.939765373 seconds)
    (283/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 10.39623434 seconds)
    (284/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.223058569 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.944759902 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.970811687 seconds)
    (287/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.382522065 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.944244731 seconds)
    (289/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.897644262 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.88227163 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.193586482 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.944812921 seconds)
    (293/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.661134021 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.263151243 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.967757371 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.333709933 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.958475906 seconds)
    (298/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.60887814 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.197118018 seconds)
    (300/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.030522928 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.072118805 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.947362065 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.212333125 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.085271618 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.842925142 seconds)
    (306/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.423114816 seconds)
    (307/309) benchmarking ("sort", Float64, false)...
    done (took 5.645022289 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.960810178 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.19488883 seconds)
  done (took 1033.213121838 seconds)
done (took 1035.127720376 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.978400472 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.971125153 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.950322959 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.974098067 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.063855034 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.994662835 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.965792884 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.95694705 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.004316332 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.000925101 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.951511661 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.993839316 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.952173424 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.951107922 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.951555185 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.969183453 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.262190881 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.982623387 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.971948123 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.964320908 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.969995476 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.951364577 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.003358607 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.994466823 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.957272532 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.958498822 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.955534375 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.972597142 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.066022333 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.95660622 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.957282306 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.965096256 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.262260885 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.982014907 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.950833202 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.971997201 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.966647225 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.965037686 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.956845994 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.985295482 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.41565218 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.954442283 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.954501731 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.954952981 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.953580453 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.962190893 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.954036837 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.962548585 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.969494932 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.97233616 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.41246062 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.9720111 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.957033473 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.955502529 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.967151383 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.954234999 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.959084947 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.973693549 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.974566113 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.973209231 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.252663382 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.990713319 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.9592495 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.974427996 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.96390509 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.450340226 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.955636936 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.963260488 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.418336565 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.965678524 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.450669085 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.96655396 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.959134248 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.971739972 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.988575536 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.265690922 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.982708876 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.954327045 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.964702223 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.953894268 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.967770123 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.973050609 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.960999325 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.956152639 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.97528162 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.99885787 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.969779397 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.95694598 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.969698605 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.976793471 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.966185005 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.970060243 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.961144355 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.956377304 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.971413032 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.962506963 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.959947125 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.960011237 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.963932094 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.971297258 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.41972153 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.977842576 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.95489397 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.953712963 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.957567973 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.97190989 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.418243562 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.960285047 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.980510183 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.00886251 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.961626117 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.256498096 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.991239342 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.977035485 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.972064073 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.961034034 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.956054597 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.255412679 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.443899182 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.97483127 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.958300598 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.957002943 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.977220262 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.961155119 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.955436788 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.269053743 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.990394671 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.976923095 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.082166942 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.97234294 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.991686419 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.956828505 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.962540072 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.006555425 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.979025981 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.991516898 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.962554531 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.976849938 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.97623584 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.955957207 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.972007907 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.972832059 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.960037993 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.969107937 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.957724856 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.005327291 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.977373712 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.975676235 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.981516717 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.083100664 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.957911415 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.25606573 seconds)
done (took 307.572251925 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.043646749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.958592825 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.050233135 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.958670483 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.051917946 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.034069885 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.959905359 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.958872824 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.956920282 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.467665798 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.958579838 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.962244447 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.957870179 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.957817964 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.032088457 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.959270358 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.958861967 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.239151815 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.95930703 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.042810672 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.957787695 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.959206921 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.959460202 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.474909885 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.960292737 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.960840521 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.044845785 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.959056718 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.252658291 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.959665286 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.95846761 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.250936608 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.04443153 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.972504945 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.967044853 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.967773836 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.05367545 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.965860749 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.032311128 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.031787781 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.052146164 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.993178666 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.959976684 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.961055367 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.964361121 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.961594374 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.959853751 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.991949929 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.959539503 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.965800292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.240459967 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.965323864 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.967499077 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.95961673 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.960557449 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.973728859 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.961376331 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.962986132 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.045621125 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.961321039 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.033612418 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.478490536 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.472149601 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.961158884 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.959873869 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.961060393 seconds)
  done (took 190.71446162 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.02709883 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.033945328 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.029652774 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.966303982 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.009764126 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.030391471 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.967053864 seconds)
  done (took 15.94343174 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.969548453 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.963439491 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.022707154 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.021173628 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.962342667 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.142711806 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.975157496 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.966755676 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.989905699 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.962689997 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.598211904 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.024194544 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.968039781 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.961706011 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.97558755 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.027394046 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.965778925 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.962645971 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.073676695 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.113533613 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.968408386 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.969716954 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.98949978 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.97590453 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.963227901 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.962272329 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.96241355 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.969705916 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.963023941 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.963496431 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.963937304 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.028005783 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.964487699 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.962385114 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.96354574 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.96453629 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.962891635 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.962931404 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.963644837 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.966046014 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.963977903 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.96253554 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.9650571 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.962783681 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.966938293 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.988822008 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.963581881 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.965437225 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.967266692 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.965510007 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.994752916 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.965213433 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.963952327 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.970477179 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.008414779 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.973838215 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.964625032 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.965062935 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.96503429 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.965446676 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.966130772 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.114396542 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.026081044 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.966691706 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.025893777 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.123464072 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.966574116 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.966218725 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.966214919 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.06151381 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.967495035 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.026992706 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.967929797 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.086278277 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.965142422 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.146497145 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.991106815 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.970111638 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.970342558 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.966884181 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.974337214 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.965643084 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.967827874 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.974139691 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.971877796 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.966603239 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.967371825 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.968901986 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.976898499 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.967567378 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.01875711 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.967231698 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.968068832 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.109561436 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.966462201 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.077731204 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.995579069 seconds)
  done (took 215.37557464 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.974570134 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.977283768 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.971345525 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.984134014 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.971364398 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.96865019 seconds)
  done (took 13.733418902 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.970591479 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.971318547 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.966232791 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.967072516 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.96731851 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.967197137 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.967678063 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.969564257 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.971876177 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.964620884 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.967102129 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.967565482 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.968773329 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.966661744 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.967734748 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.967980892 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.968558082 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.968463221 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.968780295 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.967948231 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.102591556 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.967439801 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.967779328 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.976946611 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.971356894 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.968821687 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.981934004 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.968020064 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.969466715 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.976986923 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.973075544 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.96859943 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.979528564 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.978602564 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.975538998 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.979365575 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.973409351 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.971001911 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.96863079 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.970342498 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.970379921 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.969674296 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.968922269 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.970937932 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.973328309 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.985465467 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.975939824 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.983485614 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.972009718 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.972897737 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.971264705 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.971387743 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.970195426 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.970971667 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.979571155 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.975015547 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.973973892 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.970770474 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.969897232 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.979110947 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.973834416 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.970038972 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.973625788 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.974540628 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.978675549 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.969871279 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.979439479 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.974289047 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.971212801 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.970994682 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.97040037 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.969946831 seconds)
  done (took 144.993017205 seconds)
done (took 582.657234752 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.028303073 seconds)
  done (took 8.916939889 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.122263727 seconds)
  done (took 9.0906345 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.889567028 seconds)
  done (took 10.783386397 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.013108342 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.968930368 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.986723018 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.970409221 seconds)
  done (took 29.841791131 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.17218444 seconds)
  done (took 9.064140565 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.986111748 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.967148133 seconds)
  done (took 15.906088865 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.142971499 seconds)
  done (took 9.035331069 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.428051036 seconds)
  done (took 9.341933479 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.988482417 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.972882272 seconds)
  done (took 15.875257982 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.974180753 seconds)
  done (took 8.865845065 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.746922457 seconds)
  done (took 9.719831491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.984184611 seconds)
  done (took 8.895852386 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.004726936 seconds)
  done (took 8.898892802 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.084530535 seconds)
  done (took 8.980823217 seconds)
done (took 165.106001063 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.97997192 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.974039329 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.972800538 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.972935516 seconds)
  done (took 29.790070157 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.007709638 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.007962093 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.016625839 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.024086042 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.998139237 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.998212517 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.007751036 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.008820449 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.998120549 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.00792699 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.008965064 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.00723102 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.009537111 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.017478045 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.016532451 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.006741383 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.008688958 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.00760783 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.000873478 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.019710287 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.007121035 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.008846384 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.975508922 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.973859917 seconds)
  done (took 50.038032989 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.168725708 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.041892631 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.129345163 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.020990627 seconds)
  done (took 10.254118453 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.975561402 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.039523122 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.025545595 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.027385262 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.061508164 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.076775955 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.028116347 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.186761871 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.088822373 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.101233026 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.982924117 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.995968745 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.000608214 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.023665545 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.076238134 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.974682983 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.974744997 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.117438507 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.036149064 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.186593182 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.975853836 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.02956224 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.069656151 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.028615811 seconds)
  done (took 50.976070043 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.974850911 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.984455305 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.983515149 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.976400031 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.975603633 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.980339701 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.983134511 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.97771858 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.998121316 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.97850792 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.975925075 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.977129263 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.982214427 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.977516976 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.977293239 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.990372727 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.991369634 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.97595228 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.980137593 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.984328506 seconds)
  done (took 41.520135669 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.974759996 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.822515111 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.321600895 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.227199831 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.975839741 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.971155109 seconds)
  done (took 32.188124565 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.989422263 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.986020613 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.978559677 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.035827572 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.118286675 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.979445837 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.977970958 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.990324201 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.021874444 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.041588084 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.001708515 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.001851364 seconds)
  done (took 26.01944529 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.978174082 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.978171665 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.979470972 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.989882057 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.988475151 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.986232629 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.987913111 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.977750667 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.991155732 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.997256331 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.98636955 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.990228585 seconds)
  done (took 45.731888862 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.19363859 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.203573687 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.198818894 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.588295447 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.960492405 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.87734617 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.574638853 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.598615003 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.259423774 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.951058229 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.945172915 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.852828421 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.221130724 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.97998769 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.232366408 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.902085929 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.978577929 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249188277 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.980142965 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.981960753 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.257924318 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.027696336 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.192268588 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.026640059 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.193006575 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.470089142 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.230271923 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.241488704 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.309305094 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.03210019 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.194243596 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.024924782 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.987225445 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.990489469 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.981846704 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.991383725 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250694419 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979293241 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.982365164 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.988948572 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.901198754 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.194984312 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.082821032 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.39264554 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.097918406 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.22217491 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.984838613 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.18135844 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.040695002 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.123981432 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.07142125 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.195391113 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.905469414 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.255604061 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.094447622 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.984582116 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.985256591 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.680234325 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.223300428 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.0606914 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.204595538 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.082268089 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.98514747 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.076401179 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.976979576 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.096018006 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.3529493 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.983021478 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.982252014 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.988813242 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.077813126 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.195070858 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.982202117 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.982243887 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.999488467 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984120949 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.332755022 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.55932587 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.982775455 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.548790528 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.467459925 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.947620565 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.47460398 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.032972868 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.257246247 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.191604622 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.165911427 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.224673553 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.864357934 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.987591351 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.788940644 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.063215337 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.060722221 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.982884965 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.193211513 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.177896181 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.086078001 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.982981042 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.910262113 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.993912606 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.185362653 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.466119851 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.03994903 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.978026465 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.984408068 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.985967152 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.985310935 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.999320264 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.995691481 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.505383691 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.255260784 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.085780623 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.231824996 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.972838425 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.666493898 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.244161034 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.107477813 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.547444956 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.107722617 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.984122132 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121812528 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.990019544 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.986713046 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.362840239 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.389766723 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.196722414 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.226855363 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.006243517 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.007848727 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.989499059 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.067571249 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.210574402 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.986198143 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.228271382 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.222294693 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.645074999 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.985165496 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.054978589 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.994916888 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.199742896 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.067872798 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.521930517 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.200449805 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.571825581 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.972966832 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.485463514 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.144042504 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.356785234 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.001974949 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.196959394 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.018373359 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.690838224 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.910757404 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.991458195 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.314887893 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.099278659 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.013462401 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.988103077 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.98705937 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.993838717 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.068936343 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.055701889 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.062549673 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.913270193 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.985029976 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988044687 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.986556889 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.510272274 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.598919443 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.273292987 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.988355822 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.049181521 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.989391138 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.595498743 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.987374735 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.112363253 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.991164978 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.665935105 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.010516787 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.138851729 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.369027622 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.100362069 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.988134504 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.988585589 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.687243889 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.996605506 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.687829906 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.268058326 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.983749986 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.427553732 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.039893782 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.175897217 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 2.002059018 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.989198382 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.991094703 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.989809069 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.192572861 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.5004466 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.208322968 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.326194067 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.073903172 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.251692363 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.174795643 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.486289343 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.664918716 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.485301012 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.215041312 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.990443855 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994315147 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.647236958 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.992453783 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.206924048 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.193690628 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.25883572 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.273737319 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.406508429 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.994277293 seconds)
    (218/481) benchmarking "4d"...
    done (took 3.007008887 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.23168347 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.989505266 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.425569562 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.990811045 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.237559877 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.793559011 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.248013903 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.053764236 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.001082527 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.627897403 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10278848 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.945231453 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.108990963 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.917363967 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.603806309 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280403931 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.257147692 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.968322286 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.316991023 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.282376768 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.142142234 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.605963984 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.986803855 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.035930398 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.073213725 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.00029697 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.561759162 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.038078342 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.037798729 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.996448077 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.993624929 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.997512378 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.669778687 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.065585795 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.114633257 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.649255998 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.510795778 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.912626586 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.257888357 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.047607135 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.457677401 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.029365781 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.210283862 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.99998195 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.587226051 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.048419261 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.262636083 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.944376011 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.205922396 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.200828886 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.022502691 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.997531397 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.92286709 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.871358617 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.994197646 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.20604286 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.890583663 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 2.000577304 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.283592373 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.629521314 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.0339998 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.998682474 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.216926141 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.300147302 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.244748362 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.003626163 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.211133367 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.119374871 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.914287923 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.47570678 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.575065227 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.697134209 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 2.009446974 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.199160833 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.226635916 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.301303238 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.041673573 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.067300674 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.262289456 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.973495644 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.99676907 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.516963682 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.094286633 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.236667958 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.302701474 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.537643878 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.327393715 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.421073478 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.051891966 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.202111453 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.350638184 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.234317808 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.003367758 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.099134992 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.207082385 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.275016469 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.881336315 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.708172728 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.239672808 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.002679242 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.9540268 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.20635084 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.500682864 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.351517012 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.526460242 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.22118484 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.029906815 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.48134531 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.012129048 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.934676535 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.99560072 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.950072935 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.215770691 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.214635071 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.041002823 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.556143938 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.157953345 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.3928447 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.263772589 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.040454864 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.926283352 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.621806499 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.945092123 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.000783455 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.035808412 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.071597266 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.004452033 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.20352825 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.439092545 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.046594893 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.540887595 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.195298931 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296821528 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.263177251 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.289591054 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.950422336 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274410035 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.950576798 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.660341928 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.092095866 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.088034183 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.00112809 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.0027986 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274524197 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.229961622 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.596524303 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.041118529 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.230535712 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.088180395 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.00247287 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.004975616 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.508113163 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.241304862 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.215632866 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.078993933 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.144265926 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.075419645 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.515625689 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.007966539 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.009207331 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.139115621 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.998150304 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.646840771 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.296065541 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.732312867 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.202534857 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.52216515 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.877618204 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.215191284 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.052321184 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 7.003123056 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.009995239 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.007979713 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.243621835 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.269549648 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.760580079 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.005052137 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.002027482 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.873340575 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.605452985 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.236253143 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.012266182 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.060537757 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.006672486 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.122406063 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.999783859 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.262580655 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.058198905 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.003785193 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.009235672 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.218446721 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.516287516 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.018745539 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.703142169 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.206596433 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.009681608 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.48674291 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.448718609 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.283563121 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.051502413 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.227441432 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.253120794 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.519538677 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.236298839 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.005274452 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.226413584 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.00597844 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275218063 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277516818 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.005849186 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.223008897 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.517768348 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.301245605 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.012521739 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.884672397 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.999769868 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.26505772 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.056555527 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.003278688 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.014902085 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.551019684 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.611780131 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.480262282 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.151109755 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.227868165 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.698408168 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.755947089 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.010191813 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.00985386 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.618777157 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.713497391 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.219768412 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.294604679 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.954888139 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.212459959 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.713369109 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 7.001651182 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.270513479 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.932717306 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.010411084 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.653805103 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.280074648 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.941855867 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.005103791 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.594114292 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.008323283 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.093004975 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.007078182 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.122782308 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.270723751 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.278002714 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.108073472 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.64691455 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.614394648 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.941976395 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.04699319 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.814333547 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.579310906 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.649996358 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024847779 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.024623778 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.935114139 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.012622729 seconds)
  done (took 1704.041129164 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.016168308 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.059365179 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.050257211 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.056252807 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.029168376 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.039326551 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.058085592 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.0982346 seconds)
  done (took 58.332529921 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.00629613 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.019078188 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.013942799 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.009024055 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.028701751 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.007192849 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.165136393 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.018894226 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.012602352 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.012878462 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.008714065 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.004342644 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.286672222 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.025767385 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.00917884 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.458748522 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.029472115 seconds)
  done (took 77.052146359 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.011415903 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.505720861 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.054154254 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.009194018 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.022259836 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.010591131 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.235035959 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.015182658 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.011266267 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.157661858 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.302345094 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.017382582 seconds)
  done (took 92.280164565 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.015772971 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.010328313 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.011602455 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.009945691 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.011069658 seconds)
  done (took 11.99275034 seconds)
done (took 2232.173901069 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.252249979 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.06994277 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.111487459 seconds)
  done (took 6.108143038 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.160694253 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.204364708 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.31764644 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.07317119 seconds)
  done (took 10.693346736 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.270944564 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.381469311 seconds)
  done (took 6.58069214 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.391960254 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.014995112 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.39901039 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.014739115 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.012363434 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.015983863 seconds)
  done (took 22.976459025 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.014966443 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.014499078 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.013781974 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.014180558 seconds)
  done (took 9.988859881 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.011597659 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.703074962 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.011782887 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.021940024 seconds)
  done (took 21.676315942 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.155819831 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.020727418 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.151440422 seconds)
  done (took 8.260600317 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.160702476 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.85114832 seconds)
  done (took 6.941985547 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.156483598 seconds)
  done (took 4.084050838 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.039886031 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.286458582 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.488836959 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.528270264 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.593288175 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.788121175 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.342416088 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.291774416 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.406043329 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.451483242 seconds)
  done (took 26.14831896 seconds)
done (took 139.445734227 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.388058241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.030812252 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.319123713 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.386834962 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.254348339 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.27042017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.234471064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.37702355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.06630924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.051303709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.382706525 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.290345591 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.183152844 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.033650497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.186991313 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.032537761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.248551703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.408212832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.053412707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.300272768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.236866829 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.032947284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.224030301 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.045201591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.253258516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.210193206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.577936348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.029630471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.204429419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.584324688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.217572891 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.453548459 seconds)
  done (took 173.498456656 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.015002726 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.010181997 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.010063555 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.011766136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.319415716 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.01323275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.011586692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.013437926 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.344824202 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.333594462 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.009302414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.30901675 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.014685886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.010798681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.013924104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.009546633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.494284315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.010834147 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.010351732 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.013563024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.011015843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.161263539 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.0114077 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.175757285 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.475399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.011358133 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.01242423 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.011143396 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.012298349 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.010192174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.01056063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.01106541 seconds)
  done (took 212.828002668 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.986856968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.010737095 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.011793947 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.012089821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.015244747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.012396478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.011634454 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.011889708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.667984962 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.651793373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.009640877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.013556151 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.013361691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.01370446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.010899375 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.012032517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.01147376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.020081449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.010943753 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.013973191 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.015697744 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.664206044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.032793665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.670659307 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.013435887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.012261895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.013897862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.013307745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.012638711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.013644697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.014299269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.012221834 seconds)
  done (took 224.94623277 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.2608633 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.01734545 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.019335658 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.02477107 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.018008296 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.016199046 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.019204551 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.269921258 seconds)
  done (took 20.581181344 seconds)
done (took 633.79881293 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.358760593 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.742609086 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.154623374 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.046014409 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.28932601 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.078456931 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.037746898 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.09867393 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.880914117 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.111502599 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.447766073 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.044399319 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.835352859 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.064832569 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.160246492 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.090554926 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.398935607 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.710312189 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.174221794 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.708956827 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.192532187 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.988881867 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.115182901 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.929453491 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.462047991 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.021305065 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.05424465 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.40087983 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.042424481 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.194316068 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.677726431 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.298507577 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.049779592 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.041375801 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.089917712 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.070359738 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.22885301 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.046098074 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.160748807 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.791326255 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.702348462 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.766930815 seconds)
  done (took 106.693316194 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.028182091 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.026870753 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.026406585 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.025894169 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.033297081 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.025974841 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.026504855 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.025024691 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.027364823 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.026245082 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.028109988 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.038343806 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.028080414 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.037086435 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.02709507 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.027345227 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.027649708 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.036070879 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.027137835 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.02753839 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.027843495 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.026933229 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.022147744 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.027840524 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.027618876 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.027662838 seconds)
  done (took 54.68608213 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.02100651 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.209216771 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.263762885 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.038143539 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.023631736 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.02511381 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.051548765 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.028517591 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.026992455 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.025512219 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.12196487 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.030089349 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.037241046 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.26809281 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.039010681 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.022296782 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.024933268 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.024872986 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.217225704 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.03978619 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.05518456 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.032392237 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.053910393 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.035419548 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.025854229 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.026599768 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.028911814 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.458253349 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.035811802 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.126762841 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.079819914 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.052777012 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.376381255 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.278207883 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.076491245 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.030337351 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.02297474 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.128512847 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.029830297 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.026245097 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.052840668 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.034313285 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.267693133 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.542401838 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.036816254 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.025779745 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.455354399 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.137649782 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.067230885 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.036168956 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.277381702 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.0413195 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.02448385 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.027824466 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.061336702 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.033319766 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.026713088 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.288322866 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.037764913 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.054521961 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.029151553 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.026679974 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.226307054 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.034249163 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.214860813 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.033037283 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.033606583 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.02929195 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.267605383 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.043419722 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.555945121 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.037411522 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.027515694 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.128252942 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.214904856 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.478213966 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.038655551 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.226553153 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.389826281 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.060446571 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.038634974 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.444057083 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.065512864 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.035896351 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.026325603 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.027228027 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.028590872 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.076945267 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.055199338 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.470120075 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.549937687 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.30664446 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.065068348 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.041790124 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.029529635 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.290210303 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.036475065 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.027654804 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.261792371 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.566531854 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.043187538 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.03563058 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.535096418 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.042811815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.058809137 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.04141242 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.282556359 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.04336792 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.076716769 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.028799889 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.03577521 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.03304117 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.060180863 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.037090989 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.030116122 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.531578655 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.143447172 seconds)
  done (took 250.591467013 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.029885628 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.024482349 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.028025095 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.02311552 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.027064195 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.028880447 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.027171632 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.027916681 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.02934427 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.026022134 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.026914473 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.029051534 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.024669614 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.030737777 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.057269764 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.030846576 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.518885803 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.028624017 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.029027914 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.025702814 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.591761363 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.034094221 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.029674396 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.02594174 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.031065213 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.031771774 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.029655721 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.055453271 seconds)
  done (took 171.852798715 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.032141918 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.084007163 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.036561048 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.076550335 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.037186953 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.030961424 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.127227994 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.045774214 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.036491675 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.031680586 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.030217723 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.062422321 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.040933896 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.133947794 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.058213328 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.139233157 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.132174914 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.034149163 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.031550118 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.031376505 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.077327958 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.042526823 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.060953876 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.09327305 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.041921377 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.087244418 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.043791271 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.032428492 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.03302028 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.144720576 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.051848021 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.063608535 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.066090876 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.055993748 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.152068462 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.149809254 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.132367459 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.130513591 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.03438457 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.03212526 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.031581995 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.033763906 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.089556841 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.040192186 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.033586977 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.148703409 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.053582648 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.035309403 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.032890785 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.033605293 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.04752347 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.050243679 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.067728854 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.159873397 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.080051827 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.059785679 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.132596707 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.148486009 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.029031318 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.131176292 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.038267426 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.1482522 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.056361419 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.033572384 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.036258442 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.039296358 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.079904301 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.146322734 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.135506324 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.040547228 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.13166064 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.086490445 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.048381845 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.036269903 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.036799463 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.090326179 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.146722637 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.086622632 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.094943218 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.07163612 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.044740036 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.036096003 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.035605426 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.063865008 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.040485614 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.149963699 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.155103493 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.037233164 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.035777632 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.035379731 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.03709405 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.060352307 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.10016835 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.078574019 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.138336054 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.069060789 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.07169727 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.038675434 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.048463006 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.041533915 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.069604209 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.040652413 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.047658599 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.313530274 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.067446059 seconds)
  done (took 219.590180628 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.416955058 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.077414476 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.112826307 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.29639579 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.383171605 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.937146117 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.069424236 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.086448501 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.093962893 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.216050789 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.147481775 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.12644883 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.074742071 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.05961005 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.0850054 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.099519165 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.110403485 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.388093616 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.27924954 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.555387304 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.078059282 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.380724678 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.424723807 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.443408134 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.137408236 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.476413261 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.659347572 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.177739912 seconds)
  done (took 67.352627622 seconds)
done (took 872.701735974 seconds)
SAVING RESULT...
DONE!
