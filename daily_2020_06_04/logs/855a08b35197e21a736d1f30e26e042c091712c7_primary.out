cset: moving following pidspec: 6405
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.318094421 seconds)
loading group "string"... done (took 0.573594432 seconds)
loading group "linalg"... done (took 8.002551658 seconds)
loading group "parallel"... done (took 0.16718988 seconds)
loading group "find"... done (took 1.208660097 seconds)
loading group "tuple"... done (took 1.877458884 seconds)
loading group "dates"... done (took 1.277673843 seconds)
loading group "micro"... done (took 0.197222491 seconds)
loading group "io"... done (took 0.988413961 seconds)
loading group "scalar"... done (took 38.977362865 seconds)
loading group "sparse"... done (took 12.283187306 seconds)
loading group "broadcast"... done (took 0.97336141 seconds)
loading group "union"... done (took 13.793665516 seconds)
loading group "simd"... done (took 4.776073639 seconds)
loading group "random"... done (took 9.066155675 seconds)
loading group "problem"... done (took 1.712966652 seconds)
loading group "array"... done (took 21.329530192 seconds)
loading group "misc"... done (took 1.730660549 seconds)
loading group "sort"... done (took 3.340979339 seconds)
loading group "collection"... done (took 17.670642308 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534070881 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125531006 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137115474 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119819525 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14978453 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 61.811440684 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121702562 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082977726 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.854747215 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15007325 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113468395 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414148786 seconds)
done (took 67.074377037 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173256154 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088212044 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079748843 seconds)
  done (took 1.297061342 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06583012 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12799167 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067214159 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067902883 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067814947 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067401802 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067534128 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066752166 seconds)
  done (took 1.662330343 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072645206 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068855745 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066417391 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068409562 seconds)
  done (took 1.408383198 seconds)
done (took 5.756895296 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.793607982 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209313026 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189558635 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410107963 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135873199 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179163435 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654094704 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323278588 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20443933 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095238939 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112524967 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.360190285 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124316759 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645485705 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07795728 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096689175 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141519851 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435035307 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071897513 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085224333 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092952487 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130907108 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091721517 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077462404 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153589294 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070486204 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14369496 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083922446 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069526642 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220412875 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175637553 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665687451 seconds)
  done (took 10.491084606 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101484217 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099608858 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068983081 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125663131 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097670568 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070311631 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076087365 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068712571 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092196543 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129136686 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091055526 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107990683 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067101833 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07010979 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083618262 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197620936 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08042911 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081785126 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0687839 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08312718 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108115824 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078280147 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079936808 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080684525 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128830375 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170307213 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096686108 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098659304 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067579955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081844894 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115699794 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127301698 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066879906 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066905631 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125295195 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095247074 seconds)
  done (took 4.622300192 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.004719075 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150755724 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090198904 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134996056 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065049604 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109894101 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12210517 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066161667 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082780927 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.363183819 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2379845 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.623891346 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122606712 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117072159 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104312632 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069346374 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07136501 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068118875 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065265699 seconds)
    (19/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069185642 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106994562 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064953076 seconds)
    (22/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065252059 seconds)
    (23/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.249244343 seconds)
    (24/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077754954 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073024658 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065007209 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069646931 seconds)
    (28/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070624021 seconds)
    (29/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097897993 seconds)
    (30/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083985448 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.330844484 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125949704 seconds)
    (33/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088036815 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069290983 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.840616927 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.16583907 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068122753 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105799885 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165017079 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094831847 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14030572 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068498775 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064329577 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.29535095 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06522451 seconds)
    (46/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06524757 seconds)
    (47/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072280934 seconds)
    (48/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067310448 seconds)
    (49/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085071657 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109574646 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119473943 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066488147 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066863049 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168171962 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067784496 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082137847 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.219199233 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153009919 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067797026 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294189508 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092747637 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072242032 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066326499 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18187214 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117038634 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069098219 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06900806 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069689842 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36462755 seconds)
    (70/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06921653 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066563249 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.901797921 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07001004 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078294591 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070506297 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071509813 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079118176 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079797017 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092042834 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067389091 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074501183 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069829141 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06741864 seconds)
    (84/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066778399 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094042023 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392548778 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068103604 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072665656 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065562214 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092414549 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098787976 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103063346 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066646609 seconds)
    (94/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067103286 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070212704 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066411125 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068322464 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118903141 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070382064 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067210677 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112523876 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.173382213 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097653826 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070099505 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101691639 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077165364 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071941247 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466423335 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066035842 seconds)
    (110/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068066669 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067223453 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07271627 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066887874 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078347244 seconds)
  done (took 21.693280939 seconds)
done (took 38.942900023 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241712831 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085909956 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083656979 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083558925 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083445154 seconds)
  done (took 1.801562043 seconds)
done (took 3.006794634 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126765554 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099149453 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065010013 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100585266 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065185342 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100542135 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100316114 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083870406 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100075076 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065192708 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098410498 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065017641 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065041265 seconds)
  done (took 2.356315776 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082227951 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082983749 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069461391 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082164807 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06283341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08162237 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080961536 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087896843 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081200769 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072567567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062781351 seconds)
  done (took 2.042312253 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08176253 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083576784 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069315568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081673902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062634841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081302975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081937201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08840259 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081487311 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073562137 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06343988 seconds)
  done (took 2.039089374 seconds)
done (took 7.630710827 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076100851 seconds)
  done (took 1.257824714 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.528093067 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.612317959 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078884546 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100099781 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192135593 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108491449 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236878055 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083144965 seconds)
  done (took 8.294991953 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106929504 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070620285 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070102823 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06995169 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070904525 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069331001 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069731839 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069694779 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069332182 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070552175 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071177035 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070347294 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07047326 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069193759 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069466956 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069572287 seconds)
  done (took 2.426258266 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097538019 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095470824 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073499542 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075204793 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072794546 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072248505 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074892474 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074439666 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071613018 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072987538 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075574937 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073966157 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073337899 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064446517 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074301645 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076445028 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07180961 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074928659 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07522218 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075666269 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076136541 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06472114 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073681678 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07457085 seconds)
  done (took 3.098605564 seconds)
done (took 16.269609249 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115993746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077785133 seconds)
  done (took 1.38318153 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078590997 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079344565 seconds)
  done (took 1.355214826 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077213576 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062578099 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083916361 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074061209 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063304507 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062882516 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082836416 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063818173 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06382962 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063983347 seconds)
  done (took 1.897032851 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065440889 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072677821 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069378236 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079317784 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070763326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064890105 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068902431 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065844512 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07364006 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063654683 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068438977 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083505852 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067980747 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085108715 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068697925 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068252753 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070863753 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067122496 seconds)
  done (took 2.475636299 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063499903 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064190554 seconds)
  done (took 1.332701218 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066568716 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063346048 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06642346 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066249645 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063606054 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063009115 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063517194 seconds)
  done (took 1.652798109 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401769403 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123187781 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330468348 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070242428 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079970115 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256953096 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065336942 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069810062 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069384745 seconds)
  done (took 2.710558144 seconds)
done (took 14.01289207 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080812021 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086537992 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097464975 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409017148 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093047545 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068376411 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113905869 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179495151 seconds)
done (took 2.344544077 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216552267 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.071644105 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.486663313 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207670288 seconds)
  done (took 2.973862271 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34601542 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081118172 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077035767 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.181604905 seconds)
  done (took 1.904266835 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067031048 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070121368 seconds)
  done (took 1.350461202 seconds)
done (took 7.66033672 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065268295 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090106894 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064799711 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065457401 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064721291 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06514075 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064921517 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065172768 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06512114 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064796111 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064920544 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064785263 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064967348 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064611939 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065286955 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064928574 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065082713 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065243471 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065062261 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065248844 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065897918 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065025622 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065066011 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065230925 seconds)
  done (took 2.835137856 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081458836 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067592508 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068658154 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068384163 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06919403 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068578198 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068826511 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067836891 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068837804 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067395675 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069204085 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069240275 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067039628 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069288851 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066753544 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069318832 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069277275 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067153048 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066887713 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069548326 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069231106 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067452764 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069215797 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068547704 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069378487 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068995635 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067103029 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067401357 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069127253 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069039914 seconds)
  done (took 3.288940342 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066048582 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061673059 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06189612 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070185947 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061367404 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06222914 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061017502 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061629037 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062082783 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061372889 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062832236 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061378185 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061773468 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062291807 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062029471 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065802603 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078986248 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061626773 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062109044 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062217004 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065994715 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061790211 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062198521 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06126212 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064459342 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061508704 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06211754 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061505773 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062145478 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061348139 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065162746 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065892953 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061861123 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070027012 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065735647 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061437476 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065795086 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061206346 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062410367 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061334031 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061663541 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061635517 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061629686 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070368226 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061801326 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062752536 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061306234 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062692626 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062069936 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063914933 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061220735 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061557157 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063426736 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062626542 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066535078 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061485112 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062083542 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061030116 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062583279 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061512766 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061084428 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061150247 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064480845 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062418532 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078805268 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070190585 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061495814 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062984908 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062303202 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064693134 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06286435 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077305763 seconds)
  done (took 5.804156249 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085792665 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087489174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066898957 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066983723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06209093 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061847492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070379835 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062264612 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067127076 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081400412 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062239322 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066656565 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066768371 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066537567 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062375517 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066860186 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070685359 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062267347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062096425 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066061002 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062758213 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070457044 seconds)
  done (took 2.737502623 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146610065 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067772154 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105532451 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072780766 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07094786 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072893156 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068000899 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068535109 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068583364 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06915058 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068927276 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068172748 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070465013 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068521984 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068975687 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068576205 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06823541 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068585839 seconds)
  done (took 2.592937992 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078153618 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068283345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087109781 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067089195 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067597436 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06702052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071211583 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072304988 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067056367 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067789153 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072321003 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067859825 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067149404 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067601467 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067592458 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067349016 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067296965 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068345346 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072264414 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071729238 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081328898 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07353772 seconds)
  done (took 2.790641599 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079055993 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066877147 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08232344 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068965157 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062429376 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062103874 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068287027 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066790382 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06791651 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066108812 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067118615 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062661216 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069447235 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067061151 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069533061 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067133345 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066371263 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066809779 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066556613 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062261757 seconds)
  done (took 2.589131713 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083646893 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065543094 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065630851 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07107588 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065323351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064847635 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071702756 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065134415 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065811424 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085841345 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064998423 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065460557 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071489736 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068973799 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065345172 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071650434 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073689489 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071554196 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065015446 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066073536 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085972289 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065666661 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071548705 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06529447 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065012259 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065315369 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065144047 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068886222 seconds)
  done (took 3.177398665 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065497072 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064925993 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065079735 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064980588 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064794099 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065221738 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065419592 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064993193 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064943269 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06499287 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064565124 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064568065 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064851317 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064620935 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06508737 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064628887 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064608771 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065107944 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065176408 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065089844 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065315881 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064788864 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064758721 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064893731 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064998779 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064767727 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064852731 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065323737 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064912201 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064667682 seconds)
  done (took 3.18816342 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075684527 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073176261 seconds)
  done (took 1.388713088 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063081055 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0786486 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061264953 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073010521 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070579355 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065074421 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07135214 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070516579 seconds)
  done (took 1.789942533 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08518431 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075360557 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064187489 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075810666 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074817208 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084924701 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125869803 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064631401 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074094103 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064831898 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081934277 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065898066 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074596816 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069015879 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074159602 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078185974 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061735076 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068694649 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065406332 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062267735 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064324897 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077343641 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073565474 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062437108 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069015677 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090992399 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080296553 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063393478 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070448333 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075890044 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07394721 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061078631 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063579326 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064385501 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062054167 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074548923 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081932501 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071093941 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076602923 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064560988 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071919594 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06164829 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072876428 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074179015 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07962011 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063690267 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063808488 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061990768 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064829716 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070134481 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061860662 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068182986 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06174479 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075977087 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07133526 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078846223 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062853417 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06989386 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070492356 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070859777 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075164823 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069803547 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073110473 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063152139 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079955666 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073017672 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074939663 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061338568 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060461051 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061666232 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077903797 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091539946 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073091816 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063820441 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064067341 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061504942 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070834155 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064065724 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072375987 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075031177 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063010794 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068699516 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075546199 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068003857 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069957894 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069866103 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061941427 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066862308 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065283337 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083708434 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063234901 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061843372 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065076258 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078941775 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073143847 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063214763 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065016173 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075485606 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060832102 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063818125 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064687317 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069625476 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076893948 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068139305 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068179496 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076840527 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072782378 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069282783 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070584554 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060846253 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064288233 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065656309 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075073584 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061229782 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070800483 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067869761 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063989127 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075460709 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062109949 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063583067 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076964354 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075347109 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062750764 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061496597 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070761873 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06392199 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06600976 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077054641 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062098942 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061777064 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061564908 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071071035 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062935064 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070924112 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066917167 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070518983 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.187007193 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063195149 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069901282 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076735635 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067568686 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07033706 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073810327 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069614777 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063258194 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076575326 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070867314 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066531591 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073576679 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068450195 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061556531 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065603444 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071020263 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062873995 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071747146 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066172248 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070744367 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064595301 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062781217 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069451367 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064241388 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066273278 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068680863 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063196119 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078507475 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070596945 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062073594 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061332489 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071045222 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06561561 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063529412 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066332974 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070573769 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063921324 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062240291 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063089281 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069956004 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071542694 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066787749 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064062219 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073136607 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080593493 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063908297 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071355444 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063394418 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064849476 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064250674 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077845006 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073884783 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067686076 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071174915 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061421799 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073431896 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075788386 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067011965 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062000926 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066230422 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06776984 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07564299 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067421704 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064344479 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062464854 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069485191 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06643616 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070754839 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063415499 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066218399 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068951902 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06204797 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069631617 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064248646 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078128483 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071082821 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062253625 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066288558 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062632324 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074742175 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061999803 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065207726 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066893717 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064616321 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062849862 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070288724 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061282538 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076664575 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076354316 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06905341 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066085485 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063317397 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076101448 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069176332 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071890769 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070908954 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07351251 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078903039 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066143893 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070450568 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07875165 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063261408 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060996473 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073223357 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065054491 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062462541 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06291692 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063353323 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071140478 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070240016 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073720168 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060906945 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069888117 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061839698 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065995631 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061654654 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071905018 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070166659 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067417376 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075824717 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063824757 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063810994 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070731608 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063431548 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063852359 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063994151 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070038962 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063822316 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069294108 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065723498 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069411599 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06600814 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061581488 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069370603 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063760504 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067977573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071948238 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0624256 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069020821 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069801377 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063456245 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.199049997 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067988791 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066707568 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071247387 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069759417 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068756123 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070324588 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06199316 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075882603 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063391497 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076492892 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069443183 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061344721 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069752125 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070467371 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068885819 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064069332 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064910865 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069362172 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063530736 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070509732 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076388736 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065559188 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079017721 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075122616 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069658947 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071013557 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069777251 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069779745 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065987457 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068295146 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064780012 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069489545 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063788907 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072275385 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070937269 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068760281 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069770316 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064253615 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069090984 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064757393 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061394223 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066739528 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067052979 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063697374 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076100124 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064321601 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066762668 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062571595 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064305545 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062847614 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061024692 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070417198 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07086564 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064317127 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074570689 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066470989 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069886081 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07920215 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061178595 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062397551 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062236279 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065145243 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076423224 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063954745 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077091177 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068682448 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066323208 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061176331 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064385762 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062660547 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061316957 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062213839 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072022916 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065802311 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062843502 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063768194 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070502315 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064446455 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076778915 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063189906 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068010197 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063688412 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061661729 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067002116 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065989611 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070306007 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064103699 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065158792 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061789532 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063518215 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067915086 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069622851 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063162938 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069369213 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076019153 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063718335 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071087254 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066213177 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061711636 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07060981 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06332676 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063238608 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066162175 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071589049 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071215649 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06433534 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077856784 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063660334 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072052544 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063678335 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062140003 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063197689 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064057413 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063674132 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066360167 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064936602 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076583525 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061963632 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069312518 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068205804 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067430271 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073621707 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064224067 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06969856 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068352564 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064949183 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069807176 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076647071 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067158685 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070854883 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064126421 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069380713 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073097352 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066084929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075013128 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068489412 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063387797 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068892679 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064551979 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062724184 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063203183 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062242999 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073347675 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.195674924 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066764962 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067267416 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06279817 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068680279 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066373745 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076819908 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070841186 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071489284 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061790577 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.0618975 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064873839 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065768636 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069827185 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070642898 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073538669 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070918155 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067593791 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062814023 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07867345 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075043202 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072292038 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065133538 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071972603 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064566884 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070778855 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068263294 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068778209 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064718467 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071680635 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07025332 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06665755 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073979854 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071789809 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065505232 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069354602 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069692618 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068671343 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062038291 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064245283 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070312558 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07268116 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070689745 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063776474 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079221456 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064710124 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069231795 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066124783 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063452325 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072774528 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061891293 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070284612 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065221135 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064590429 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062113866 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0667257 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065906206 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070508719 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066282275 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062212924 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079355642 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078359921 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070293438 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063616206 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062601728 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061925362 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062130138 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066543284 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064737307 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069582753 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078534941 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066131169 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066387299 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062270585 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063597831 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071231309 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071686462 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061535476 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062358515 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066595223 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070035772 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075345192 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062801868 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063802519 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071470111 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070168034 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062086667 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06627369 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061508705 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071845177 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080207788 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064085555 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07007748 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073737644 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076670865 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064271035 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061875133 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063919726 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069692056 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069111858 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064604262 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064788745 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083106575 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071100019 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066367189 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062583493 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070253229 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066968759 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077508337 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064677553 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064543084 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072627108 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072899254 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070737137 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074017092 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074833385 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070038035 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069724725 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062697232 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068419888 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062310527 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065954558 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064359058 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064223623 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069879543 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070322842 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066110349 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078674467 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077267989 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065947504 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06088645 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06599131 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066784732 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061939605 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064735298 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062308488 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062255742 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062083294 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062644843 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069318719 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072557257 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067988061 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064092682 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063150396 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.191642288 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074326975 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071286532 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07048741 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061595618 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064780012 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064203809 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071809575 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066654326 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066147471 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070495301 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06990885 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07006122 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06207037 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076032993 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064171175 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070520878 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066490239 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063940733 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064291378 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071577949 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068105339 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065066598 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070952619 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071226556 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065906421 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062164377 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061636393 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073703688 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062067713 seconds)
  done (took 42.456092244 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100306389 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063417476 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062251895 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062383423 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072155559 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064209519 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062723834 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063536306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063719016 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065343593 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062526245 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062678004 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070048515 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077069777 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072371457 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0665217 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062344929 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06322997 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062356831 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063885846 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06989279 seconds)
  done (took 2.719141988 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069605513 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077356765 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074356472 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079743091 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071028168 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067821238 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074731447 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067270282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075520386 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072748494 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07557251 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067518469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072575585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072592358 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072805593 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067840577 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075715874 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071868923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067977344 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075080694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067675172 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074880753 seconds)
  done (took 2.889657363 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064083137 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.079253332 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069558669 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061478537 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062528878 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061345554 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065576906 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061151931 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065241471 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06545156 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065659892 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065749435 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069572811 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06160995 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066625543 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061491312 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106755688 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065183979 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063183074 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063863113 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061475894 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07013946 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061752381 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061766468 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06511531 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065671056 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06390419 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061567934 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062806898 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065318754 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063170284 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061674388 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069942946 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06902496 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065203831 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065429643 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063206779 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063081166 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06154578 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061962049 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069391831 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061837553 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06640562 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06982198 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061870439 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061829855 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069801307 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063150339 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061492959 seconds)
  done (took 4.514539 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074028753 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110619931 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068076764 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09103987 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.075986918 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068864372 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067770269 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092229211 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063399476 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063977602 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077411629 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077688754 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065934267 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067126849 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069844962 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065397194 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066023922 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064670543 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068555063 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064906118 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068940342 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069715925 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075965746 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076852706 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066216528 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064359075 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065046375 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066575563 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076376168 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069058292 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067137064 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06741938 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076679737 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069945234 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064689915 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064866708 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077600643 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065391721 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064917516 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064038112 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065011179 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066599498 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070034731 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077644131 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065340668 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07012165 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065084436 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063056743 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076808783 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065158215 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069325199 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077501421 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066239544 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065767967 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066818251 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07626891 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065745881 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063879465 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065371642 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076135298 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06320518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066028518 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077147479 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064674194 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068984459 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077338724 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069790748 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066521373 seconds)
  done (took 6.229039508 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072493406 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094680043 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079020171 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079608172 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073083614 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073035618 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073421943 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073900187 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073377032 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077127853 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073416192 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114217484 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06910853 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074894705 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073162819 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073125373 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073077721 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072980043 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073188303 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072767206 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073647177 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079223366 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073266009 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07905048 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0763622 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068935271 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072839764 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073136612 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079417874 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072986481 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076226805 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073152239 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073143176 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079161942 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075834859 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072948633 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062908499 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07269486 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073488039 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073024683 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068841761 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079266295 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07290123 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068764616 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073379994 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072655185 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079290813 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075941299 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074822718 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076745122 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07298282 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079178078 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072731514 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073082589 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079654616 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08205729 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079133595 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079025405 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073013968 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078955463 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078995282 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081845515 seconds)
  done (took 6.034676197 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077620873 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070273464 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081128642 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061716609 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061628188 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071609358 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062133635 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062212196 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070601788 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072865713 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072040054 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07202547 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07425808 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072215799 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071880433 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074337038 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072178172 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071678454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069949385 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071526211 seconds)
  done (took 2.75593704 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076180401 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080458513 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067343608 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071643172 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067482831 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071687871 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066823088 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067308518 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067854893 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067374721 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073239517 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07323453 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068081555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072216789 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073123073 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072183392 seconds)
  done (took 2.465698056 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083401068 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070006052 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07725498 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063280625 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067067043 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062385823 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063936023 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062038807 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062377414 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075980615 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063094517 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074513032 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063332468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06247073 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063222261 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068987627 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062692339 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063673213 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06301128 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076168245 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07001752 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064809922 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067342118 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063335965 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068759397 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071162748 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064827312 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067363525 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06317941 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063498836 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069300156 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070049675 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063137726 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063790166 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062598074 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06303519 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063412752 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0811723 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06907222 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063132908 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061911462 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068247694 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063457513 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064477289 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062186858 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063527781 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062883214 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068901891 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064101764 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068592152 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063270942 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065485219 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063788827 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071060822 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065913079 seconds)
  done (took 4.989646168 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078092632 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067687643 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061435852 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061637502 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067291421 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067602494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067086333 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067788564 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068333973 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061803843 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068681412 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066717087 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068184887 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067866924 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068184471 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067730881 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061956562 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067997901 seconds)
  done (took 2.549124794 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072317602 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066734461 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070958321 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067207391 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066697576 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06662203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06213317 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062022868 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062164979 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066466045 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066678665 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066353913 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061941932 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066545945 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06695499 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066754819 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067066994 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062131803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06694709 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062466858 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066258437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062394879 seconds)
  done (took 2.780068035 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09515899 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083700616 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140052594 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07920613 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086831868 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072737175 seconds)
  done (took 1.89294545 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092524432 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097376112 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066819637 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067103987 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072793397 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069816774 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070258127 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070463832 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074582921 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07508885 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070333436 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07506619 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075050761 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077130503 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072862776 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072748614 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072856665 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070337901 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067596289 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07997784 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070607325 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074879698 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070502659 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071199561 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07075495 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076897329 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075052352 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075226465 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070327139 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074999359 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072606696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070275341 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075317379 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075188526 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067232888 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074825104 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071088277 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079866598 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072881081 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076648676 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06732683 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072714638 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075228283 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074268259 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0747887 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070498359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074245111 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070925549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070435257 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081552294 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072756688 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076576643 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072818549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075293218 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075177772 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081523565 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075523061 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076746041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073146157 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075609196 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076712991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072818057 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07662353 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076085208 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073030957 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077226457 seconds)
  done (took 6.232944214 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10355513 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06788589 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070585786 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075158634 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076580445 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070690319 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070756698 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070996926 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070614929 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067732729 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105295951 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070998711 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077174666 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076992799 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071282954 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071065532 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071015128 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076895332 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06791283 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082262848 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070778674 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077235041 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0765722 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076791458 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075330643 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07345149 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070798775 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070521288 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070500338 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070449322 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074877082 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070970033 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07691266 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067942851 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076676198 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070857877 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070529008 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074771648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070594365 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073244412 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076906381 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079988266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071120065 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070614219 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075592558 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070578969 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070743395 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067675342 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070487034 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067839918 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07558019 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075638813 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075411947 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076916832 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070641157 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070874241 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070658945 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072575594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071275857 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07318557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076678929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070764843 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081256978 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07039243 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070613524 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076689582 seconds)
  done (took 6.230348331 seconds)
done (took 128.138305818 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210042456 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184231694 seconds)
  done (took 1.717480475 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074570763 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103732619 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082479295 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133401214 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071570165 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105282789 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104904068 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083809004 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071244648 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07136509 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071323945 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073895869 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136447569 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071824065 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071287979 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074422028 seconds)
  done (took 2.742703452 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104798488 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16587509 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109075512 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069406384 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10432754 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07734563 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069092174 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082237111 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076000938 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071693658 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077399484 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075347462 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070830469 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077843277 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075663058 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077622043 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071087864 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077322424 seconds)
  done (took 2.876161946 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102820678 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095264241 seconds)
  done (took 1.544543093 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.174311922 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13345374 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202363552 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.339014754 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150383822 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.42398715 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138244742 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.137873037 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112259406 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134542785 seconds)
  done (took 3.289093948 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103487288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.190091817 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293101839 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120286781 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076388024 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111187196 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121987264 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081591954 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079996369 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079472021 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079231607 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078599982 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100755575 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077046817 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075572983 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078318136 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103480415 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075040131 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075790293 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07601215 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103855937 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070841606 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076366174 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074563492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07786632 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077926695 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07143593 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070153097 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076021626 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075672317 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078891298 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107668751 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077197242 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103300083 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074080189 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104029506 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078159165 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074081084 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076072974 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074432637 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077539047 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07709845 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078180896 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078083505 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070714688 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078259709 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071329759 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069719639 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080205425 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071144982 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080647634 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079461126 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103176742 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070987339 seconds)
  done (took 6.158400258 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108019154 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106760229 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071349652 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11292166 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105262879 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070703218 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105673442 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099679402 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107736008 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071150234 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069500833 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070956001 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079305643 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081127737 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114951976 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108061567 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072991272 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070815005 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108442875 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107666384 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069772461 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101934415 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098397127 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106816346 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068968829 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071199161 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069601104 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071411621 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076111815 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077667248 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070298718 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079224021 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083604832 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07718859 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068674741 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069456394 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069569881 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078125776 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078459919 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078176021 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076265028 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06859889 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069304522 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070385443 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070083639 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068963735 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077498546 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07815877 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07712262 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069584637 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071026225 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069455521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069914065 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077869314 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075707535 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079302687 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077775772 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069357282 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069029914 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071898514 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079551379 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078610127 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077855365 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069952469 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078579964 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069931713 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079295577 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082101404 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072149557 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07054986 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069328555 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069089354 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069859425 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076226599 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076175359 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070616328 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069115137 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068867334 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078465054 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076409633 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069308807 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075590432 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06778672 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068842022 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070119405 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069981169 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075810825 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077888145 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070194915 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068758315 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069387372 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068922782 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06800153 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075625773 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077605424 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077508109 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076950964 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070208319 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077762416 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07669463 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070409265 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077871649 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068866794 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070381215 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069698696 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076731317 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075624075 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07784002 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06962373 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068985101 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076168863 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079139401 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069050427 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075980057 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078312833 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076223498 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068239434 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079204949 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068795193 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077696945 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068680816 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210341369 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070296366 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078358988 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070513414 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068588838 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069635856 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077355456 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070957004 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069626481 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070402835 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070084865 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077394738 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080419843 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071561259 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077021103 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076779206 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070709929 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078015577 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069186302 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078566316 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070100318 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070578044 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068149613 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080575808 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07006248 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069588563 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069865794 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078293428 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069702585 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078385165 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07656465 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068586832 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080823608 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079090306 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076566309 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07860654 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071027633 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069278674 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069733495 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069613204 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07619309 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077752401 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07069152 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069397123 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07639812 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078870003 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068825078 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077607787 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077077558 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077959191 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070206321 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07048393 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080020089 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079614803 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077713253 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077482609 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077025994 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069916962 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076728648 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0776028 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069769512 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083166187 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069447221 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081070046 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07737935 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075736735 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077906615 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078672207 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078783093 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079416397 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081505652 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068922645 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06949445 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077426538 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069320774 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070141889 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076621681 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070656307 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070498748 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081505577 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069796003 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079122449 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06883973 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077821941 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068444125 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07067644 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082039832 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069772651 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070509143 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077315148 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069813583 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076412753 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078883919 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077093865 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071667336 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070732986 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077855004 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077755709 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069000145 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068757458 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070681123 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076476308 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075966597 seconds)
  done (took 18.50364222 seconds)
done (took 38.190249481 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20879852 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152495501 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183874919 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114183174 seconds)
  done (took 2.107346052 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107167268 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098009425 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087443553 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065569074 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093302743 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065589656 seconds)
  done (took 1.898732898 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.334526679 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210044008 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191003927 seconds)
  done (took 2.110512079 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.220490396 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205746815 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.45633956 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281053139 seconds)
  done (took 2.6347747 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142774962 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081601327 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06449381 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.077739818 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122579364 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.172982311 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092413027 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.1266371 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071999449 seconds)
  done (took 2.384017753 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145224683 seconds)
done (took 12.679823319 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.102523701 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076317932 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07571641 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072703135 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068692231 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079464795 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.2363023 seconds)
    (8/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072102136 seconds)
    (9/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.193799189 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.234423735 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.173164604 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076438317 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075546879 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07506069 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08852348 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.23975842 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074712244 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105787446 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079419703 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06659921 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104460516 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076709115 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.298890821 seconds)
    (24/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.190579053 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084347865 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.239239272 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.214103547 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070553848 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.125280618 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191870612 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18001246 seconds)
    (32/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079311271 seconds)
    (33/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074094354 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074075894 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171299699 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.154109001 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064926866 seconds)
    (38/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.21628372 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180616104 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.215377738 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072449942 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068512121 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06677885 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 0.156550393 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091639842 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072764397 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 0.066827253 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08296875 seconds)
    (49/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.17176138 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087279131 seconds)
    (51/309) benchmarking ("sort", BigInt, false)...
    done (took 0.196312089 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070131213 seconds)
    (53/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065144871 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169690985 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074979006 seconds)
    (56/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.174979938 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.17886642 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065290467 seconds)
    (59/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173167797 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091836382 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.176844823 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065401357 seconds)
    (63/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072437172 seconds)
    (64/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.177892312 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124859473 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076547806 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066261028 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.205371913 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103143839 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.192152205 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078926968 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118856383 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120075658 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179761028 seconds)
    (75/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.09178014 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066694853 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.197199183 seconds)
    (78/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073381827 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121443659 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087855226 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070106966 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.124456131 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089719879 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11401926 seconds)
    (85/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07331057 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068240757 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16151468 seconds)
    (88/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.204005555 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066185358 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.230408408 seconds)
    (91/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.126234977 seconds)
    (92/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180839178 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.205308073 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075075095 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07297708 seconds)
    (96/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087195936 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094385789 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119072242 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067172169 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.202355537 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08893041 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08765584 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 0.131382689 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066818722 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090394261 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.135772636 seconds)
    (107/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.127473687 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07201659 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099744495 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0740502 seconds)
    (111/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074992715 seconds)
    (112/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068163625 seconds)
    (113/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066629368 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067678749 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067966252 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113771748 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.09882217 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081439223 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072821414 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216407056 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073033872 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177992343 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072724439 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167115351 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093518752 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066372381 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067035883 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075966472 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066190142 seconds)
    (130/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07453143 seconds)
    (131/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079934204 seconds)
    (132/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.131656381 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066641287 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133526892 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074157638 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171159246 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.178309663 seconds)
    (138/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074989496 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.10204155 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083394247 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073222908 seconds)
    (142/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069265467 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074324246 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088248167 seconds)
    (145/309) benchmarking ("sort", Int8, false)...
    done (took 0.157482513 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.194890232 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12382591 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118644271 seconds)
    (149/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075678243 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126008274 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065275749 seconds)
    (152/309) benchmarking ("sort", Float32, false)...
    done (took 0.131692655 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078529654 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068045234 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065557882 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064816795 seconds)
    (157/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.124284465 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074171234 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08553356 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.218873314 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087200098 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076520671 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.169617676 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065711123 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065675352 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085403081 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078147963 seconds)
    (168/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.167257534 seconds)
    (169/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075747887 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065554662 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087901538 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14010773 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075088484 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.128587885 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128913785 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141716863 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136938417 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065970075 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.12297295 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065593163 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065843823 seconds)
    (182/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065865392 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066015142 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068343812 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064989308 seconds)
    (186/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078415339 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072434743 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11901435 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111253988 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074547027 seconds)
    (191/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066427616 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065674268 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074163943 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066041853 seconds)
    (195/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.172691127 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064744668 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065335628 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065073186 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06946055 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.07658915 seconds)
    (201/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065168314 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131748454 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064422954 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065284273 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072376557 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064191076 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.322904671 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069917697 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068687457 seconds)
    (210/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.127826777 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068211622 seconds)
    (212/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093228539 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.079303398 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073444777 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067820564 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066346349 seconds)
    (217/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069536993 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094027668 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076283473 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074693035 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066530585 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072711111 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075093861 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136345797 seconds)
    (225/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065603673 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065708839 seconds)
    (227/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0665522 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066185518 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066860432 seconds)
    (230/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091078031 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07388485 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.065929204 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066024328 seconds)
    (234/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074769778 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066100846 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.079145336 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172589673 seconds)
    (238/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078907525 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066452837 seconds)
    (240/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077538611 seconds)
    (241/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066434402 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08679895 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06850172 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088729816 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.068818342 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080994383 seconds)
    (247/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068455483 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066680095 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071761113 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066106816 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074446632 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.173424902 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136686569 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065234164 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074530979 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078741866 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066186954 seconds)
    (258/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129316291 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065975568 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066511234 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068267295 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066803263 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065727535 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072547443 seconds)
    (265/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066928033 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090727244 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066879107 seconds)
    (268/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078876057 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132449448 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.087430113 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074876049 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087734958 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066274984 seconds)
    (274/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092434106 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072636693 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171245406 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090614701 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066835775 seconds)
    (279/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.125730219 seconds)
    (280/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065983693 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069248277 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065785541 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066382955 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078230617 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066201985 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065328039 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066440618 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066712651 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077469852 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07441568 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074080524 seconds)
    (292/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070278816 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070683648 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142806175 seconds)
    (295/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077248164 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066519493 seconds)
    (297/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066048855 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072698639 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06681674 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172454285 seconds)
    (301/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069356651 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066176825 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066564808 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066792739 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065930452 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065093098 seconds)
    (307/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.078275151 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111716247 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06624684 seconds)
  done (took 32.777536965 seconds)
done (took 34.16595546 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085154105 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097415164 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073418666 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091874492 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080598565 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094601008 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073862789 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078632863 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080824213 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079757523 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079118213 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071839408 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075228732 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075164405 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073385612 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096585562 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079721839 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074060962 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074051923 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065541457 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07416957 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066190975 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066077141 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072354069 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077191394 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073389079 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075561984 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074997446 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066777115 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066030828 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071387639 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075208307 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066108601 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078605461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075282658 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074356404 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075644253 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078367878 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065582904 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066689381 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075866505 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066469912 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074233894 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072423816 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071122388 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072768315 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074064833 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078285017 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096421072 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070302942 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076147436 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077083438 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077465112 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071404335 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071323733 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074023751 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072192565 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096465193 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074606782 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070481095 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075442856 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075374977 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072189195 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073900556 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074000656 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076637177 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077977413 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072122966 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075762185 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072923892 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065634822 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073748696 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070559848 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065834517 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076620185 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078361503 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065136995 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069995991 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073683351 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074121374 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068544889 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070952171 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065767028 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07058204 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070202634 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071475265 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070627104 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073371416 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065671744 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074114901 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073252204 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073724792 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065503016 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07840449 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06585071 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072421803 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066143153 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065797626 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065169634 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070842543 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065785672 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070360904 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074690876 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065180829 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070774939 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078961811 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06584651 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073207617 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.0650726 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065306177 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076571086 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075596439 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066113159 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069826666 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064981147 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070669686 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065164266 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06521908 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065082339 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06549376 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069854326 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065909644 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069853145 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070780797 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078021955 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065137193 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070023155 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069874069 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06563479 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071916343 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065803336 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065389524 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065229561 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078990494 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069424816 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065734304 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070870241 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069578703 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073241273 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064988708 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074008333 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071397655 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069678828 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071227719 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064447482 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075923384 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069574606 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0694986 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064489474 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065321522 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064034689 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064866882 seconds)
done (took 12.504670192 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068501479 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.115916263 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092218735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092029561 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081852604 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066690448 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073862977 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091213883 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067878042 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095537235 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08818229 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087831014 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108847064 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06571393 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06622033 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067884567 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067865834 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078083993 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093218453 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088267125 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.104893114 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066401295 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085503251 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086760243 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083202338 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090340603 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067982625 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068028166 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06939052 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086847901 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091842077 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069720062 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067522945 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.0896763 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084369399 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079431059 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067244739 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075105437 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067564472 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066300576 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068060326 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08684538 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074268185 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074867751 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067592936 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074449346 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067678025 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08185709 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087386469 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074887558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081904744 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090689372 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070294316 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082467897 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065802518 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082370854 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075853255 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067163913 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067251467 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072091209 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066872466 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069121539 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078079893 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075374708 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071100241 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081400978 seconds)
  done (took 6.618141621 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084232426 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093822134 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082835864 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082992969 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065964793 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067617927 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066617897 seconds)
  done (took 2.019514454 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069466926 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086983777 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089591161 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089666752 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082826813 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091258421 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075270135 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067156581 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095198329 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066293348 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086486548 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096905132 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070314037 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07835553 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09141107 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067013587 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090647977 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066851387 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067823401 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090800133 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071283317 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093473341 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078723372 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06709953 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079977969 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067216375 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099243758 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07440611 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068626061 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068278458 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068205355 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093229068 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079164763 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080720465 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068308266 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082524894 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08043525 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070406953 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077710729 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076280556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080399726 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068465394 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066117529 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068924131 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069572333 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078366665 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06578718 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068449692 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068171343 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086157086 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065962025 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079118235 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070501393 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072485065 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072358629 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0718084 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075130951 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068744704 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086209011 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068455136 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084007587 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083241381 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080333814 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083426208 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067311725 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079603609 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080180583 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067881891 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068989584 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068499726 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083410151 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070190276 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068857402 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078473515 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066741438 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090437819 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090509985 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066796999 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080161949 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067600915 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068174995 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078586343 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090538731 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072384759 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068354433 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071570345 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069057011 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070024179 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065981489 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070637404 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068008972 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072156485 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068020967 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070698433 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069307911 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083296872 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066602764 seconds)
  done (took 8.828409545 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068862194 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068275243 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068827542 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067855292 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067954742 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068105538 seconds)
  done (took 1.911865936 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099486316 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067815021 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081205471 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068128521 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10355044 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083300094 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083501307 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0852209 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081338319 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07949181 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083208855 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086073692 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087261375 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069987657 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082891576 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069049674 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082954683 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072015318 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079233994 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070321382 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080710754 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069973843 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070715018 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087359837 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071289937 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069556136 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077224049 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079504241 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078843058 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092394844 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070100014 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071691338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076006963 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085445245 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08371457 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07569669 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068096429 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074448748 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.0706966 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071268461 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085853734 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07032522 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070450267 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07433621 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.087829496 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075869985 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073945098 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075915412 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082631962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074165536 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073995481 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068565099 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071488874 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074066442 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075878551 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085112032 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073990001 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083079735 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069682406 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075758276 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067554637 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071046844 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086770903 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071197207 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.074745668 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073737738 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075732714 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070035948 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070269125 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068069945 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074061519 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067628601 seconds)
  done (took 7.00801451 seconds)
done (took 27.879088304 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516616934 seconds)
  done (took 1.974450925 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.6148718 seconds)
  done (took 2.101521017 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.517799585 seconds)
  done (took 8.002854343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.409418248 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.636476343 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.742153161 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132809131 seconds)
  done (took 3.440718773 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.703792961 seconds)
  done (took 2.197625928 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233378572 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22394044 seconds)
  done (took 1.956932058 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346533084 seconds)
  done (took 1.829414707 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.04568361 seconds)
  done (took 2.530226756 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.249632285 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.169528731 seconds)
  done (took 1.908485482 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.440511659 seconds)
  done (took 1.927532104 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.211574251 seconds)
  done (took 5.700990821 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21873511 seconds)
  done (took 1.739670134 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232875499 seconds)
  done (took 1.721137417 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.714143134 seconds)
  done (took 3.204707199 seconds)
done (took 41.735042186 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08375534 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085324966 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085147556 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081627927 seconds)
  done (took 1.808875734 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075412191 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070571104 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074618642 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07072684 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074742721 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070702864 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072476801 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073501533 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070764987 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071020865 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071080799 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070806786 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07368371 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073344748 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06963244 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073747226 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075063916 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071252629 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073906099 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071126327 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069038719 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073857031 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073638856 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070502365 seconds)
  done (took 3.229284171 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079008164 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073182969 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075897151 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072841853 seconds)
  done (took 1.800734254 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076779036 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088180901 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086268731 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077140227 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088793309 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083685274 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067633875 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06747554 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068849437 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076783308 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066605599 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092646907 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086068646 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076772955 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079073936 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063883201 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065655792 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085030547 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077538385 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077592338 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068634407 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077791569 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066668438 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086897429 seconds)
  done (took 3.347828147 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086186698 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066336622 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085908781 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091891667 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093232264 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066458381 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085105507 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094125812 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141368954 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06700748 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072526624 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066827296 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104607475 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067055458 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086312588 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109778318 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113059782 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07031496 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099401154 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069681154 seconds)
  done (took 3.241923516 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083372753 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070294196 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071213416 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066248164 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076773385 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073781983 seconds)
  done (took 1.948934739 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069108394 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068602321 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068658515 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067509166 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072677517 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068313926 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066506147 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068343357 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068831203 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068069025 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06817534 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067256559 seconds)
  done (took 2.325535676 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.194789747 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071660396 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072738958 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066956826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073084917 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067849468 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083092221 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070076057 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094188144 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068166824 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067861463 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069549076 seconds)
  done (took 2.502882416 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191029506 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074076962 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220891648 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144512514 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102059207 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109005856 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11142506 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107868632 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132722088 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09709448 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152742301 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159297833 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103590718 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129206822 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087575335 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119752575 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14352805 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155436473 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0995656 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153806601 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134744237 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122512331 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141388769 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097003164 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100952701 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112570509 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072417762 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076924203 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158003668 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122564565 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134911138 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104710856 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08997742 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169984984 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156686908 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131325611 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141337659 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081675842 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117591078 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128649465 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192604003 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087428291 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151031933 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103602427 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078400459 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124655381 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109777633 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114686041 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099356315 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085908236 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272947239 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172598956 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127251587 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084560669 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116131715 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104928232 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110346982 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113663706 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216372832 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149273694 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121476733 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069818977 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10635955 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143234934 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126109042 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104735767 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117279216 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089940436 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124035939 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151457623 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135037799 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13291867 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.135155196 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08524115 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114720263 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129981663 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122297923 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162422557 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118449737 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071435146 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115268419 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095601474 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078352141 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142996493 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074101761 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164156966 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096079505 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121440205 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125793792 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104954168 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104773917 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149069788 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133881624 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100772555 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084032177 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099459964 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114110046 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140667379 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084906235 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104096248 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109499552 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077149752 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125716093 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072783078 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114871493 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093022747 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113431135 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267469826 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078909168 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118694128 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099823613 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100431218 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12526557 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148876567 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08576128 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079627731 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156305873 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117344078 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100072483 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135027966 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148393261 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11776098 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093955651 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136512003 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16252879 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087428296 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152074093 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099421541 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081439837 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102873032 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117961359 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106889899 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117777445 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079490957 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115028193 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157575056 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072659669 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093494326 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12693813 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079456742 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07834089 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101230949 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100147099 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093783867 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098207296 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100893549 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130077109 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117551183 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102265958 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118779144 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096699524 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155937332 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085315609 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099805426 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100977729 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070794131 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125523751 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14695097 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076676842 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150361673 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116203942 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111200091 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11261967 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080656444 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128960083 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076723373 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07061759 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13098403 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.256341663 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106723072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143254456 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109890466 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118095507 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115405352 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125199794 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122658765 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123135546 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109932662 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086443888 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109783435 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158486112 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071792793 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089315471 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080204257 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099395215 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091263179 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082098474 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131593351 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118526197 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106860596 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110043199 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094244855 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141468117 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077130914 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118869175 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117161036 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092494413 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145599719 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143260747 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125583339 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0980487 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129268332 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072191276 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072823014 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086630209 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117254816 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081839149 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081351159 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108705199 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141246861 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123585793 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128462938 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117882203 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11413767 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14857172 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071205954 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11619448 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135494384 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11544342 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.1014889 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088179809 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095313468 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135486772 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100070545 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195527459 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107962673 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11664676 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295937609 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100312986 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077769454 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101944209 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125430864 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098245972 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135589202 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094921733 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084505135 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103313417 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07736433 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09665988 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128249882 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112030642 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129077943 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10777626 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122661038 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076106067 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107179651 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117786077 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117630363 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081945379 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1150638 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157427464 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10138826 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11158304 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142282674 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077182856 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135003744 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161854764 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134926662 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082718049 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100643108 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116162824 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120491975 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116751454 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131088817 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100442355 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129988253 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107329496 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082607817 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083938322 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092446428 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099570152 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108497571 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100614216 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11000668 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092791363 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128876869 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098975645 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106364096 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112659143 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097324661 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093153759 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092967524 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163301775 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11299032 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156433561 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096095489 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13252163 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298258282 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074793594 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078438163 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079170605 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130942835 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082389944 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123976705 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108383819 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111415656 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11705873 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131228959 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093406408 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070531033 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104911529 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12588812 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11785914 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093718304 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10080466 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152378628 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115325693 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077083117 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1075695 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111909918 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100032897 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163449043 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079862823 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105830279 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076043718 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078217014 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12089436 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143320542 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08110521 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101044929 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1149561 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107055471 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120497288 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095061744 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107716885 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125154346 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138345474 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120139102 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087580245 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106676688 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121920934 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14422826 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099913263 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097705893 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163519293 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142433897 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151607659 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085143807 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109369721 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10940828 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105796022 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12754426 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081988284 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150166349 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07909724 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125224346 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09593618 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085641242 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272333925 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108963934 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086236465 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140508375 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113537579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081163241 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078851686 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107562198 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113378271 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09889288 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073540652 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136081721 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07299651 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128342568 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160980211 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078737792 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101312921 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093640971 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081311135 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0992246 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097930308 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083398897 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097565879 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159692652 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085848967 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143474545 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12602554 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109651736 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13049382 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100543519 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643122897 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078262997 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142557435 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110882129 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169031152 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095601044 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112860465 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106557027 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11528956 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133644592 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098029916 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174635101 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123292865 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113130731 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07671507 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098222712 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099231092 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086190184 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10252761 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108816465 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108749573 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091590705 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112627569 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116148352 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080472024 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093116683 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144879604 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109389456 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138496587 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27972879 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082949041 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114091145 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127326329 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078386542 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112622683 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141722504 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102285525 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119116696 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080663673 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096832004 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163669954 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071603595 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148844145 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114843307 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10703471 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111976173 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105495071 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12349831 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099492288 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116141817 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090442216 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141587467 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109883021 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081990832 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077790856 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102883438 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10673912 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095577164 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094971944 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096963568 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142618438 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070863637 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094540123 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110187477 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140033432 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160238062 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102584636 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081542904 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116114756 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151357075 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109739109 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115654811 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079591139 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079713712 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079858563 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098724804 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120459149 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109407688 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114753244 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108424212 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150441568 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081860873 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222757528 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093041195 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101776797 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087106308 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078411872 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093391504 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09267599 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098188097 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105856482 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311713427 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094252079 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088911201 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090989269 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074111325 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081732728 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120499879 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105843041 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112292467 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116845452 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080823761 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099947659 seconds)
  done (took 57.073490796 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11791653 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.095897892 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097605415 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143679883 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121462772 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199428693 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151144214 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188868607 seconds)
  done (took 2.716130091 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068970064 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095449572 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104614382 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083237442 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067491949 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068478791 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224535564 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081853573 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0674354 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091461793 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078243749 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069496353 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.453397534 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067346318 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068347603 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077245639 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068486283 seconds)
  done (took 3.425392897 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.382586702 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609385689 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354948872 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076697933 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.978818205 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09291591 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.205229511 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140767583 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083013149 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55157025 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366729423 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135458376 seconds)
  done (took 18.578333664 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082683172 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077320565 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09144733 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091242038 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078962843 seconds)
  done (took 2.022661642 seconds)
done (took 105.566519415 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081870987 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440046999 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069663999 seconds)
  done (took 2.135543404 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091720181 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089515735 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090278118 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087039638 seconds)
  done (took 1.969364593 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075659355 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077250077 seconds)
  done (took 1.755196165 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.207892415 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175055207 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097671456 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083376864 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080768168 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081374203 seconds)
  done (took 1.847358526 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07349628 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073453725 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073979179 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074169245 seconds)
  done (took 1.892943125 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06925839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067292166 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069711863 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072212407 seconds)
  done (took 1.87678735 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085001147 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085351199 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079872669 seconds)
  done (took 1.849119106 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101106158 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090776202 seconds)
  done (took 1.791096076 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081966004 seconds)
  done (took 1.681184037 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090418799 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100491526 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130709475 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115323927 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136248891 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114787421 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.0887413 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085503769 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079709203 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092626485 seconds)
  done (took 2.632929871 seconds)
done (took 21.592446788 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079526613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372026187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360729092 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09094699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671552644 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357692759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988988247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093668684 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143530169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06953751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087227543 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652594348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981654335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331761432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96781196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326037209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653579008 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069309799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068824423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069666326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974161312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069349327 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070367566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070278451 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650508819 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375028738 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071290638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331214495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069691935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07385682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359492754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070952408 seconds)
  done (took 16.203127674 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071528226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122585125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074175403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085863519 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071231167 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070626004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072561095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069957279 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122934235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06990104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087141127 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068991975 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073548348 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07106378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089883383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069028477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071906187 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07025564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069921706 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070844326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089128712 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069679828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070803105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073035656 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07133835 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083488325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071906265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070111806 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070362616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074809698 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07524361 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071661612 seconds)
  done (took 4.079764871 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117029233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126623578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074860222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106925542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113053711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071666355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146727755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094004487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129392939 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070293901 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087112243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069336115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104474693 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071263108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091368601 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070497743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073466956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070747175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070093615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071138779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089302715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069927058 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070710668 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070570666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071025448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085298762 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071668047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070543687 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070360826 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075028997 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076405545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071961478 seconds)
  done (took 4.340753574 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071873631 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073536234 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081906734 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082576899 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068620332 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070913604 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072026938 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06845117 seconds)
  done (took 2.209589739 seconds)
done (took 28.441148991 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080060002 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068795345 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071941919 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088146925 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074343244 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079650602 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06577812 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075314847 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072647718 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072765316 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07444143 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068046432 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071224179 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065733922 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073899364 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067376425 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081723228 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071436674 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080727101 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081434244 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070461189 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073847943 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075790565 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08139219 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08168855 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081509511 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077124321 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073723258 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069116945 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071291281 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070969022 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079900418 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081796516 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081411871 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068046484 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068096567 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072516532 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069772588 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082758996 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077095579 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070088727 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077057515 seconds)
  done (took 4.733532714 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084938183 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09020233 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082897678 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080676036 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090811165 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082826911 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086901289 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07807153 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078294541 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086473392 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074448524 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081581581 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079055649 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0731654 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078006622 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076061112 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080550344 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074753562 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077854882 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07856495 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087960322 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073579983 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088350368 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080059429 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076260458 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081385481 seconds)
  done (took 3.732068714 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074230473 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085909669 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092965907 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144176784 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111400147 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080560636 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08219495 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092858069 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096651923 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06941889 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073687469 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093758983 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09401829 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07506259 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069250511 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084872682 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084300065 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070788939 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076252515 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097754962 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089685224 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086331725 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094321416 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08531844 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068872123 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071028403 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07373146 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086970199 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071137631 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079942786 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072040518 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072554907 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070070873 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079436922 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071560193 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068267257 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092851395 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080095868 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081848327 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069217479 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078059822 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069779666 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094228397 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128539605 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068085812 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072573661 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072469819 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079775583 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067903969 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095686329 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080378399 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068237062 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069313506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067781142 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067932366 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070921851 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070183992 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071039305 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0788817 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075452747 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090205647 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07346104 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086048699 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068588752 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079315218 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068052616 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069788994 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067549256 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096675289 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070230582 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112852917 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069749788 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067611583 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079745176 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078624925 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074529219 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068536532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085925299 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080468151 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072713646 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076996619 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071994939 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072354146 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099295853 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06916488 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068318474 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067472657 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072195046 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071996569 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069642879 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080563651 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068288858 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07221134 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086409952 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068778194 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069909437 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072522144 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071345544 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06790535 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079221858 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072414303 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070182137 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07899488 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069553329 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072408532 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082076613 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07533695 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06798605 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070805486 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072393933 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070289471 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069898985 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072062362 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071087838 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075570137 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075021663 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074162915 seconds)
  done (took 10.770021573 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163826266 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15605221 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071070311 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148508192 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077351593 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080918966 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152109748 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095485722 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069072935 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070418938 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069629875 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109868241 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105312328 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116966304 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081849844 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069896726 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091815817 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115553446 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153487797 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147435861 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091729536 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07722958 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071803948 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07065928 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070620086 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078774106 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085979081 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07799306 seconds)
  done (took 4.431336238 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078085083 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103840218 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073521599 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091644244 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088879214 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069808661 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071157282 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070632292 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085865187 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078602379 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06932629 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074651927 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073294864 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072485203 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06999639 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075989984 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0765383 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069180393 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073441303 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074657482 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079462683 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094276377 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072805363 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069004835 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072370783 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069710697 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077457825 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081457806 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072087127 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105146813 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067290012 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074050981 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08385165 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069970042 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068863651 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069563433 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069440755 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069531476 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070755577 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067769067 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067855085 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073055363 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068618619 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077895926 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082136999 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071207801 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071082932 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072369543 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072093787 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066981456 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072823278 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071810004 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072423738 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076533248 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073918725 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072146707 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070819462 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096025811 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.0755014 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069003257 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068266021 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068059087 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071474281 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078754076 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084460047 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071750225 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068007946 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069388017 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082463862 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082423698 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068750467 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073859207 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067306312 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071356197 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072345018 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075411834 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070454871 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067766752 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069045201 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069486881 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070151943 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069242533 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068492788 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072288576 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067516014 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068145577 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069627006 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07081556 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077715402 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068596639 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073088375 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070323608 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068474738 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071932116 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074858099 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072363007 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080136622 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080039166 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069461192 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067793405 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083420546 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07186775 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068742487 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074475509 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.0743435 seconds)
  done (took 9.425752633 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091689659 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069216044 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085805866 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092544801 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079312723 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074769838 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079226089 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069107076 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085476385 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074294126 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077011612 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068398947 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080289125 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079347084 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069731903 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079824363 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072740319 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087153408 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083360813 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067602589 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077908364 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081759403 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081471866 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083451032 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082700101 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084398318 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081722775 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079015209 seconds)
  done (took 3.885705707 seconds)
done (took 38.592993293 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.707640234 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.858166479 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.686053541 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.86537798 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.983144482 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 80.431637349 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.863510487 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.682634594 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.907442886 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.729141223 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.027509581 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.916702099 seconds)
done (took 138.423193481 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.713776555 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.835799594 seconds)
    (2/2) benchmarking "String"...
    done (took 1.93506964 seconds)
  done (took 5.394245903 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.881739322 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.358325167 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.942616019 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.684239312 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.690921947 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.135014572 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.454795394 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.187522239 seconds)
  done (took 30.076790556 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.884504985 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.910273 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.393159328 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.435531819 seconds)
  done (took 15.292093335 seconds)
done (took 62.076753453 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.691884335 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.745122828 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.719705374 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.681791281 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.782759268 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.697188673 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.978942809 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.70872442 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.683297679 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.691548023 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.685360787 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.109191497 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.697115998 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.943755189 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.686711756 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.690400769 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.726960467 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.195493433 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.843982878 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.704834912 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.704608656 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.692812776 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.687585343 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.688619277 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.695840893 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.685275661 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.084009961 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.69290932 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.530666051 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.686942201 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.740445435 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.221683799 seconds)
  done (took 201.400971373 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.686060237 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.733161331 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.833184542 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.691468652 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.158398527 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.876028248 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.783072173 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.304811219 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.687762901 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.712673076 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.98266105 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.68518032 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.007526021 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.63835266 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.720671108 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.689723267 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.913588321 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.003307723 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.725570652 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.83351542 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.704643836 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.791089572 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.743909889 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.97341265 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.687656597 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.692629609 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.700314798 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.714038175 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.872461688 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.892375833 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.693817966 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.713742445 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.886596158 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.557347188 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.689765937 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.69057008 seconds)
  done (took 167.297339084 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.865704742 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.690333759 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.688093442 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.688554686 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.694034365 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.688906652 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.687964109 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810424138 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812758511 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.075761657 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.353239994 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.741577015 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.68820605 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.442871328 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.688509613 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.70074032 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754060715 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.689469162 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.687823703 seconds)
    (19/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.7017363 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.689154263 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.688917919 seconds)
    (22/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.689175979 seconds)
    (23/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.704276068 seconds)
    (24/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.689070516 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.698394421 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.689082395 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.695302658 seconds)
    (28/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811628918 seconds)
    (29/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.716866298 seconds)
    (30/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.69135371 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.692549507 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.697318929 seconds)
    (33/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.075024135 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.696359066 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.931806766 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.690356216 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.697049848 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.511462653 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.719210821 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771460041 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.692237019 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.695972202 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.690201801 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.907771038 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.690234653 seconds)
    (46/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.691586807 seconds)
    (47/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.690023361 seconds)
    (48/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.692117114 seconds)
    (49/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.692098369 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.802847507 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.693315238 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812456108 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.692854197 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.16395861 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.690519174 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.696624154 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.129644761 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.27574825 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.692446413 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.693060983 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.691511336 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.69073506 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.696545827 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.082934261 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.76389129 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.694730879 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.693078844 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.697735977 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.895541389 seconds)
    (70/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.693912236 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.691253383 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.189210961 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.706557868 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.816335932 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.813778239 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.693575861 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757258276 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.784648745 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.69287498 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.691677178 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.691786777 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.691317016 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.691579711 seconds)
    (84/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.772199227 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.772048506 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.701430877 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.69326251 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.745029963 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.761859044 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.693336095 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513294134 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930486724 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.69338838 seconds)
    (94/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.692793305 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758793876 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.694686747 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700486162 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.77512483 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817889295 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.697073655 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.409943265 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.100183105 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.767202082 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.694489706 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.806846108 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.695415275 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.773681939 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.699446684 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.695109888 seconds)
    (110/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.705581755 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.693754069 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727025253 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.69408449 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.065662218 seconds)
  done (took 391.418764572 seconds)
done (took 763.667359618 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.293285816 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.262878642 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.360396385 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.27448169 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.251711666 seconds)
  done (took 13.075206761 seconds)
done (took 14.707451567 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.770765815 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.777713511 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.713108128 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.774033469 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.709015794 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.773812569 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.7575723 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.71670973 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.744244854 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.71575215 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.744906395 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.7150229 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.702305695 seconds)
  done (took 24.248375805 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.91414917 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.917119991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.765478016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.924077694 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.738457083 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.920641106 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.848096237 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.836739183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.83416205 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.706163893 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.70372914 seconds)
  done (took 21.743356569 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.92379626 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.929792567 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769544349 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.923101484 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740101368 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.922741612 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.848084079 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.846509972 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.837353262 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.706775406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.704893247 seconds)
  done (took 21.788066418 seconds)
done (took 69.4138103 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.697492552 seconds)
  done (took 3.332628127 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.71562029 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.870639232 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.696462591 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.69761481 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.698168465 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.698654547 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.69893458 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.698164069 seconds)
  done (took 15.408521725 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.698297428 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.698563255 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.697717295 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.697143971 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.697147389 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.697343588 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.696507877 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.696186329 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.696359688 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.696436311 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.696969787 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.696883476 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.697627676 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.697244602 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.697369935 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.696652487 seconds)
  done (took 28.791573839 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.699200312 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.697982953 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.697138826 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.697985599 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.698099076 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.698173408 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.699395394 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.697510888 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.697721228 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.697557496 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.69841851 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.703903675 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.704338075 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.704254719 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.70340118 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.705027547 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.702377313 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.703446068 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.707730902 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.701832669 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.703370954 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.703537366 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.703343731 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.703368349 seconds)
  done (took 42.467766836 seconds)
done (took 91.635825336 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.387574263 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.293046392 seconds)
  done (took 9.320571673 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.706850174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.702215401 seconds)
  done (took 5.113467946 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.705049058 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.704566948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.703851587 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.70478771 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.703206685 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.703328767 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.704048435 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.705470182 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.705981369 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.702354116 seconds)
  done (took 18.684420551 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.703995695 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.704350656 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.70498372 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.704937427 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.704649515 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.704176244 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.705887013 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.704802239 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.704511628 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.704892606 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.704225172 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.703691402 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.703606186 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.703699497 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.704994209 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.704940374 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.704099186 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.704572241 seconds)
  done (took 32.325346271 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.706241476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.706963435 seconds)
  done (took 5.055290034 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.7078694 seconds)
    (2/7) benchmarking "second"...
    done (took 1.704352436 seconds)
    (3/7) benchmarking "month"...
    done (took 1.70504896 seconds)
    (4/7) benchmarking "year"...
    done (took 1.706559173 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.70539394 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.704534553 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.706943212 seconds)
  done (took 13.582044634 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.707571029 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.859837456 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.923064098 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.337644676 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.706538952 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.707970485 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.626766933 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.707593799 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.711272942 seconds)
  done (took 18.930280052 seconds)
done (took 104.651632404 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.524471448 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.708004566 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.976072779 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.757637616 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.72877905 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.706864083 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.743579355 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.96645179 seconds)
done (took 41.755112162 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.726706458 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.395658695 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.635950935 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.745903226 seconds)
  done (took 15.423932711 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.704821395 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.108143841 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.733325868 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.586369436 seconds)
  done (took 21.780530946 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.073661038 seconds)
    (2/2) benchmarking "read"...
    done (took 2.057827699 seconds)
  done (took 5.782831972 seconds)
done (took 51.360670909 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709076117 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.708763842 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.70699462 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.70839788 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.707797469 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.708314181 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.708374863 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.709547118 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.709123335 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.708004999 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.708126144 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.709376624 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.708552032 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709276573 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708979287 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.707713521 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708168069 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.706802023 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708322674 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.706309715 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707010033 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708755158 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.707651301 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.707341141 seconds)
  done (took 42.642891502 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.708807458 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.707509835 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.707276464 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.708929986 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.708332141 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.708170373 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.708207864 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.706637153 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.707984147 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.708895682 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.709154879 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.70804258 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.707434513 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.708865037 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70906047 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.710069017 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.707630941 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708572481 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706990352 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.70871844 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.709925723 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707870324 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.708206598 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707398943 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.71083603 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.708940776 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.708993108 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.70838995 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.709833018 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.708739285 seconds)
  done (took 52.898924015 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.70837978 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.710774624 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.708080333 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.708448016 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.707973163 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.708372853 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.709392842 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.709337281 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.70932265 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.708128369 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.708667562 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.70902726 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.70858129 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.709916737 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.709256442 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.708498365 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.709858761 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.709176174 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.708757022 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.708195012 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.713244926 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.70956606 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.708715334 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.709854999 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.712247086 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.709645069 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.711219365 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.709096048 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.709432215 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.712205796 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.71136315 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.709147169 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.709430614 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.709368073 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.711910208 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.710449812 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.710008552 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.711456201 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.710001753 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.711215441 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.712430013 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.710787996 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.712805476 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.710682443 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.709957385 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.708869948 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.711203305 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.710619146 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.710011848 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.710661534 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.710348268 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.710958553 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.710255408 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.71226258 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.711082035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.712283165 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.712919165 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.711165157 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.71102202 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.709777242 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.712342673 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.711148135 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.712522589 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.711762 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.712290117 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.711080524 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.711662797 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.712681766 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.710768683 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.712593836 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.71440158 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.71135204 seconds)
  done (took 124.800729009 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.711144602 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.711955072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.711986548 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.711577374 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.71194806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.712592778 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.711995344 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711435374 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712308846 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.712510818 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713467061 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.712872609 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715496435 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.713550959 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71298817 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.712624822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.712972638 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714310893 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.71346751 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.71611365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712821962 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.71426543 seconds)
  done (took 39.333650612 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714119439 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.712100424 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.714607919 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.713827863 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.715031498 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.713909536 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.714787437 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.71332201 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715095009 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.714035699 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713766849 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713886258 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.713478916 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715792714 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.715612365 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.715269956 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715389984 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.716140942 seconds)
  done (took 32.512520571 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.715624605 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.713091943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.715056313 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.712699774 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.713805501 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.714540656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.71561006 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.715944438 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.714268691 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.71364281 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.712466545 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713273159 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.713891857 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714106419 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713838332 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.714533093 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.713958966 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714866578 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712856815 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.71498066 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.714584604 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.714074113 seconds)
  done (took 39.364658499 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713597004 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.71365229 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.71430817 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.714633142 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.714033363 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.713448752 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.714911967 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.714117453 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.713989269 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.714404302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.714373311 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.714136246 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.714434178 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.714766137 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.714834474 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714273815 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.714918284 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.715011891 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71464976 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.715250608 seconds)
  done (took 35.940466346 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.714325297 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714697362 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.715831202 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715598612 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.714778313 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.715313614 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716104713 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.715017722 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.715303166 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.716161647 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.716587378 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.716902344 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71720041 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.715411338 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.716209226 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715189012 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.715007173 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.716813206 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.716098038 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.716705345 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.716680727 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.716369525 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.715730682 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.716593983 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.715107751 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.716331858 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716323104 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.71616457 seconds)
  done (took 49.699159149 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.716737271 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.715522113 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.71581356 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.716331286 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.716526162 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.716060947 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.716512422 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.717329878 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.717633542 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.716308075 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.71586761 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.715934765 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.71602429 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.716694025 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.716592499 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.716878475 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71737231 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.716857789 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71734445 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717448371 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.717478822 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716803465 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.717265059 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.716886706 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716676256 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.717459953 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.717296338 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.717626793 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.717666508 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.717355312 seconds)
  done (took 53.159571149 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.73798424 seconds)
    (2/2) benchmarking "in"...
    done (took 1.737472241 seconds)
  done (took 5.130648924 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.71689686 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718873391 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.718702015 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.717773892 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.717739477 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.718408192 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.718459735 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718807286 seconds)
  done (took 15.400321652 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.716974651 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.715186607 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.715904979 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.715040688 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.716182804 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.717490772 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.722956797 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.716200299 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.718336493 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.718472489 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.72416568 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.72582867 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.720798011 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.717892688 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.717860655 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.718845643 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.715500651 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.715639328 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.715580449 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.716054875 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.715751504 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.720544126 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.719323907 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.715918845 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.71956339 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.727950997 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.722268486 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.71615636 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.717489772 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.722825133 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.717505183 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.715030207 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.717192696 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.71627729 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.716866924 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.716972018 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.7273391 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71885879 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.723976777 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717600593 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.71773489 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.716719392 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.720625095 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.719635396 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.720378589 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.717575388 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.717398941 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.716946329 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.719777482 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.721718733 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.726137969 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.719313221 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.717389366 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.724075018 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.720534534 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725515774 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.719045735 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.72220298 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.727721428 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.729995896 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.730025531 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.72856503 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720373683 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.71824305 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.72786937 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.743996382 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.72668653 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.719580661 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.717682655 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.717313912 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.72677796 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.730986768 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.730685046 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.719103948 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.71887546 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.718976849 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.721369705 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718114598 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727938141 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.72310058 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.71933279 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.718748577 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.728978881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.743521779 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.719894356 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.718991701 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.718494412 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.719447063 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.722447743 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.731626019 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.720377076 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.719498629 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.72227558 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.721782016 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.722961792 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.719538251 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.721378204 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.721760472 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.7193703 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.721592826 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.722153423 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.724971816 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.731069452 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720817136 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.720338865 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.728081252 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.720395517 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.720473611 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.727750877 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.719054903 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.719849831 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.723331111 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.728506328 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.720038726 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.724649096 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.731097095 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.720754034 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.723748717 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.720364225 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.72033029 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731760043 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.748793222 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.720489941 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.719929452 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.727358298 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.732406296 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.720867814 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.725881502 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.720656299 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.721110225 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.721493795 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.724797892 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.721852132 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.724168561 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722220466 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.724846781 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.72056499 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.721282119 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.721797618 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.723881042 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.724876913 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.724584048 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.723491177 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.725295326 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.721854161 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.726079768 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.729243004 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.724782514 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.726133323 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.728457016 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.721416422 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.722353784 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.724422077 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.722522923 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.724206911 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722490733 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.724070195 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.722398637 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722933283 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.721842692 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.722738624 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.725924415 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728699487 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.723757684 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.728183048 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.725620099 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.72316431 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.724041706 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.723447498 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.725586931 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.722313212 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.724756635 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.727504591 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.731652995 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.72238487 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.72367822 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.728541005 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.723815979 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.724332001 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.723464288 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.72802768 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.733089633 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.723666654 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.732437099 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.723493823 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.723728219 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.724060745 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.725741266 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.725302121 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.724217078 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.728468874 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.732223374 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.736863467 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.734779117 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.72693525 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.727636186 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.727298969 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.729500908 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.729575293 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.725676355 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.723898363 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725191782 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.725444359 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.725195045 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.726945701 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.724367666 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.726779692 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.724789539 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.72484709 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.724578329 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.724634951 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.726852782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.72660577 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.7242546 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.724987391 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.726062947 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.72684875 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.725851244 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.727250912 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.728028327 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.725549679 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.726788225 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.733029453 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.72515658 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.729178359 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730568236 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.72671456 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.727234359 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.72705881 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731437107 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.727509419 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.733725747 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.729558837 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.728081596 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734611986 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.728818843 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.727307938 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.730604894 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.726468339 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.725952337 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.729668996 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.7335053 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.726876513 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.726720052 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.727649742 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.728817983 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727430995 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.734247439 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.726338943 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.728000217 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.726975231 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.730318688 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.726297417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.729326988 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.729574245 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.730122162 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.731618126 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.727262999 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.727201761 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.73007421 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.726863095 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.727612626 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.727372083 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731563371 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.73528299 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.732859441 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.730742886 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.732017873 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.73022703 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.732234933 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.729680679 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.727932029 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.729819017 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.740038355 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.736454661 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735962873 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.731801345 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.727328459 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.735688811 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.73225424 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.734486772 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.73067764 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.731404185 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.730160883 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.730583613 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.728622833 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.731589816 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.728646682 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.732248389 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.730447508 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.732546061 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.730038274 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.729891946 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.729658949 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.729686919 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.72968633 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.729447581 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.728662175 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.732039889 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733351269 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.73104821 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.731008276 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.739364759 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731029705 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.731540119 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.731651673 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.730580858 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.732338372 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.732783786 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.729423669 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.733097205 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.737590929 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.734197955 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.741628166 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.732473207 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.74049675 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.729673467 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.733435972 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.738351856 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.729876316 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.731445567 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.733187849 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.731753875 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740233387 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.730476637 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.733838333 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.734677182 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.730929048 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.731056305 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.731479508 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.730863669 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.730538471 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.730960282 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.741016947 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.734939075 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.736481062 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736406436 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.731527539 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.731093084 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.731689439 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.733045137 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.737181143 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.730898673 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.734758184 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.73208786 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.734262594 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.732432683 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.731543005 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.732412364 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.731628039 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.731664787 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.740079357 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.735311242 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.737885376 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.731180914 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.741036669 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732791898 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74081279 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.732095297 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.735205708 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.731965555 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.731878629 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.735645131 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.734510412 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.735465705 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.732625039 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.735185707 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.736110712 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.731977691 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.736235537 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.734603665 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.732374335 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.734081019 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743098643 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.756177101 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.735880903 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.736098513 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.732642183 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.735988888 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.738205701 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.734661877 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.736669043 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.738856541 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.747499583 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741725646 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.737284663 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.734867009 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.735542118 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.733291069 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.732886029 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.733867655 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.733367175 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.733674234 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.737104887 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.733372773 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.739821133 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.733395848 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.737349814 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.736649818 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.739520404 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.747185111 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.736129412 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.739340276 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.734987309 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.73682022 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.737255744 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.738566507 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.735774795 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.736748858 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733344085 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.735950739 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742834774 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.744764655 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.738260445 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.736141889 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.734799812 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.736508879 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.736646275 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.734606236 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.734709754 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.735281504 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.737832872 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.735796185 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.737800707 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.736349595 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.73413515 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.737967655 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.73521775 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.738879187 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.744083058 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.737822857 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.735156552 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.734414516 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.73581952 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.736989004 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.737938249 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.744671968 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.739240289 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.74781369 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.746780033 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.740450387 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.737768698 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74010884 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.745816671 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.737296827 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.73771468 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.736289129 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.739530956 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.738737263 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.74149638 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736559088 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.744587661 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.737950061 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.73848119 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.746699583 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.739539796 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.737799237 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.73984344 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.742784472 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.739169576 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.737522562 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.737421874 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.738060623 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746649969 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.741267084 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.738025756 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741621869 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.738000374 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.739841404 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741707248 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.736950328 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.73973618 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.737769521 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.739697675 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737133547 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.737318423 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.737191475 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.739624429 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.739884032 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.741308121 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.748093777 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.737506396 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741361278 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.740398031 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.741092706 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.73867758 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.737214478 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.737181336 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.737435428 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.740214772 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.739016706 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.740506922 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.742639896 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.740725931 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.742175101 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.742227299 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.738669938 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742513239 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.750622838 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.746049372 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.737794336 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.743265491 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.741747775 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.743974929 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.738996592 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.738274486 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.739859917 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.74244855 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.739134282 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.739181515 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.739569672 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.743575704 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758175834 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.740434988 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743104779 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.741620218 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745223746 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.740350847 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.74049764 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.740102976 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.744990044 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.744347647 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.746947086 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.740718797 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.749496137 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742542697 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.742965983 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.743687257 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.745262958 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.750224398 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.745924714 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.740445517 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.740276684 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.74553772 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.758238582 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.740103051 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750136809 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.771756566 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.743737291 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.744142237 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.740629137 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742314357 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.741542193 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.74458872 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.740574279 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.740615806 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740573584 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.740939594 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.744271997 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748909441 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.744532036 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.740628903 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.73977079 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.742865843 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.744114925 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.741457749 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.740978756 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.741423451 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.741018242 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.741545346 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.741781087 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.742930449 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754082746 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.753581144 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.741652393 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.742130984 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.741956845 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.747100539 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.745934222 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.753229006 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.749412448 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.742633566 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.742136228 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.745058003 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742337637 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.741167411 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.745032706 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.744436001 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.744300962 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.741714175 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.754788701 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751058952 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.74964255 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.745132558 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.742811462 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.742307385 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745936618 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.742906357 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.74291209 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.746492433 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.745415937 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.748186795 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.742245146 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.742206262 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.747876601 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.7512415 seconds)
  done (took 1034.071404928 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743401916 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743541911 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743336449 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.743187615 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743670939 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744178754 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742781918 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744039773 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.743331904 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.743614952 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743885708 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743725612 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.744598231 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.743340769 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742807683 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.743307246 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74291321 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.743117914 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.744126179 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742337033 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.742406489 seconds)
  done (took 38.292468408 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.742544823 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.741268841 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.743653433 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.742691394 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742279245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.742778404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.741590176 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743541552 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.743614881 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.742822307 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.743687182 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742496563 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.74316279 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.744507726 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742590626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743152195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.742723767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742841903 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.742929287 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.742449048 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740302718 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.740596151 seconds)
  done (took 40.017618527 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.740571123 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.741290225 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.74197803 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.740333967 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.740913709 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.739705532 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.740208936 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.739853698 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.739860003 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.744546121 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.744196455 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.743587149 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.747931191 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.749593138 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.743448924 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.739184197 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.884338005 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.738441502 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.73821591 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.739278086 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.737350886 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.745173063 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.738396419 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.73817671 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.739885301 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.752636404 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.735837806 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.734617124 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.735200978 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.738413282 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.740887991 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.733330436 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.735667249 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.738682421 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.73671933 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.736621842 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.740170652 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.732183243 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.73262916 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.731624835 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.742351234 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.755266465 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.732023396 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.740443062 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.733644636 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.731085074 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.73655998 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.740002639 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.733991998 seconds)
  done (took 87.055946978 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.731654679 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.731838187 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.73326442 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.731523742 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.731411767 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.732723794 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.73182193 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.731164439 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.732319154 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.732529429 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.733119931 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.732269921 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.732952547 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.732785055 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.732089395 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.731899681 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.732808679 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.732406537 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.731766558 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.732531023 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.732234665 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.733297945 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.733692433 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.732959535 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.732910127 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.732812778 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.733210438 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.732865579 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.732467368 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.733098655 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.732688628 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.732531734 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.734519722 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.733162286 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.732199685 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.73287841 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.733019952 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.732789655 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.733860625 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.733173053 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.733402406 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.732810166 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.733282254 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.733722656 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.733778548 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.732029792 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.733095901 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.734051546 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.733079326 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.733183116 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.735961032 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.73331315 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.733756607 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.733459429 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.734003039 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.734660342 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.734396259 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.732918785 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.734229653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.735109402 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.733317954 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.734979577 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.733204287 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.734312199 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.734164746 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.733784372 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.734861087 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.734021956 seconds)
  done (took 119.523409918 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.734916323 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.735737262 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.735017431 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734821377 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.735858527 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.734774735 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.735684575 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.735124802 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.736500041 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.736443669 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734813653 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.734781524 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.734937363 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.734395208 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.734733415 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.735013637 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.73330038 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.732489367 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.732135528 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.733978528 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.733925809 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.732719418 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.730771268 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.73041691 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.73092024 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.730262329 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730452255 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.731511867 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730381916 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.730649388 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731972274 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.730525196 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.730973092 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.731716684 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.730300521 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.730449448 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.731284354 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731945323 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.73239478 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.730849958 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.730611235 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.731502706 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730900392 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.731789627 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.732546964 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.731027096 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.731835056 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.730922522 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.730736083 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.730646906 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.731664222 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73185198 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731620927 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.730800824 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.731046759 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.730211781 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731808416 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.7310086 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731131059 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.731525128 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.732577987 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.731803978 seconds)
  done (took 109.083302301 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730229326 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.730164849 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.730059427 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.729752084 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.73053757 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.730385093 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.730492914 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.729298002 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730043826 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.730203513 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730154584 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.730507078 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732317974 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729457614 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.730804381 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732052159 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.730712039 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.73065557 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730734774 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.730011541 seconds)
  done (took 36.276894439 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.731536671 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.731668119 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.729888689 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.730276515 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.730770203 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.730011366 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.733456403 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728351122 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72778687 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728854811 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.728493545 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.728317691 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728997924 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.726650224 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.728558344 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.725945844 seconds)
  done (took 29.337888817 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.726426399 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.727482717 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.72502169 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.725455927 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.725415336 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.724869043 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.725818489 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.726158169 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.723926538 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.726155921 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.724796556 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.725454514 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.724527904 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.725761767 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.724807574 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.72365206 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.723694245 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.724455118 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.724992965 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.723405826 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.723812058 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.72234464 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.723113438 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.722929628 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.725610344 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.723145098 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.721609226 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.72265543 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.721946937 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.722137903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.723904466 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.722127107 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.721259818 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.722282152 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.722224652 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.721959904 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.723550739 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.722115637 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.721807503 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.722172914 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.723366412 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.722592639 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.723107352 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.722003081 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.72223047 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.722284192 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.722052051 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.723839076 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.721863447 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.722367287 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.722841145 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.723969897 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.724819347 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.725365918 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.724866683 seconds)
  done (took 96.467120142 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723512138 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.724701688 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.723433351 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.723201211 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.721594162 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.722006741 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.722247851 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.721745767 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722029114 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.721099371 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.723397365 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.722321912 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.722989935 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.721887098 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.723082351 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722037845 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.721254845 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.722708292 seconds)
  done (took 32.66591637 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.722149087 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.722248596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.722065682 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.721477933 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.722161431 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.721539446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.721688804 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.723034657 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723046492 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.724075504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721706039 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.722362254 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723332351 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.722590312 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.723071288 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721791552 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.7226859 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723457929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.722307308 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.723070779 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722882695 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.723487096 seconds)
  done (took 39.555275763 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.725181603 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.723535709 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.73810147 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.742238303 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.743704201 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.755933157 seconds)
  done (took 12.089132257 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721923677 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722206999 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.720871645 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721821241 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721722246 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722632664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72287971 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722146033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721072672 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722235253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721282354 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721158163 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722277743 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722267982 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721596789 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720563754 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721542031 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721533321 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721877541 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72125931 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.722213751 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720348991 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720895727 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721398038 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722387292 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720454419 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720883663 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720875988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720617752 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720563505 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722293779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721277527 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720406071 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721279324 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720734354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722265498 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720414703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720622223 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720868813 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720267399 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.720732505 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72125389 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720855259 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721298565 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720504857 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721179092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721594533 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720967091 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721247735 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721320103 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721078852 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72154865 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721423682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722154767 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721826735 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721714092 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721685988 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721955427 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720999871 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723322144 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721276631 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72179401 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722582754 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721884781 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722441287 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721925641 seconds)
  done (took 115.276314221 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721763104 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.721675268 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721509391 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72282055 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721035031 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721091769 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721499115 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721395271 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7216619 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722420541 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722603867 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721653172 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72237913 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721315829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722249755 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.723448355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721565969 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72184557 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721132499 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721805315 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720644959 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722559426 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721585378 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721456158 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721029586 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720969174 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722057454 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721447395 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721360558 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720805473 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720494663 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720422437 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.722808276 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.720871482 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720888414 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72098563 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720268461 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721237957 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.722418195 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721507981 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720988647 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721785709 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.721420996 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721112856 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722015111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.720927893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721522734 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.721771697 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721490255 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720919009 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722194474 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720785616 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721715085 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720962869 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722778883 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721392848 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723357063 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.720867175 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722207085 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721585105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721462106 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72200211 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722461091 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721296808 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.722166054 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.720716467 seconds)
  done (took 115.285013086 seconds)
done (took 2397.531930234 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.789037699 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.737767877 seconds)
  done (took 15.185083729 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.88425119 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.836419707 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.725264614 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.73698954 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.724724865 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.726673623 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.748389096 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.724893647 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.724425696 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.724875675 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.724259908 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.911807627 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.779407592 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.72549469 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.724192062 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.815201029 seconds)
  done (took 49.899052435 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.728349224 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.734535021 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.738534259 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.736140037 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.728367289 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.740312998 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.764618971 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.731999374 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.76237129 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.739226944 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.795987688 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.739876037 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.728439026 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.777312249 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.741814743 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.742712687 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.820952421 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.80269059 seconds)
  done (took 33.21355727 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.803800755 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.737413249 seconds)
  done (took 10.208442156 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.737017058 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.758715241 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.793216885 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.747707194 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.751595505 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.764587762 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.731268727 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.762926361 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.74988071 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.754308857 seconds)
  done (took 69.214105921 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.73844034 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.736615087 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.734895548 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.733244184 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.731274821 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.736756466 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.733094221 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.734711805 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.388916288 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.762591391 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.735905596 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.739234919 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.73407502 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.735070079 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.725336887 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.754975277 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.845215836 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.72496977 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.724828455 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.738323058 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.7368923 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.785687054 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.747553104 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.72859691 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.75789945 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.384004796 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.737489874 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.739857719 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.845825365 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.725597829 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.733775492 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.920878868 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.730919197 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.197008761 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.989252977 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.734587852 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.747429602 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.741936697 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.72638193 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.856106825 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.734408575 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.741053352 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.641682455 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.9666034 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.822061446 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.777943111 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.034885383 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.753768902 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.735323894 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.763621552 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.737271553 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.735123998 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.742767661 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.249229568 seconds)
  done (took 125.154486611 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.729432802 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.07485202 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.893655925 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.729005451 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010235063 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934006904 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.729894615 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.775092022 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.732245065 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.955380909 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.981351836 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.830989949 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.73038615 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.729856314 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.72971982 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.730749641 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.88128631 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.799526998 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.730053772 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.727306108 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754420509 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968902146 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.850625963 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.73149664 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.755762481 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.938002781 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.849919955 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.831930234 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.518190607 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.728433139 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791545811 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.732082194 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.727910482 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.728910764 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.883484337 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.821063382 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810667158 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.731214333 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.727080887 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.728639209 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.386181026 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.927035406 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.824412558 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.858273588 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.979377667 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.93448655 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.506204011 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.728871556 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.466293851 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.891196633 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.956603754 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.956759568 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.849770694 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.732469592 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.060491425 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.729048934 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.729416637 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.977178599 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948772191 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.825850115 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.733573569 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.730158931 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.729205488 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965739736 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.733118998 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.824451901 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.731875098 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.729054965 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.826175618 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826752902 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.957568084 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942430432 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.759013456 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.078322258 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.22919548 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.976072357 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.795648842 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979237819 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.735935207 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.730887196 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80647347 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.567331687 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.982500324 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.971845568 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974917462 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764046925 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.446909038 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.730385004 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.955088391 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.951618248 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.990138777 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.975538443 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.965287479 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.03384535 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.731370949 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.731245089 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.049578003 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.854455405 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.733901749 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.071838486 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9593007 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.25657138 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.756933317 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.032593828 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.861073801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.734585137 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.358429117 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.733834287 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.960291084 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.771232963 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.733996404 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.73353407 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.950351801 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.721185509 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.733101918 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.38998863 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.791801182 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.737002554 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961540319 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.736076942 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999485816 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.735099924 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962238162 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.151887692 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.762016461 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.905173921 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.977319065 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.734832317 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.970690759 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975194346 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.847132411 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.951712941 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.440409357 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.733629969 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016704161 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.736673075 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.731853901 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.901180117 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.733353684 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.873824018 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.735832849 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.024860332 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.754214397 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961968088 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.735832717 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984847233 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.765455021 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.782059565 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.736125256 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85350152 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.734315564 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.564000302 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.889173129 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.734466316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.73318804 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.282945493 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.735536385 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.880314348 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.960293545 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.755054626 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804797446 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.393946284 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.734939048 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.81361419 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.757569373 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.11872793 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.733359716 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.984098066 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.153176191 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.733898046 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.734661897 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.967611026 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.916624075 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.736364287 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.735827944 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.637763617 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.73435657 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.735401458 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.917926881 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.053698449 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.734784691 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935853133 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.740130606 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.862173504 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.739564326 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.807402625 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.065779519 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.734528908 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.736174396 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.735600712 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.735377197 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.734994968 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.942619984 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.760618051 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.227403881 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.870694483 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006714046 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.043551547 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974929236 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.778165815 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.739851731 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.989247645 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.740084659 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.797511069 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.738000876 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.754825825 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960848682 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.738631073 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.944260128 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006529257 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.581005604 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.784513968 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.739256069 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.736282826 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.736509529 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.880333615 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.820627096 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.737881084 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.736870043 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.850620935 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.858363798 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.945856056 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.737368396 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.900541001 seconds)
  done (took 871.970967065 seconds)
done (took 1176.506709654 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.73752917 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.740781421 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.736441518 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.740433092 seconds)
  done (took 28.627986955 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.745645627 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.739270003 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.738554807 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.738524383 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.736886189 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.739293986 seconds)
  done (took 12.109845706 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.731516603 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.739238602 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.739154175 seconds)
  done (took 20.883710458 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.80781551 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.12775332 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.870032267 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.159486028 seconds)
  done (took 9.637195012 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.738034419 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.738488182 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.737903261 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.73883385 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.746962532 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.746372672 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.738973255 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.738978298 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.746568903 seconds)
  done (took 17.345951324 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.791665466 seconds)
done (took 94.070294823 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.749124932 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.776429113 seconds)
    (3/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.196280331 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.821684296 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.836801226 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.740514154 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.003009508 seconds)
    (8/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.836375504 seconds)
    (9/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.826085553 seconds)
    (10/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.056885532 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.742507388 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.757196331 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.748550554 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.89833029 seconds)
    (15/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.739744093 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.86710332 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.847075421 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.417894182 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.911449085 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.047368199 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.744726693 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.96442363 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.818274953 seconds)
    (24/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.834562423 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.829375633 seconds)
    (26/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.740459625 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.940211059 seconds)
    (28/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.946384125 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.740916632 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.122001735 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.746162209 seconds)
    (32/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.74264242 seconds)
    (33/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.877187776 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.909463014 seconds)
    (35/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.740036805 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.846354219 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.842557474 seconds)
    (38/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.071030068 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.743280506 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.799304808 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.754322009 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.755659305 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.053158795 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 2.046677321 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.513110332 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.005834183 seconds)
    (47/309) benchmarking ("sort", Int64, false)...
    done (took 5.382099479 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.992626312 seconds)
    (49/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.933055439 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.713124288 seconds)
    (51/309) benchmarking ("sort", BigInt, false)...
    done (took 6.749845999 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.803871238 seconds)
    (53/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.893082687 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.881248831 seconds)
    (55/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.759760081 seconds)
    (56/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.903486734 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.744337329 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.841016705 seconds)
    (59/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.924619916 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.413309808 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.750771909 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.943919504 seconds)
    (63/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.836685786 seconds)
    (64/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.984552144 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.844109249 seconds)
    (66/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.755783349 seconds)
    (67/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.101625199 seconds)
    (68/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.972310025 seconds)
    (69/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.399433369 seconds)
    (70/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.116796741 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.422041164 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.749140779 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.93925032 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.743410235 seconds)
    (75/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.614710518 seconds)
    (76/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.743627893 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.220565669 seconds)
    (78/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.894584066 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.743276094 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.429940128 seconds)
    (81/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.823491189 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.843844866 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.069496732 seconds)
    (84/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.761019236 seconds)
    (85/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.762504805 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.046686688 seconds)
    (87/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.858224163 seconds)
    (88/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.743407188 seconds)
    (89/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.181014301 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.894184291 seconds)
    (91/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.084673667 seconds)
    (92/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.746133889 seconds)
    (93/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.479454257 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.769037499 seconds)
    (95/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.757183798 seconds)
    (96/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.081229484 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.365425483 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.755984612 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.64441226 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.185785452 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.717481927 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.108855026 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 5.536109184 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.74518749 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.956628684 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.293879567 seconds)
    (107/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.030407574 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.749109371 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.138220692 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.937885996 seconds)
    (111/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.764923511 seconds)
    (112/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.839237265 seconds)
    (113/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.039171278 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.745215736 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.015829575 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.960368214 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.127023823 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.586608685 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.959649288 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.091147346 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.834743995 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.960701594 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.120347157 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.851442499 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.748455537 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.02724068 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.747372342 seconds)
    (128/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.88224512 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.033787561 seconds)
    (130/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.903411362 seconds)
    (131/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.979176553 seconds)
    (132/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.639815195 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.748505179 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.758074227 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.996364641 seconds)
    (136/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.621169802 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.904389797 seconds)
    (138/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.771195566 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.64789889 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.002023747 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.880784619 seconds)
    (142/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.811678677 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.765557002 seconds)
    (144/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.752823387 seconds)
    (145/309) benchmarking ("sort", Int8, false)...
    done (took 4.643069622 seconds)
    (146/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.059796075 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.896505051 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.748474446 seconds)
    (149/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.822620087 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.955640575 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.121082295 seconds)
    (152/309) benchmarking ("sort", Float32, false)...
    done (took 5.446629562 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.245319912 seconds)
    (154/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.832592708 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.132941576 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.763584273 seconds)
    (157/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.821533006 seconds)
    (158/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.770635032 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.679484183 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.052105433 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.059864235 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.755013248 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.929603705 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.130843533 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.831637466 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.662949144 seconds)
    (167/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.317090902 seconds)
    (168/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.008602837 seconds)
    (169/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.201021074 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.376651802 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.542134912 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.747784881 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.770388377 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.92971737 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.783995525 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.746289628 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.884689829 seconds)
    (178/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.642259998 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.825991064 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.426131792 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.943630791 seconds)
    (182/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.997809021 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.882704336 seconds)
    (184/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.957259269 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.196548605 seconds)
    (186/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.92997276 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.087155961 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.750466044 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.878319145 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.749243415 seconds)
    (191/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.07241199 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.012237277 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.828945 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.746530155 seconds)
    (195/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.661056533 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.929981732 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.124975848 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.089931736 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.810448807 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.007842389 seconds)
    (201/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.880910382 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.76992693 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.871508623 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.751157831 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.879452542 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.74847135 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.8650642 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.751038437 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.950239031 seconds)
    (210/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.827572299 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.10384223 seconds)
    (212/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.794753699 seconds)
    (213/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.882592998 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.987191186 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.980447066 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.983549496 seconds)
    (217/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.00677744 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.731830306 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.513736963 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.949691627 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.864360004 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.771276498 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.769853532 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.747932383 seconds)
    (225/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.902325558 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.08745411 seconds)
    (227/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.984956492 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.061223793 seconds)
    (229/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.920972517 seconds)
    (230/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.765093718 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.706166718 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.919401046 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.103405365 seconds)
    (234/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.754017586 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.540302558 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.993564588 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.869398414 seconds)
    (238/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.018593209 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.221416372 seconds)
    (240/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.909551828 seconds)
    (241/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.860269757 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.893106509 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.850703658 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.696792605 seconds)
    (245/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.972694782 seconds)
    (246/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.596859539 seconds)
    (247/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.756042753 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.4338698 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.766108573 seconds)
    (250/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.753277141 seconds)
    (251/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.817581035 seconds)
    (252/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.966593124 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.753984701 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.835862061 seconds)
    (255/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.77292967 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.237025775 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.065450914 seconds)
    (258/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.945939487 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.033382447 seconds)
    (260/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.851532152 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.755333681 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.862084316 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.009879703 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.759879181 seconds)
    (265/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.130567637 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.550712874 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.684134303 seconds)
    (268/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.755295704 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.128414739 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.06346656 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.103412442 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.88660198 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.920865127 seconds)
    (274/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.784902016 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.768733674 seconds)
    (276/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.862643341 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.374023176 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.542474506 seconds)
    (279/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.831429448 seconds)
    (280/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.019296859 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.819732153 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.053441138 seconds)
    (283/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.064092755 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.265475901 seconds)
    (285/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.20476876 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.914618357 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.156208255 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.756951292 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.016890133 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.521445533 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.776225565 seconds)
    (292/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.842171075 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.768972886 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.756309962 seconds)
    (295/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.759552925 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.84265736 seconds)
    (297/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.027227955 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.785565666 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.044186376 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.760137315 seconds)
    (301/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.91494795 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.080550452 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.760692619 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.846321109 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.298286288 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.455101516 seconds)
    (307/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.047916513 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.913623884 seconds)
    (309/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.04385625 seconds)
  done (took 965.891403197 seconds)
done (took 967.625298613 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.793646998 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783112975 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.767465285 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.787968858 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.87904341 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.81304382 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.780474098 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.770742988 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.816339982 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.816419815 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.765006354 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.81111974 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.768237635 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.766390646 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.767234513 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.780128151 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.224991857 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.800171158 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.783868133 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.777362912 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.782516167 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.762805143 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.814384322 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.810882786 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.769722294 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.769012076 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.769138151 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.784822402 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.878722666 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.770493601 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.768807138 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.777144044 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.088924256 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.80059267 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.765695762 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.784533522 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.778222725 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.776327648 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.771823284 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.798934109 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.217607449 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.810225996 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.766957171 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.765072608 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.76715239 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.77428882 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.765788404 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.774022373 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.780623396 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.782504119 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.157564617 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.830843225 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.770259704 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.766475913 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.779640904 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.766778225 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.772303146 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.782011133 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.786341169 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.782304244 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.061980673 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.809082645 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.772175648 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.785011482 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.776158928 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.192380095 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.810411426 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.775505326 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.166424657 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.819728806 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.193427483 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.823562355 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.771018116 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.78237819 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.799928279 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.078429843 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.801931038 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.767190801 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.777828639 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.765514821 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.780103574 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.781843737 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.772716081 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.76963723 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.784038905 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.81404815 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.781170334 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.769176306 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.780825927 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.78852602 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.777726252 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.781125706 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.773574732 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.767613331 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.781408309 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.774417338 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.771482841 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.772281808 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.773246939 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.782731715 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.165629801 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831792752 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.766032572 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.766510338 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.769420699 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.784254145 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.164568544 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.81301809 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.792992442 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.819617466 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.771488303 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.063252133 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.806573213 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.785634488 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.780577144 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.772581355 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.767911852 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.062300622 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.192411087 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.83051795 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.770064958 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.767873141 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.787356754 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.772281146 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.767791521 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.080787286 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.806564959 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787025652 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.892248838 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.783967164 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.802485076 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.768110774 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.773779234 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.820658416 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.786683458 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.803259454 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.773286243 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.785578976 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.788289727 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.768195293 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.783813255 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.784116708 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.770750261 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.778732817 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.769969267 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.820564231 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.785673159 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.785335874 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.792846873 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.893632596 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.768680377 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.064086635 seconds)
done (took 278.886576356 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.854734329 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.770590695 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.863642343 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.768446704 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.863049518 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.845596094 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.771157844 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.769118796 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.767967679 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.256534856 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.769438643 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.774189073 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.770414583 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.768550355 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.84360119 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.769335608 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.769590234 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.206178165 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.769691776 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.851030465 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.772008896 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.770065124 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.76960186 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.261983138 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.773046659 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.771607552 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.852347756 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.770094598 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.212935221 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.772793798 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.771348094 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.213230535 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.852834808 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.797877809 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.777271641 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.775273987 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.863422526 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.780611975 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.841623557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.842175766 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.868340778 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.804705009 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.770081075 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.770471084 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.77285404 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.771074003 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.770692832 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.803908254 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.771475925 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.77875684 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.206051345 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.77553584 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.778596521 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.771971248 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.770288706 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.79970423 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.771617396 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.772135699 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.853200755 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.772484544 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.842020113 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.264945354 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.256907586 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.771730084 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.772709879 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.771457168 seconds)
  done (took 178.603883985 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.839578733 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.849271668 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.841277431 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.778193783 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.824319748 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.843131518 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.78023951 seconds)
  done (took 14.461890119 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.78188479 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.775014435 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.825101458 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.82429219 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.772252866 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.93060639 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.771241342 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.786136468 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.777260548 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.800911229 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.774496304 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.77251864 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.779781266 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.772267547 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.82322186 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.786637579 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.889043581 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.776789614 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.772514593 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.923160582 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.777139777 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.780462419 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.799343544 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.786762651 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.774779667 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.782366708 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.336290358 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.773309653 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.773306167 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.773764885 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.773337332 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.816248504 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.77355007 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.773408873 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.773324046 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888811552 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.772633861 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.774241721 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.773979575 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.77432683 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.773012308 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.774740332 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.774813519 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.773175308 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.773917333 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.79872408 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.774534665 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.774543511 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.774211956 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.774747846 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.801362781 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.773981195 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.774113501 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.780137752 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.818635537 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.781824498 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.774855529 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.775047734 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.776134898 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.774604186 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.924886407 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.826603416 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.774544766 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.826487033 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.774263027 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.77538128 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.774735354 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.77472819 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86540935 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.776582773 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.826209144 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.774926294 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.9345783 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.800806697 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.776251626 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.780313433 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.781067357 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.776230353 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.776952847 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.786186262 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.77546018 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.779395767 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.784260161 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.781254903 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.774861589 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.890686814 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.91755635 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.775621469 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.780163568 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.784484366 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.775369641 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.821921104 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.775843952 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.776046238 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.834988673 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.893695771 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.805929143 seconds)
  done (took 196.509912845 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.785859751 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.786173201 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.779967601 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.795026583 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.779720647 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.778782704 seconds)
  done (took 12.416127168 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.781830825 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.781128984 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.776559293 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.77675729 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.777725381 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.777796959 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.777117455 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.780549608 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.781347015 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.775727146 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.776587068 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.778417608 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.777794663 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.776167559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.777316055 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.776247052 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.778046631 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.779157509 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.777756542 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.778777782 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.030435023 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.778661636 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.779684091 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.781144136 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.782373505 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.777785053 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.793445613 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.778325636 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.778035159 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.787789306 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.781598225 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.77811893 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.780893128 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.787074784 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.78287933 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.78214777 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.781316495 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.779078932 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.779080072 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.778147704 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.779570513 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.778723113 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.778134394 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.77868591 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.782187364 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.785838148 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.783965332 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.793307698 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.779171758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.780423412 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.78027905 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.778521444 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.780345815 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.779616527 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.783699907 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.788226779 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.783506243 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.778072072 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.779462669 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.783633333 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.783517522 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.782919751 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.782777787 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.782810121 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.785978242 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.780665745 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.78366919 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.783143337 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.780119607 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.778259405 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.780108257 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.779480959 seconds)
  done (took 131.172505556 seconds)
done (took 534.887677272 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.04457128 seconds)
  done (took 8.757525033 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.848663726 seconds)
  done (took 8.623817366 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.329015019 seconds)
  done (took 10.045478067 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.79542092 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.803560909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.79258708 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.786446987 seconds)
  done (took 28.915533131 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.981520471 seconds)
  done (took 8.694805884 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.803486374 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.780327126 seconds)
  done (took 15.360665694 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.857417788 seconds)
  done (took 8.571659493 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.124913297 seconds)
  done (took 8.850847945 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.798435321 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.804767224 seconds)
  done (took 15.338000653 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.78265284 seconds)
  done (took 8.496719811 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.926307118 seconds)
  done (took 9.731634041 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.799967726 seconds)
  done (took 8.578338732 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.836063785 seconds)
  done (took 8.550359813 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.796330715 seconds)
  done (took 8.510449771 seconds)
done (took 158.740586229 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.786563416 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.782434476 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.781573999 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.781802018 seconds)
  done (took 28.849785727 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.811965467 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.814444181 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.815031031 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.825012757 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.816406538 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.814254878 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.807291994 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.808156294 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.824831203 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.815914296 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.816058914 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.81633265 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.812922915 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.819860633 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.816464609 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.815868947 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.825101061 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.815756474 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.808615478 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.816855399 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.781389053 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.826103937 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.816590096 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.780919677 seconds)
  done (took 45.237223934 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.974555151 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.854036174 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.937131227 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.835449888 seconds)
  done (took 9.316586447 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.832964846 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.833875922 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.846441612 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.884620825 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.907769483 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.845188609 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.80686896 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.803941121 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.789030257 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.835078334 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.910725605 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.834227645 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.918848508 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.781495968 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.969038048 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.781638714 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.781875271 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.833645742 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.885413656 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.8986827 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.782378537 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.834412668 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.836934528 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.829725071 seconds)
  done (took 45.980862412 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.783403167 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.791503198 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.790565435 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.784171125 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.785079878 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.784193659 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.7900958 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.786741204 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.805477968 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.785668503 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.784584183 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.784579144 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.790822528 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.785005662 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.784919347 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.797399567 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.798352713 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.784968463 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.789088559 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.791501111 seconds)
  done (took 37.495258209 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.783604915 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.693664678 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.129588045 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.036510782 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.784867093 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.785836633 seconds)
  done (took 30.931511202 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.797646963 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.792262191 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.786962634 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.843256968 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.928437985 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.794353765 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.786639321 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.79718189 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.834606801 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.853002784 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.806604851 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.814818455 seconds)
  done (took 23.553494677 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.785506512 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.787622333 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.786197604 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.798481079 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.797333028 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.792757434 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.794326501 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.786012498 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.798899994 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.804153819 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.792986254 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.797936271 seconds)
  done (took 43.243599712 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861105063 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.658453973 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240832008 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239894488 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307770645 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986793646 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.785185739 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.869005023 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.786112065 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056234634 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.061689114 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973658264 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.028755821 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.621892271 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.789307944 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.246653273 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062440789 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99555805 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807263225 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360343109 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87679725 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364177523 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.421866712 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88140535 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988056407 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.905461655 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.04235175 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.735927109 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833605446 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787952017 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79019672 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.785684507 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057170886 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905176853 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855332818 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791691537 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198561544 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.489500197 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.79277963 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.386183579 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.18524014 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889576149 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789329347 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786865715 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.713578472 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325026205 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875670488 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.789849091 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.486606466 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.785866881 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793052798 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862927055 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.78916791 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.597416165 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469112076 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.052730085 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.786017206 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791164449 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349573246 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747575941 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420178824 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.720395891 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.873000148 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.363528786 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220650352 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.932152364 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.788554925 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789365197 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715909758 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.3640266 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885970857 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924474774 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.804282812 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427309375 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069183235 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.104344904 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82349341 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053677892 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.598683462 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.719379207 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00550366 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.735992642 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714488578 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.636881695 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714180633 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005725513 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815513863 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.365640135 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817873739 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870077108 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.794101934 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80432712 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790444591 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002746955 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.683192367 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789302579 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 3.986156984 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028042974 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8065892 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.872543459 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715530876 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.791295958 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035004781 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.992137102 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.059258039 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.254537132 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863553808 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767820248 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.802650988 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.752380549 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798237553 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.050879953 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839599559 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.742405234 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893037529 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.73247095 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028986702 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777612811 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.888577464 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.060935261 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.009768267 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.113729735 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031969457 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854474709 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797032589 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.789746496 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.435917128 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384486379 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.007611369 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.80322793 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317518901 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.798712337 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.79189633 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725808906 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.427009665 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.072739773 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.860714419 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.004053035 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.788639474 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.0655887 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717011168 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927067699 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.79389063 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.004567259 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.419802507 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.853128655 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039972035 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.059002768 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.060328609 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799862023 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804631469 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884668154 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807815809 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.245597825 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.03819628 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.793795534 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.793888151 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.435257228 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.833094607 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794226645 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.794444309 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319289711 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055289241 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.804907282 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.794389338 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.666401103 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.805549706 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854260038 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795306536 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.795402865 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.313741877 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301027573 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.799937825 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.449731732 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011048875 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797817621 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.419653165 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95903776 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.804983329 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052558317 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848599923 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.720249772 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.492734274 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.493211164 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793706106 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.720691668 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.794221996 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796730981 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799385752 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.982342206 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060091165 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837193053 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.373268932 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.884810448 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799719587 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.797516066 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795716211 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.312731751 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.763174115 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298177832 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934192312 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923752144 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.80665096 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721632659 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.795410378 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797461124 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.794582405 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.741447413 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84681598 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.375770839 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980415138 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043248389 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.200443963 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803922509 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.377673684 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.894915601 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.811703792 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995211409 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320286933 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.901010277 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872286049 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.800534731 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.377014682 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.509873808 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360026384 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076614607 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092838984 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130737848 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.180610773 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.120089446 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.879805927 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021379126 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.316395144 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850266926 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88454981 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73207304 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810116197 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42473947 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129828212 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80490794 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012568224 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077186697 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.055010282 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912027468 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999553478 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826037274 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.628523639 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825966346 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.332955071 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812388057 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.114503643 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983009629 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878304252 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.004386534 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.861849204 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.798141308 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136269899 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832868 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.497533216 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.149476345 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.212396308 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.184743174 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005744425 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.801138066 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.236923506 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137500374 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.98955106 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.920183361 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72576159 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.803345184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.803982593 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.810638263 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.773114454 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.647379792 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.041555061 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.802835162 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023579505 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.932086149 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15820166 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.695261338 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.800987018 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79994229 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039407045 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483803975 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957743868 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.118219455 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375941843 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808439755 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.726023697 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725750363 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.499703323 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.802529431 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764726691 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002632317 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.898929452 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481172104 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.245065685 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112718959 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042958438 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.810353943 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059158667 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064306396 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.29248641 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819383996 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.896459667 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.00882538 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.472123766 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.015408288 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.027190806 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33245904 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017373536 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254259508 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.765094316 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.801691112 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006367976 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.015239861 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.087972237 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957220267 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.510174939 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.811024703 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160921708 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852521194 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.084682698 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96830261 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.887519746 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808773247 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875887914 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803257191 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.806682512 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.805923705 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811186604 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.087075633 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902229262 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.813758961 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876212142 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758403352 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.360327844 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.809510086 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062191869 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130675843 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113851016 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854374255 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.803176765 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810072978 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729241329 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931309412 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.241389881 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073785489 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.919047416 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.936681268 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82200258 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.023934457 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.062305631 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114304908 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075160286 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.684622159 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448394379 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.923739985 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.018907326 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807819644 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.004208117 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011325998 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090279894 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364976521 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.952693713 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996370707 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075213983 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.162269793 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.803347746 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386195911 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.815483052 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215034631 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.831536588 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.095966122 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042447495 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807350605 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922902981 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806546008 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.004761031 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.25353843 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434612043 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134509191 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661064659 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.807848571 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068071462 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113467492 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097429031 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879206691 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810034 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.498092254 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936540157 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.644291992 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.02163251 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.805776678 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007289482 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.513810611 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.807862917 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06713308 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098519665 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.805148498 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.646453108 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807919474 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.807952106 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022473715 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013556929 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044822257 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808710289 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.810872785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.611510134 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070454236 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858454253 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735249786 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.808440663 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852451025 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032766908 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824354835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.320162429 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.505389687 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076156006 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.704505394 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822758683 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221477262 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176153327 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116688355 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.319080713 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017025364 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351693227 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.669303611 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185064917 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.808505614 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.231883083 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188120985 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.808225442 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318610272 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920261051 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.064837283 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123131322 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.822877061 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514207651 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.821470418 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021241423 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164507682 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737913746 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.811183583 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.854060575 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.807783374 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.789721322 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816271976 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.647533843 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228584705 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.651136422 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363965992 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.811058686 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.81232169 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.075226953 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337707336 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919224647 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824741933 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816457865 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.509718849 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.104260388 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05095085 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328950854 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.904601046 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.809331979 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808581282 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.726390335 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.990316236 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.99793698 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082046216 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.167586118 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.919401449 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.808994147 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.016021186 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01174399 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.099172785 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921331619 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.948460818 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925378643 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.748371487 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.513941171 seconds)
  done (took 1622.326590467 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.820079072 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.836659829 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.839908436 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.876456866 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.889594157 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.934221328 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.924574551 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.845171095 seconds)
  done (took 56.709395067 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.822308284 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.972693315 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.815351939 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.812984948 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.815552582 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.811993229 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.966262348 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.822732394 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.816014799 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.816044665 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.812970687 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.812316112 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.08254379 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.831136925 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.812722556 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.811449575 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.379998674 seconds)
  done (took 73.817862802 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.861951858 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.923548344 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.844625597 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.818415887 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.967605593 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.824173982 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.069170158 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.827170541 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.81714595 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.069408758 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.111074804 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.836345906 seconds)
  done (took 89.716957141 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.82625388 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.816738352 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.816632041 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.815567827 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.815676403 seconds)
  done (took 10.844153225 seconds)
done (took 2119.760333209 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.038615127 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.000635543 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.055818052 seconds)
  done (took 5.802617422 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.956251311 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.006901619 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.12149928 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.129168802 seconds)
  done (took 9.963149064 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.119993308 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.2047724 seconds)
  done (took 6.073379917 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.134452295 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.837999187 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.189711652 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.817385807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.818610046 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.820038952 seconds)
  done (took 22.20947177 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.816189949 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.816409808 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.816351914 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.816719029 seconds)
  done (took 9.013717861 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.814745648 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.51272737 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.816026087 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.82604618 seconds)
  done (took 20.717963132 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.963949038 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.932401634 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.963016884 seconds)
  done (took 7.608682502 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.039530014 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.614859332 seconds)
  done (took 6.403865978 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.956915835 seconds)
  done (took 3.706120377 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.84455919 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.086929923 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.303554097 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.333122416 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.395313037 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.647316522 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.148212345 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.041934237 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.254920768 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.27668033 seconds)
  done (took 24.082652964 seconds)
done (took 130.52905242 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.165159907 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.848921346 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.025013203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.179797031 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.061803605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.019335104 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.038623778 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.175258336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.875492345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.85674295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.190663312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.063081441 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.985896778 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.843734728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.984523825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.844479476 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.048790501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.195841821 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.867179989 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.090369118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.045669453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.824847753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.019065067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.842412793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.051827097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.973279904 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.370490421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.850328102 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.006625825 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.385162879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.9786429 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.232162978 seconds)
  done (took 166.691615585 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.822196252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.822569457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.821182238 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.821509715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.376417782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.823957021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.821794869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.822094188 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.243180335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.22490907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.822859005 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.361980621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.822799606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.821657033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.820522676 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.821080615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.383926214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.822242326 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.821217111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.821417358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.820641893 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.19576704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.823248382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.210930081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.383733448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.824565162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.822562759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.82187821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.821950011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.820545489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.823756547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.823192872 seconds)
  done (took 207.867089445 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.820968106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.827058565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.824710485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.823047219 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.8228266 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.825852839 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.824968521 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.821889827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.457688266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.458927787 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.824748556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.824592846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.826506263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.823377703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.823573758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.823987229 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.824254673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.822362226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.823814963 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.825683353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.824530561 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.549103407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.824578699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.555443012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.82437289 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.823430803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.823126554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.824202768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.824706247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.824932327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.824153716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.824749672 seconds)
  done (took 218.851763458 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.067635055 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.821775728 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.823444228 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.760868938 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.822777509 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.822440429 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.798040307 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.080374216 seconds)
  done (took 18.753968723 seconds)
done (took 613.924614646 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.18321561 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.02460156 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.998771101 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.848054232 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.108500446 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.892100264 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.84470549 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.908602437 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.652982051 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.917380256 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.496438933 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.869519833 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.58949495 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.87396652 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.9671666 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.904440933 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.427044715 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.536121019 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.019301241 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.923834209 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.017993159 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.752245654 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.926690493 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.691176471 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.617791842 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.811378594 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.858850334 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.431130344 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.858427736 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.010882865 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.511983031 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.090915816 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.861050914 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.843070487 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.899829382 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.877710814 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.04359575 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.855628295 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.968044226 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.554082554 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.93091763 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.558767377 seconds)
  done (took 100.714130919 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.835104427 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.828827029 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.830015437 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.829691865 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.838254562 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.830903891 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.830386026 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.830838703 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.829941082 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.83025528 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.830255083 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.839045932 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.83049482 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.839474244 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.830857455 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.830530426 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.83096842 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.838834619 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.831539729 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.831163049 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.831317843 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.830852914 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.825874357 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.831312696 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.830920675 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.831512699 seconds)
  done (took 49.398388217 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.826237678 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.997488447 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.069358412 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.849196228 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.829305974 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.832997609 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.847669774 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.833594787 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.832946371 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.832254006 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.933302814 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.834270677 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.846691726 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.069113567 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.845060038 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.825775659 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.826297827 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.828738018 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.001501299 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.845136255 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.847641828 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.831615259 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.848394526 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.84294418 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.831900939 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.830032488 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.832964689 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.273192562 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.839036457 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.930073154 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.876373369 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.854469312 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.21054441 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.079713236 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.88503706 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.837244123 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.828400099 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.936519164 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.835599627 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.830010685 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.847378934 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.835192102 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.072283821 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.352762815 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.844805651 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.828580439 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.28306413 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.943479963 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.872277271 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.841329691 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.07413415 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.847199315 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.831351941 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.830810877 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.867997616 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.837101024 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.831240202 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.139986247 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.844506605 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.849641059 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.834377736 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.833010252 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.007209125 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.839471486 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.997407871 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.842049369 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.83720286 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.833003107 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.074262889 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.848273322 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.368242693 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.845058112 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.828807325 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.933234702 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.003876572 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.310651286 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.843549235 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.009570824 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.229861926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.856261049 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.839306042 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.265472372 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.859002755 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.840360819 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.831649644 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.832909368 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.830281532 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.887227645 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.848153555 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.284558453 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.366318914 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.1575465 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.858685303 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.847799183 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.833426166 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.139096287 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.839213132 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.830718088 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.064895145 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.370675703 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.849863119 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.843180804 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.348629019 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.851893896 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.852856835 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.844036003 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.081490393 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.852608441 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.876952756 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.833105947 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.842210723 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.837414595 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.854874738 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.843309533 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.834554391 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.33905536 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.957220552 seconds)
  done (took 227.672254259 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.836389162 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.837998339 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.833124542 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.839378113 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.834554957 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.835770947 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.833642219 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.834250296 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.835452232 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.834544563 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.833766507 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.836277212 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.836680734 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.838797765 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.841658774 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.837571428 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.440844936 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.836818711 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.835898442 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.835569425 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.47597257 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.841353097 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.835444582 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.836202134 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.835311387 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.835265787 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.842202917 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.839650243 seconds)
  done (took 166.439614213 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.834970803 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.950327401 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.854577595 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.866646809 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.841529961 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.835325678 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.935496902 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.854050365 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.844103143 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.836506463 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.836016321 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.897992744 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.847997142 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.93390529 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.86900674 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.942773591 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.942121962 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.84274332 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.835170034 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.835769243 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.86642235 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.844416396 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.89698275 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.963365764 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.855677802 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.951216816 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.85557989 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.836629518 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.839012622 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.951373956 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.855270108 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.89749222 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.868459684 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.856132892 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.957081289 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.956521146 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.940696858 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.940110822 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.845831372 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.836488961 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.837302885 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.837727712 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.953149029 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.855935383 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.841340591 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.955001572 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.856236406 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.837345489 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.838146011 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.83723624 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.851560593 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.856534677 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.903915152 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.970402425 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.874147516 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.861755309 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.937812761 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.961951436 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.839644453 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.937363515 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.84402422 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.952802323 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.858333006 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.839000113 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.839571743 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.841530934 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.867510321 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.943110194 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.944918098 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.84665005 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.936749554 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.873569564 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.846555674 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.839486953 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.838923227 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.953986584 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.957397136 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.873505586 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.877086896 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.870938795 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.84837599 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.839471567 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.840642363 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.857624307 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.844004944 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.953350531 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.958311684 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.843422036 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.839038589 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.840042418 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.839752977 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.866596555 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.96308302 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.87692715 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.944401743 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.906813107 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.91504737 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.853618111 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.852753786 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.846613457 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.904311978 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.854780037 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.851740487 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.132709861 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.90192351 seconds)
  done (took 199.488058088 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.208785064 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.890195646 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.896936909 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.161786724 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.198880566 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.781758043 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.886878991 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.888062006 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.912799194 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.073861052 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.957116841 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.90718555 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.877147973 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.864184796 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.887233594 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.913422717 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.896211578 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.231719854 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.110350939 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.027240256 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.877821724 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.173832928 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.207435366 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.464875719 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.939249909 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.27003969 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.458362024 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.021529578 seconds)
  done (took 60.762891053 seconds)
done (took 806.231517501 seconds)
SAVING RESULT...
DONE!
