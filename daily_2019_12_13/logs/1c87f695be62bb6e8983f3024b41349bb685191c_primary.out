cset: moving following pidspec: 23134
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.387961429 seconds)
loading group "string"... done (took 0.563721811 seconds)
loading group "linalg"... done (took 7.241952696 seconds)
loading group "parallel"... done (took 0.159024205 seconds)
loading group "find"... done (took 1.16839922 seconds)
loading group "tuple"... done (took 1.827824256 seconds)
loading group "dates"... done (took 1.329723673 seconds)
loading group "micro"... done (took 0.222081793 seconds)
loading group "io"... done (took 0.949996005 seconds)
loading group "scalar"... done (took 37.869131799 seconds)
loading group "sparse"... done (took 11.79212626 seconds)
loading group "broadcast"... done (took 0.929193239 seconds)
loading group "union"... done (took 12.104969928 seconds)
loading group "simd"... done (took 4.40388011 seconds)
loading group "random"... done (took 9.051622212 seconds)
loading group "problem"... done (took 1.829556041 seconds)
loading group "array"... done (took 20.782210745 seconds)
loading group "misc"... done (took 1.677118851 seconds)
loading group "sort"... done (took 3.325838801 seconds)
loading group "collection"... done (took 17.281304589 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511086611 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125331951 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11839468 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118831548 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146482632 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111696909 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122379188 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085158162 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.784774693 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147194437 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116678794 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.427680324 seconds)
done (took 5.116379986 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174611659 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082043667 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082066508 seconds)
  done (took 1.289706224 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064541334 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121015491 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065310226 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065621722 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065870769 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06570938 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065120127 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065241508 seconds)
  done (took 1.640123727 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072116009 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06798956 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06565066 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066941392 seconds)
  done (took 1.399603456 seconds)
done (took 5.705015422 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.784159401 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202325507 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187260907 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.414070837 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131560883 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15782755 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639213626 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.303660087 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188496218 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080595408 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107331258 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.324857052 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110084417 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634272866 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076514188 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089982162 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13694183 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424700007 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066787703 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081319446 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08805928 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127659226 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087608851 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073331286 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146013847 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067045552 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135863785 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079875452 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065306008 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.211129555 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171413295 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661888064 seconds)
  done (took 10.221695225 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09555594 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095932118 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068517469 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122254224 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098458033 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071111299 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070809421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067442775 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087906143 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126657548 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089455731 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1024073 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067118214 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069786799 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086797974 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207135165 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082320141 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082253959 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070427313 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074961069 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105647149 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080232767 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078811786 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078894476 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131304153 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182817484 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099398679 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099272966 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068790503 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08139959 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115004752 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127608561 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067220582 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067912061 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126161827 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096007865 seconds)
  done (took 4.609402257 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.001438103 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144327338 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089239875 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083724877 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133831478 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063341361 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108680449 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065011302 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080397367 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.208042213 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.440421464 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094263786 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.590690734 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064092405 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10971041 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102706225 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066746201 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067141151 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06617743 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.480300051 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095142678 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10667825 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080653995 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069765955 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068540583 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380346712 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067576107 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063702258 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068538076 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056539881 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062983855 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124844906 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067453175 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.935102555 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125231814 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06548246 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10011543 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160628241 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.222549952 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143713833 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068483606 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064250784 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.152542123 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069624968 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064334144 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082962792 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102453844 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112687304 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064324807 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065441648 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164209251 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063590534 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078923668 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.644429494 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154387704 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078981637 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06601338 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255865325 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087376638 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069170598 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064635695 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186681494 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13286592 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066994087 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066385161 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067525044 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068308384 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.36996491 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068095866 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.113498957 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069568835 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076601605 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068407359 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068967217 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072400627 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07213518 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086990418 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065537229 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074108927 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065550089 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065746017 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066686977 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082663368 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.377316988 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06639585 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067602246 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064971615 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08868386 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096212486 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066237903 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065235624 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099641029 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067555621 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06547547 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106834627 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067384141 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083146617 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069195178 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112480655 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065250887 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.212374651 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066999046 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095758889 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069311329 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09786945 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079351451 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067375463 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420800125 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064115433 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064625336 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068030297 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064575985 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066808685 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065755603 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078629032 seconds)
  done (took 21.291076856 seconds)
done (took 38.248353354 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235195354 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076570397 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076327386 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077828806 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07375429 seconds)
  done (took 1.758776582 seconds)
done (took 2.955938001 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122598407 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099565189 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063535688 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097096273 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06369141 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100891747 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100097328 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08158426 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099621458 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063557032 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09678961 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063478496 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063999969 seconds)
  done (took 2.336570591 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083461606 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084553331 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069785759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082503743 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062937067 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083085177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081330243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088579868 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081597178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07224312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063281159 seconds)
  done (took 2.046597301 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081644138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083949393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069636561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082135417 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063834642 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082042893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081229119 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085652249 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081343156 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073970508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063720522 seconds)
  done (took 2.04016182 seconds)
done (took 7.609692451 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076533266 seconds)
  done (took 1.260315378 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.585332926 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.091217188 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080638094 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109937685 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189377619 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117022973 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.269638738 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086011123 seconds)
  done (took 8.894024125 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088890799 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069137041 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08259799 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070031375 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06910112 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068681955 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068216237 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067531716 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070116579 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071098597 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070541252 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067391163 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071122233 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072600375 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070902217 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073476535 seconds)
  done (took 2.407757955 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091106994 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09031542 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073008168 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074482663 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071538915 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071116035 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073670015 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07253511 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070299375 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071938331 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073844133 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073021327 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071018109 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064105549 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073211938 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074587321 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069953991 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073535126 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07368218 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074454141 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073967499 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063207983 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070660715 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07300479 seconds)
  done (took 3.056075242 seconds)
done (took 16.808750771 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113501661 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070399845 seconds)
  done (took 1.37469794 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080329312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082014983 seconds)
  done (took 1.361182624 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081959714 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064777696 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089316722 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077077734 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065552602 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064867365 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086569851 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065043668 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065016314 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064798956 seconds)
  done (took 1.923088461 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068437247 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077337885 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069917627 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080599634 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072292379 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063531942 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070820114 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066614984 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07644166 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061619203 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070481214 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082179107 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070020362 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083581635 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071499502 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067951371 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070275176 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066500141 seconds)
  done (took 2.491523977 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064628431 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066291335 seconds)
  done (took 1.33508166 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066135677 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062528475 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065708666 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065467144 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06239253 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061540086 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062632589 seconds)
  done (took 1.647381495 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383178674 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11230907 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310679447 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070425378 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080805256 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256878723 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065650692 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069660652 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069515011 seconds)
  done (took 2.664021548 seconds)
done (took 14.000293624 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078461417 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085859387 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096136819 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.373974629 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090715065 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065371708 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113589904 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191076756 seconds)
done (took 2.307678063 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212520209 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637229893 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403022736 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203895289 seconds)
  done (took 2.450796241 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342222933 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087959477 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058193916 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065943038 seconds)
  done (took 1.767689086 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066301825 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068867336 seconds)
  done (took 1.346019619 seconds)
done (took 6.989141604 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066034499 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065178557 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062882488 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065214911 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063376076 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063902853 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06571506 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06575649 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.065588654 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083609768 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06810551 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065423966 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063505315 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063455558 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065601603 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062928611 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063895699 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065788465 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06607121 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063213286 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066093467 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063119948 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062973986 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062970561 seconds)
  done (took 2.817632431 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083759625 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065783693 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070883775 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071235004 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068813415 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070264544 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070222646 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066412828 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070864098 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067676557 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068695101 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068285637 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068014436 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068645482 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067462627 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068768559 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071193809 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065258093 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068095176 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068992504 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070622688 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065737488 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069102715 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070654827 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068644189 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069593909 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068055236 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065488409 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070460006 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068204061 seconds)
  done (took 3.295782847 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06864894 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06264083 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063550966 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070188239 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063067341 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063784314 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062975027 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063542535 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063599752 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062708641 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064152402 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062406327 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063049498 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063923011 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06386041 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066643443 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079237522 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063154422 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062869475 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063730481 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066605877 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063867845 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063642304 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062614255 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062891566 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062260048 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063593391 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063288584 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063853988 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062656291 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066567471 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066969595 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062743725 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070261067 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066962242 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06275473 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067255236 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062924329 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06363887 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062638408 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063351251 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063189725 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06305682 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07009253 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063272192 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064519895 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063162409 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064595113 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063192437 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065515855 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062878368 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.176039517 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065243554 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064366613 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067083993 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0621816 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063098731 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062182314 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063335067 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062257617 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062321169 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06262671 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065161269 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063138159 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077816583 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069670379 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06261557 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064236426 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063274237 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06504195 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063951721 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076581657 seconds)
  done (took 5.996996928 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089427289 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086883442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064818392 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064588602 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060523296 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063125094 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069148561 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063037323 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064656042 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081269944 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063558491 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064704411 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064581306 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066766551 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063631277 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064371686 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071714307 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060932347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06277868 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066905469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063990771 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068993797 seconds)
  done (took 2.722843885 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154676343 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069843619 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104561265 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07487724 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069519188 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074409091 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069483995 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069932823 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069056656 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067174716 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066608399 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069683127 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069316083 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066404761 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066797296 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066415075 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06892746 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06684878 seconds)
  done (took 2.592750866 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076349546 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065080394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.0867729 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065431586 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065288354 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067885593 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069130344 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073388597 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068053521 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065146996 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073854182 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067976827 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067496197 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065229946 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067354469 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06529838 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067507472 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064926594 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073448563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069525458 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069291564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072863929 seconds)
  done (took 2.75587647 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078901257 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067255527 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080016387 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067726313 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061567198 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063514743 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069565739 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065138624 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069387273 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067352978 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064605982 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063436639 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067878489 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065248696 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067909977 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064800841 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067332156 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064967663 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067185987 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06071517 seconds)
  done (took 2.575618745 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085839841 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067684637 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067044111 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074120939 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066485175 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066832601 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074126561 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066862372 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066408707 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087039054 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066182654 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066263864 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074578816 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070899774 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06660691 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073330024 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07329423 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073807785 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066008089 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066546974 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087058848 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066429766 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07364391 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066429983 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066474471 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067056973 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066140425 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070333651 seconds)
  done (took 3.215569836 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065176927 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065625561 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063932588 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063472712 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062476756 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0624087 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062288796 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062902406 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065045501 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062955989 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06514686 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065382686 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065167236 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065052265 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0651857 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065828507 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065504327 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062934236 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062790035 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062960841 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064901355 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065909568 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065375142 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06315016 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063033781 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064759257 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062591059 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06273894 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065605728 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063263292 seconds)
  done (took 3.159167317 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075284421 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07214393 seconds)
  done (took 1.383500639 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061850383 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079048349 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062124268 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069414213 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068258072 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065914316 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072540222 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069548396 seconds)
  done (took 1.781502218 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081311919 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077098461 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066639369 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078837689 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076130116 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082858372 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133793513 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066539046 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072639317 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064210265 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079651237 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064790315 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071856064 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066105142 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071366361 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072089309 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063319327 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071033073 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067398947 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063985498 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066139908 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073794109 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068131249 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060512012 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06679073 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087523384 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076613946 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065346209 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067871039 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072839456 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07097449 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059056429 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065112753 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065661726 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063312039 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074762062 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079881612 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068215039 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074287136 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066009848 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074872206 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060212311 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070413302 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071816081 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075260761 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065354094 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065621206 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060207202 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062958186 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067631532 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060117178 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067739753 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059945197 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071888783 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068978993 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076278414 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063684875 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067232608 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068018646 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068402868 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071929876 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067481564 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069041862 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064933454 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075460839 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069998498 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073708046 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060282304 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059456571 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063077662 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075029299 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087862607 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071600602 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065741773 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06591183 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063071553 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069191078 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066421065 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070727844 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07207705 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064974198 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070429162 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073205102 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065397261 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067803307 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072785728 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063525081 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067918678 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063703306 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081575758 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063984191 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063340069 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063223999 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075852557 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068954562 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064842514 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063622824 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072578527 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059535201 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065621064 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066115297 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06635737 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075191367 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068985999 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068787942 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073105466 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072080016 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064483182 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066814134 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061308904 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064667079 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063384057 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071902949 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058397558 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067066921 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065531909 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065216426 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072489318 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062141922 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064100089 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071252309 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.06943569 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.190453712 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063356391 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069771025 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066700175 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069456324 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074313161 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065241003 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060611418 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060691158 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069072679 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065290007 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069543637 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070133877 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06850538 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059367662 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064675662 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071377614 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075283104 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065836252 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066532637 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07218033 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067112291 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065086288 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073795707 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068513963 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065648488 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071972462 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067399082 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060892749 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069084356 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06874282 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06440238 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07072621 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069268725 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068035512 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066279846 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064757557 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07198834 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06589784 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065225513 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065806672 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064409514 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076479051 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067588365 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060254449 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063167047 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074639495 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064114821 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065392638 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06425327 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068227842 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065633679 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06365541 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065211789 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06828676 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07562961 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06939153 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066461078 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071430449 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076815129 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06517815 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068332213 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06472383 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067081599 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066395813 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074330449 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071590986 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069846989 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067920539 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06225318 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070094159 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073412218 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065074252 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062909035 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06474409 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069160468 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070708135 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06892174 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06577617 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063731012 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066064868 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068269618 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068271378 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065225163 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064517987 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070996069 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063375438 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071440847 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065852707 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075854641 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068631285 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060371079 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068150687 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063498648 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071476509 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060282314 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063435995 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064994032 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066135794 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064327003 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067911376 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059943018 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072711606 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072878334 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066511164 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065081673 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065107887 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072433736 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06662064 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0686831 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067776044 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070220473 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074892713 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06376578 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067420191 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074408393 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06364638 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058400469 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069149679 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062790863 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062537969 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063289732 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062165846 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067702649 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071452159 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070199751 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.188375596 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068508918 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064777195 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065628745 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061905999 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070733485 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069280772 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066935112 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073167199 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066410037 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066433903 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070171422 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064752568 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066066768 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066618781 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068423275 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066683653 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067560961 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065520899 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06871528 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065384186 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063199654 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067761024 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066084208 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066541637 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071195286 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065391924 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066252617 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067942241 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066744583 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067036977 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066358365 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06512424 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068372802 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066139469 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067012994 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068250459 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061252864 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072548114 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064864021 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073515229 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065663137 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062313316 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072429293 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068362179 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070805656 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066244887 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065779545 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067277847 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065362181 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068778086 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072629647 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064467473 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076981937 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074372414 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066060709 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068839156 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06644452 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067666026 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064658606 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066768109 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065645358 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06587783 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064834856 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071157035 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068155933 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06597521 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066782325 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066860286 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066413869 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066914451 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059434893 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065328521 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065043448 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065321199 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075049679 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065642678 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065067727 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063868408 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066102833 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064042262 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062034616 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072478233 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073327034 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065661494 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072131043 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065099398 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066863117 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075977844 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059502346 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06395029 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063151164 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063293586 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072905325 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065526414 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074569727 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065831581 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06476903 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062249157 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066296217 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064118586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059869431 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062756659 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069050158 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064525973 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064427117 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065351414 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068639436 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066173489 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075032086 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064581276 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065949767 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064978386 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061944156 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063867041 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063572915 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066899079 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064214154 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062474155 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061298764 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063410118 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064730227 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065735988 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066186441 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065623179 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070964982 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063554331 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066677082 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066746031 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059139231 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200157992 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066324043 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066153795 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066046926 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069696567 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069393246 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067344301 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075161096 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065261012 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066187713 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065950603 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063817923 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065491872 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065598334 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065797785 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065617422 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067086838 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074032674 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06394608 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068589533 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066570421 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066994558 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072521105 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066920917 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068154881 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072988214 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06626767 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067742408 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073035857 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069028738 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069823403 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066954442 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067665189 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071808782 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065513246 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072371224 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066720919 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066976827 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067434755 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064503184 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065467969 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065773502 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064528298 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071672238 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066216688 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064810792 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065064937 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063328074 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06660445 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068716486 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073838901 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06850422 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068464835 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060684609 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062626688 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066607392 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063327579 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067185312 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068584885 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071721872 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0677041 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066120586 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064747596 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074411908 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07173462 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070261739 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063741773 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068976764 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066897377 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068523048 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066251689 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066175168 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066480051 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069949999 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067192797 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065255266 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072674165 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069104004 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066440747 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067595236 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066995747 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06615529 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060325296 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066097432 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067170201 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070034782 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067578573 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065661794 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076085119 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063336186 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065539894 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068233175 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065043943 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069635964 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060650317 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066789359 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066267983 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0660119 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060297338 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064570377 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063335868 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067892395 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064376655 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060415821 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076464201 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074434252 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068823071 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064320745 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064035929 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060501195 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060827852 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064797577 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066285656 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066819779 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075086947 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064918069 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064826047 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060238292 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064829684 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067906515 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06762244 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061801168 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059731438 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063944933 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067587232 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070189201 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062793496 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063919399 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067326971 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06646006 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.195428245 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069492332 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063537495 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070234056 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078436943 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066304913 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067391646 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073070411 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074047822 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066520866 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061733992 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066679104 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069648294 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066834676 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067233825 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067300032 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081454875 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068656584 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065258231 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065707691 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068711071 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065636216 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07415101 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066825597 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066296419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070975817 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067522159 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074692129 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068555026 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074418019 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069010457 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069154012 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064425895 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066624211 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064633112 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065015995 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066387836 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066135589 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070435395 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073212858 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065415604 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07643993 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075521282 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068765609 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062374747 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065255471 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065259631 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060893648 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066603938 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063584028 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064535954 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063407227 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064631581 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066765133 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071190633 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067501429 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066332391 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065619602 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059471466 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068659798 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068251575 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066852789 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062401612 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065784502 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066236527 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069381804 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069219891 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063779262 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067224091 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067675409 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066877254 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060778353 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072435783 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064362081 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067381291 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064695299 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06521198 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066370055 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06897548 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069464522 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066577512 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067702251 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069762132 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06696419 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06274945 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062866749 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070473547 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063483669 seconds)
  done (took 42.00738903 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100183311 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062807686 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061456119 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062232775 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072133724 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062350094 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061043737 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062408605 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062013681 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065023503 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061080562 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061357586 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070089661 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077184454 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072554794 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066009591 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061574813 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062420148 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061067529 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062033961 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06945224 seconds)
  done (took 2.734249535 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072885001 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076871437 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075676765 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081794542 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070114277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070318156 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074645395 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069698255 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077560003 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07183506 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077750012 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069622982 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071398464 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071568207 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071666885 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069894873 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077501953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070062994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069673183 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074652431 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069598339 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07414864 seconds)
  done (took 2.91863949 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066386235 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065456742 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067220897 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060977299 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065727414 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060736585 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068597963 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063186304 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068418302 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064788044 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064383423 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064936667 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067014019 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060485188 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065378687 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063490585 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107203446 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068699754 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06505391 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067332669 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060590615 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067343371 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060420345 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061561653 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065026789 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068685548 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065795648 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063094337 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065152293 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064905033 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064781122 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063216389 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066892927 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065278808 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063976037 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064050465 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064624385 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064874652 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060054074 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063189301 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065802599 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060719648 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065132445 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066244575 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063396571 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062401047 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067118248 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064748981 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060656315 seconds)
  done (took 4.518669649 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077774811 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107933999 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066265512 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090731617 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078736692 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072454975 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069511779 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088796464 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062911059 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063276756 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08013416 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077567568 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064763734 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069386497 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071893381 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064295371 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066488396 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063629745 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068133371 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063625395 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06815357 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071622212 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078656396 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077104424 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06882558 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063898632 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063459486 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06864158 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076681331 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068866122 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06899554 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069435555 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078840932 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06944526 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063540806 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066723595 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080651046 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064491697 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067239837 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062510256 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067048654 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068882536 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071714971 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080877823 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064986657 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069457925 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064375318 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062206734 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076455538 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066955298 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072632543 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07830223 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06859697 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06523879 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068868465 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079274068 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064361394 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062832922 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067451778 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076165529 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062427536 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068538302 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077315595 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066682548 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071321667 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078074034 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069209862 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068052707 seconds)
  done (took 6.278144907 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074847908 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093854688 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082254799 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081931027 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074701663 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074421406 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074494268 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074816366 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07422175 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079129495 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074943952 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114645418 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070085875 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077293567 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074857942 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074699574 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074981073 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074949945 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074654126 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074419246 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0746552 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081777901 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074857126 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081499243 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078577579 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069876682 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074140605 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074602552 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081713412 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074384927 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078453644 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07451028 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083883293 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081824284 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077982482 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074034069 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064183097 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074457676 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07434779 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074701032 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069803501 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082030284 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074263652 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069419019 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073752342 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073692642 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081615008 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078323407 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076609135 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078099873 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07404384 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081447716 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074611174 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07455107 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081556708 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084879816 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081601139 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081844412 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074274567 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081854963 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081648266 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084295501 seconds)
  done (took 6.14468374 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08223031 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073090479 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08137831 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060569751 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06341773 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071031365 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063460194 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063515836 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072725178 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073232245 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075329899 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071419603 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073643512 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075212701 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071646467 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073454273 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070817641 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070503473 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073173707 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071071811 seconds)
  done (took 2.766903022 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073397949 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081782802 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066522673 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070747202 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069028257 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070470122 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067606089 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069015565 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065906691 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068659032 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074742027 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074837322 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066703632 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070528389 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07506553 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070512581 seconds)
  done (took 2.464676648 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082399366 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072182135 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079188298 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065834009 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065684766 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061319157 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064674869 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060469271 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061483421 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077321007 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06478669 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076387366 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065208877 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063867493 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061965423 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070103553 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061047559 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06191913 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064892101 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077467738 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068488322 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063035593 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06782777 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065002046 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067248692 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068978686 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06401165 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064851109 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06206376 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064555236 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067804569 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068546274 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061941224 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062594461 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063301637 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062328902 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064931141 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064932641 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070009804 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064978775 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062500827 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066603766 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064468064 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06536424 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06142577 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064808354 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061140466 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06661822 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06216772 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067511351 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064875534 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067151791 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065340539 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071842874 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067827312 seconds)
  done (took 4.974996328 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078380686 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069372081 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061056605 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062978134 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06877672 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066741658 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06852339 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066067206 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066635458 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063157966 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066334431 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068116241 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066382898 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069109353 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066962614 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068896074 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06078118 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066189551 seconds)
  done (took 2.544822641 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07053684 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064827715 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072551036 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065312206 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065494059 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067579986 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060872956 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063479194 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06426798 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065429947 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064882742 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067944144 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063716808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067328082 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065322418 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065244413 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067586227 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063417834 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064780512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061028158 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067290118 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063575358 seconds)
  done (took 2.776498058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093086669 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082923098 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139683646 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078161067 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083415817 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070126382 seconds)
  done (took 1.883733625 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090450653 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099274094 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065861959 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068539819 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074808125 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068593761 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068257846 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06884945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076607242 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075197252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068819562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077071539 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077179192 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075969973 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074497046 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074247192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069311963 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068919985 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065204876 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081958517 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069081605 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077456079 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069352492 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068859328 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068903897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076202777 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076878071 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074772102 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068362849 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077039722 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074563695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06962979 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077567771 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074543308 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068298836 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077116071 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06874494 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082487436 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074566171 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076186333 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068178557 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074977611 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077445956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073209437 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077208583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069408873 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074029641 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069050331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069225589 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084748325 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074733826 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076588035 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077400793 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077940461 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077683862 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085448798 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075349657 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076987631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074723132 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075511152 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076437001 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074812065 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076889652 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074808758 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074734963 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076370826 seconds)
  done (took 6.264141955 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102933964 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065969917 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069823831 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075995337 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076337434 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069506197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069617921 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069428536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069175751 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06625804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107928629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069844511 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076526801 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076602645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069383598 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069847607 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069295308 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076533779 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066456076 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084789463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06957807 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076481852 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077061448 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077015475 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075514897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074985975 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069104606 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069365243 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069683438 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069530183 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073661247 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069457843 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077028196 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066282863 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076955949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069697711 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068971363 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073457916 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06920584 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074530028 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076721246 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082344348 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069124914 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068480558 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074689353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06905266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069460826 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065906005 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069118827 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066356303 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074774534 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07497056 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075293315 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075857494 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069198469 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069053542 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069075726 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068931919 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0692616 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074363906 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076385722 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069145312 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084681978 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06896448 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068868983 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076876482 seconds)
  done (took 6.181440318 seconds)
done (took 127.964503402 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184035376 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164325656 seconds)
  done (took 1.682219727 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067846434 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097078183 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076138607 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128258611 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065485937 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099152041 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098272366 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077508804 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065305934 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065475761 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065021868 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067487293 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130312601 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065501113 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.064969522 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068204895 seconds)
  done (took 2.647867407 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098126271 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161370338 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102336684 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064545988 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099088474 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071753746 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064081078 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073963438 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070643633 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064856312 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072204878 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069734967 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064515569 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069889152 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070068468 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071929813 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064179002 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07183629 seconds)
  done (took 2.773717926 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098584737 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089798116 seconds)
  done (took 1.540337274 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160771611 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105808099 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145833039 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.355077007 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163582783 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150837678 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14612226 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144510061 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119621455 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139184797 seconds)
  done (took 2.979524376 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09889402 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15344513 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265774286 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116549722 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071979262 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09290259 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117039687 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077478488 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079386807 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079122957 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079407478 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075005772 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098372939 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072661948 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073098987 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075777721 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102557306 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072174739 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073914304 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075374246 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099730233 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064980851 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072635432 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071642718 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076263406 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076109549 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065156274 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064859797 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075450833 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074337655 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075822601 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092266454 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076617802 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104611218 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07026909 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106276657 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075863598 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073158696 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074087979 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072868303 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077276821 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077409957 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071799731 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076033762 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064880047 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075705206 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064982775 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065134816 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076870534 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066413257 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07679608 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075955413 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105101561 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067457161 seconds)
  done (took 5.927750814 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103389118 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104522364 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070789813 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111990344 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101585651 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071590281 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102204487 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094991446 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103181341 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069891958 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068086367 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069829328 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080969217 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082404602 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113840931 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106417999 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073376391 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070792703 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105364336 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104320008 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068002044 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09627908 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090580863 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103170663 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06761284 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069679732 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067556028 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069366751 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07614748 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077601792 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069008759 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079936762 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083972781 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076988949 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066670729 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067480869 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067751015 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078550224 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078176423 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077941401 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077026701 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067518498 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067485995 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069168472 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069168159 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067055626 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077814982 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079166948 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077978269 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068673845 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069576621 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067981002 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068999424 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079268961 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076713438 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079784309 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07893713 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067505599 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067372391 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071967602 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079792807 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078163315 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078509059 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068582227 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077906371 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067918512 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079904364 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083385611 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067522701 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069647358 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06812779 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068844564 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06908386 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076263835 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076916929 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069060525 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068916156 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067518727 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078984893 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077444766 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067805599 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076090839 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066646274 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067917686 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069405907 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068932249 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07654874 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079388799 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069376902 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06763577 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068540995 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067984704 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066454867 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076416031 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078992507 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077934536 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076673298 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06762971 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076141042 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075765336 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06821506 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076708787 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067349644 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068565563 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067546613 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076034289 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074678965 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076746835 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.198798051 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068420219 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077326259 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080654268 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068765638 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077899267 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079920332 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080105668 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068043044 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081629701 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068424321 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079466838 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069271079 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079127079 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068701784 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078594731 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068765205 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067261996 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068700613 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078231198 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072550846 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068578042 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070149144 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069597037 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078157963 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082102338 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069604117 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077927006 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077789331 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070386412 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077977354 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068971419 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079351448 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070225945 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069409746 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067472786 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082153546 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06907354 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067845074 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068939734 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079746344 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067976081 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080051394 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077341504 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06842913 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081407378 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079922693 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076811925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07966768 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069464904 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068587384 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068434865 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069312265 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077546091 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078480497 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070999178 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068659543 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077809606 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078770972 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067035201 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077616993 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077055866 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077697387 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068125441 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069342169 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080380855 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080162833 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077799273 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077491007 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077518419 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068571113 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076550298 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077715958 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0681979 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083978609 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06794202 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081751533 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077961788 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075988614 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0785337 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080464364 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080053018 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079234245 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082882427 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068009234 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067773272 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078581897 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06751462 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068775326 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077629946 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069220228 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068494693 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081992755 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068133896 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078679572 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066789222 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078259497 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066024649 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068297036 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080833478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066271791 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067349839 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076447817 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067320555 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074508932 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077148687 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.074684577 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065726493 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067691712 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208682857 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079005011 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067920922 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068656182 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069148736 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078498646 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07713323 seconds)
  done (took 18.491222687 seconds)
done (took 37.397662643 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208416135 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151432526 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183522814 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117602338 seconds)
  done (took 2.114617658 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115320161 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100346243 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092333769 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064450551 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098385076 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06440983 seconds)
  done (took 1.923119775 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307327553 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208874156 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187224207 seconds)
  done (took 2.087698681 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199871831 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188322934 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420282546 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261712436 seconds)
  done (took 2.563035579 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141376543 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087461459 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066438227 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082870903 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131669166 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158658004 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098861455 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123871129 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078096252 seconds)
  done (took 2.406061854 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147470716 seconds)
done (took 12.627660646 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097468782 seconds)
    (2/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.209486838 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.247164826 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.223424652 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207517988 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.170927439 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.204646953 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071956321 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.188416283 seconds)
    (10/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.184580744 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077353939 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072786149 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105612604 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159729928 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.232593645 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074661883 seconds)
    (17/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089391717 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069623236 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075025775 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077785492 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.197229971 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102765576 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.203781439 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163610949 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.154764772 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089271962 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071055146 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090159668 seconds)
    (29/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187862063 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.202666495 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097180147 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17269059 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071550617 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153065484 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072789087 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102916453 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087825173 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.178740054 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110822181 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074242376 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216560281 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139519321 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.126902325 seconds)
    (44/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.197859667 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.196278151 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072723575 seconds)
    (47/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051179202 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071923788 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075063961 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174749527 seconds)
    (51/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070736863 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145976029 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066226794 seconds)
    (54/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049967734 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075154236 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071035153 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152717367 seconds)
    (58/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108240577 seconds)
    (59/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076895556 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050235117 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140896043 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068373527 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050302249 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072242246 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110854241 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.111810884 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090516139 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06368391 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180237234 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175039871 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068437333 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080357844 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070390571 seconds)
    (74/309) benchmarking ("sort", Float64, false)...
    done (took 0.128814902 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071135435 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.211860116 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070641658 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.052758743 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.159451892 seconds)
    (80/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109470122 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05109699 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171918616 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.22195606 seconds)
    (84/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.108320889 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074880945 seconds)
    (86/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073066052 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.066255333 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111691236 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182570647 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109123002 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064751487 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067048196 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070425024 seconds)
    (94/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051459518 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089717276 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066036581 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.178143363 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066719079 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073607378 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067104871 seconds)
    (101/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07603519 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072920822 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091338181 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051267952 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.049900814 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064477791 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050535636 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.11034107 seconds)
    (109/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050141086 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087508444 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073780174 seconds)
    (112/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052268809 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072151079 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.062565001 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073734448 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071986935 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072178479 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086691969 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.206073594 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141033683 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050218464 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216122423 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138810858 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050386552 seconds)
    (125/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053107741 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074571368 seconds)
    (127/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079419789 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.150495473 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076084892 seconds)
    (130/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053056958 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079537582 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.088265783 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.197154201 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155644458 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070194549 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096024292 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072334252 seconds)
    (138/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.050793307 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065800103 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094913038 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073377826 seconds)
    (142/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051971844 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052583844 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.111227442 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091362931 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066420483 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07426672 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070074489 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052000798 seconds)
    (150/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.10756393 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07116242 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065393227 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067028335 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052399073 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143180103 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141539737 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098949433 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064649664 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07306184 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050233913 seconds)
    (161/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063197187 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.0746483 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.076362725 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097188981 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051631836 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050489258 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097419475 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193057255 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.297554304 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108362862 seconds)
    (171/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098458142 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064994713 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178292131 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063905278 seconds)
    (175/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119988592 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072140249 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065905952 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051631557 seconds)
    (179/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074131902 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101757485 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071210637 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088741456 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051977951 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074669067 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086058889 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051339066 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066876355 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06301588 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.162183013 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051014673 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087524326 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073147162 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100494569 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072210105 seconds)
    (195/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.050972854 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067373154 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086201629 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050220887 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06531674 seconds)
    (200/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099314468 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051514472 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050558657 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073588699 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071519432 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073791838 seconds)
    (206/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.258758018 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157742199 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052687132 seconds)
    (209/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069296374 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05193899 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051168188 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127477571 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072303076 seconds)
    (214/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062137342 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052762891 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091656097 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066074679 seconds)
    (218/309) benchmarking ("sort", Float32, false)...
    done (took 0.133303446 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064504121 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164014195 seconds)
    (221/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065054229 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065726094 seconds)
    (223/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065695206 seconds)
    (224/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09031751 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140889024 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066927275 seconds)
    (227/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062003784 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050188633 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089383549 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136769012 seconds)
    (231/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082269363 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.182969125 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077877615 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072702708 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072195553 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050528843 seconds)
    (237/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05029479 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078826877 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065846591 seconds)
    (240/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052078656 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065823187 seconds)
    (242/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101452134 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091133396 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071664158 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067694331 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050245267 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075949101 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050455655 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06571309 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080965544 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.0654486 seconds)
    (252/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062314085 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063230428 seconds)
    (254/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.110901966 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097160506 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068015695 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068652477 seconds)
    (258/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069925139 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075003158 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053646094 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052767486 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067667278 seconds)
    (263/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078394218 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.0942165 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127826867 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183011423 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073892245 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090778868 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066164622 seconds)
    (270/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079208737 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065849326 seconds)
    (272/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050413704 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064068277 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051418042 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 0.14177673 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087709442 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100174035 seconds)
    (278/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064930957 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081976848 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108490951 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064568466 seconds)
    (282/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100686542 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065098249 seconds)
    (284/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060924112 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090109219 seconds)
    (286/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061919253 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090388743 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073875945 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073078888 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063113064 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063505219 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077797648 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072304997 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182141084 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066418901 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051411269 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065424728 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07252845 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063254376 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06647701 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072490439 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065995973 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052173057 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054974696 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073040779 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068019137 seconds)
    (307/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071714138 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054659258 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069340206 seconds)
  done (took 30.885408188 seconds)
done (took 32.281088898 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08360998 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091977323 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073588722 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092046886 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079299664 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075212733 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071560957 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077218308 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079174818 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080553894 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077516934 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053431036 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073451404 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073798283 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074655752 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091000366 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078128995 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073169737 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072616719 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064399181 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072994675 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06537911 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066597525 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05386833 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078351653 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071354864 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071412451 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073441854 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065043373 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06488165 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068376018 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072929927 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064157699 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078011212 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071525396 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072076516 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074143972 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076106996 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067256087 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064710554 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074559635 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064708669 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072498943 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073735755 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071744478 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072084348 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075511722 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080244037 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094643647 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070093942 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076857462 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078237002 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0781429 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075957027 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071750702 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075328058 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072770204 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094582689 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075375428 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069953205 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075804002 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075984539 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073210432 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074349409 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074567499 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076816039 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077561307 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073290885 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076924116 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07365788 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066663834 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075086541 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069918449 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064662833 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07534585 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076848184 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064185402 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070784844 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072167281 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070533561 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063949702 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06656295 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066553932 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072010204 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066301964 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053190061 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068520224 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071639445 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064275521 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072886921 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071140485 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071485404 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066262016 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07529925 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063873393 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069831119 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064825166 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064634413 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066331258 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068663093 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064282734 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066221217 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074209974 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066694561 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071343107 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078470314 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064410559 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071720661 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063759446 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065335483 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08221096 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077168779 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067024685 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070216546 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065550447 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074189073 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063959434 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065972559 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065082294 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064514764 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070697407 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063826065 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065742498 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071839443 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077233764 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063783244 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067444312 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065195692 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063555779 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069495285 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062998507 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06317092 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065194946 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06044223 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065205793 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063193062 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070669746 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0650655 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206487333 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067397358 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073518693 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069920438 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071550856 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071578194 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063712149 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058742386 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067046306 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067141727 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066788222 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065499778 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06664865 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064235072 seconds)
done (took 12.41897234 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065181603 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.138931322 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09620236 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094975016 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086083822 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065929873 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075315484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100857296 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067039513 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100568469 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087599641 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085518697 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113125637 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064063325 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065797298 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069909965 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066170585 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081315033 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099935799 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086226204 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114489013 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064624342 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092128856 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088348572 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0874084 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093651229 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069279924 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069150943 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068792518 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101101384 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087798217 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069753637 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066105465 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097509956 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093464994 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083240591 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065601482 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082261517 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065878239 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065405805 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06720351 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097761038 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080022822 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080475344 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069000226 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068853586 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066514793 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083753645 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089327484 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078541252 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08564622 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101315354 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068108947 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064863317 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064171088 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084986003 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064418107 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068199057 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067550379 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06858116 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065451863 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068712115 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080400954 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079813434 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069373283 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078837473 seconds)
  done (took 6.755087011 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08260179 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090579318 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083097266 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083316069 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06518491 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065482331 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065457215 seconds)
  done (took 2.024015539 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067518121 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089044582 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089362299 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088420223 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084346928 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087651544 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074704956 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065814233 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087196674 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066704083 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086791071 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100008207 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069242159 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07323276 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09037014 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065484678 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090142621 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066096733 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069023765 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089705848 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068385981 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095150723 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069490256 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06603113 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080359659 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065911373 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113245733 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06992679 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067380725 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068945963 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063674063 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106007471 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07944055 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074321763 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065857273 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080609739 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08217196 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065518782 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084883507 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076176863 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079823383 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066087803 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06683909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063487584 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069893152 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076448294 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067104029 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067189182 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067961889 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085817654 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066907399 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079563001 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068409044 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071080093 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067039819 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072249756 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075687427 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066461657 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085606664 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067676436 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082795851 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082301324 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079742621 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082574447 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068283063 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080423016 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.0823926 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070552177 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06908329 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069059125 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082085902 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063891937 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067361181 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.0765467 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067939117 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089391603 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088841361 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067514841 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079570504 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066101528 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066185796 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066045486 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089290756 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071479344 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065736107 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07002172 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068923389 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063946072 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065667269 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069400059 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063581474 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067669591 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068550627 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068927357 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068272141 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082480033 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067936839 seconds)
  done (took 8.754309153 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067842751 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06765949 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068743989 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066555402 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066905656 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067195172 seconds)
  done (took 1.917941751 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091874933 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068251481 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079450345 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071391637 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104104641 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086056798 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086724677 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077421924 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08310211 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077638088 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086127371 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087838272 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092013343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072047378 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085974695 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07080866 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086847735 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074095912 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077692351 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072323912 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085852153 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071656817 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072406901 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081131733 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074559988 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070999584 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066522122 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077956399 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077171688 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077304451 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071601496 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075455913 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069985367 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07723708 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086177541 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.06988228 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071249586 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07636824 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071935215 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075327157 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088549519 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071871462 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073662094 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076322164 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077316358 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069579496 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07667517 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07435005 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085852944 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076205274 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075896984 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06991508 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074588551 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075868669 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069374857 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076418587 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075855797 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085764823 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071306122 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069594658 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067893489 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074681837 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077198612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074638003 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077348363 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076643358 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069764837 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071615683 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072024619 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070648103 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076857626 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067623955 seconds)
  done (took 7.013761996 seconds)
done (took 27.939504601 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533578274 seconds)
  done (took 2.013956637 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616410421 seconds)
  done (took 2.11974841 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.13812188 seconds)
  done (took 8.637461668 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.400530986 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.493366198 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.717211782 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130197872 seconds)
  done (took 3.27868182 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702794281 seconds)
  done (took 2.212228231 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213684071 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.200527857 seconds)
  done (took 1.932559653 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374222423 seconds)
  done (took 1.875065406 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130212771 seconds)
  done (took 2.633618417 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259405881 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174200851 seconds)
  done (took 1.945310874 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.480153484 seconds)
  done (took 1.988119259 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.940914961 seconds)
  done (took 6.44999573 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212911915 seconds)
  done (took 1.768471106 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242177439 seconds)
  done (took 1.753641904 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.707886322 seconds)
  done (took 3.219393786 seconds)
done (took 43.335019001 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082273385 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081085446 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080392657 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078573244 seconds)
  done (took 1.821361002 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078239365 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073519275 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076331436 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072273321 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076169221 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073085411 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074167091 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077218356 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072564605 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073062954 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072682258 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072782738 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074650582 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074565702 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07114865 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074957644 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075926405 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07263132 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075699994 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072750421 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070503431 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074537849 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075450226 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071566037 seconds)
  done (took 3.291654977 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077866695 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072502701 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074938577 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071760955 seconds)
  done (took 1.813964106 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079815877 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096176532 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089046571 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078871892 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092718088 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086335877 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069109515 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068722833 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070735788 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.0771174 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067856048 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096584442 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08842265 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078000645 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079663474 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065558309 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06784299 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087233523 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078049542 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078510498 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070344188 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077288173 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06766451 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088274726 seconds)
  done (took 3.414915154 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086191821 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105838253 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082199701 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08919018 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090702421 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065237182 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087941917 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090976184 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12684638 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064945017 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07027319 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065467842 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073189029 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065163721 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080968704 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107013104 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111379267 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068495115 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096773237 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065396498 seconds)
  done (took 3.219113077 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073500968 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070475617 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065167992 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068528013 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07640018 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072688328 seconds)
  done (took 1.953372236 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067912847 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067933631 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06722103 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066552715 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071977584 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067307739 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065853554 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067299807 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067760194 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067004401 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066565649 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065393468 seconds)
  done (took 2.332258484 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201516579 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068177576 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069249379 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065327869 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070510519 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066158377 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080515942 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06713789 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091108414 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065645636 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066186832 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067893258 seconds)
  done (took 2.504219474 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207325016 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075782172 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23816955 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149861651 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110286863 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115249861 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111939321 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113938667 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141191051 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099916528 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167752827 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166077779 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107781933 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136571047 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088592607 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100193626 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153232393 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161809399 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105324781 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166304452 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144894799 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125624746 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153010793 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101308936 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105767913 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12129794 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071073712 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079857306 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169245037 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132333414 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143084466 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110828678 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091796016 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176296094 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171116942 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139635915 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145713926 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083375259 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10403775 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132829046 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197371839 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087542572 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161294531 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108211472 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220595356 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132788502 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119242707 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120945441 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106087655 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090447826 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14467232 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182493414 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136783308 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087204857 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123720733 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114332791 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112783604 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113096591 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182991733 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162724114 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127988411 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070831157 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108082419 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153603052 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133003773 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108457421 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124470206 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091607207 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134876813 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155493216 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119618725 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144172236 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116334972 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088679909 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118956169 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139802827 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127125228 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160367396 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123870463 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072441629 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123268573 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10085115 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080446353 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145033418 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074863776 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176187329 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098136748 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108049028 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124010143 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108728733 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108172144 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160107515 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14685299 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101964957 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064280342 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246283185 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122622863 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147449555 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086841221 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110044282 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117646598 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077873334 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138007141 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074714874 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12341944 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07801362 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127728452 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129980717 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07739649 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122927638 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103158772 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101098338 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132492572 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160478316 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088374101 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081556212 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169664497 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123001207 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103911383 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143618837 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156710675 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102229011 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101695105 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148597934 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178313846 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089363937 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162986035 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1055513 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083624675 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088084361 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122829976 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111275066 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122859583 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081447714 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117171214 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168312766 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074576038 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095319475 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133795438 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078419794 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080361424 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104813253 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10411559 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096411153 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102146548 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10180407 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134588221 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122632882 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104470035 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122232873 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097234556 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315593002 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088135787 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102491489 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104960547 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069821764 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135484521 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157806119 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080573762 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164409286 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122980277 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11523139 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119010806 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084036359 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140390152 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079333379 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069913059 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144793899 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109910786 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109092945 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151107441 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116221926 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12523461 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118591951 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134624605 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130254341 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130225997 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104625266 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08832429 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111931298 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12557439 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072984359 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090184985 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080003084 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104191346 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095076611 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082413994 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140487395 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123493938 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108680366 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111788498 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096010272 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14755682 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07560947 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128003155 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119007956 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095166007 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152128776 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151845887 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130309911 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098268389 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135378335 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069643924 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073208327 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087289135 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121619726 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081934253 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082496179 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258931692 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148851003 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131060857 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136140656 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123011162 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120256713 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156789627 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070450512 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118033893 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145991719 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120169709 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103849725 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090418537 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098708093 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14365542 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107125892 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182140245 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116569205 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123787635 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152468226 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100817695 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079590575 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102633123 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135133224 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102841104 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143193274 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09939906 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087918553 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109168626 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074363454 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09804945 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125788038 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117702495 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134100548 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114581777 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131316911 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077102995 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114737551 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120882327 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121109735 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063465051 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119756507 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16146549 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094365941 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117744383 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151758446 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077970249 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133541932 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173503125 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142702806 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083941908 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252629341 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120645084 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129420715 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119770815 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141188243 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107333349 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137798702 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109854389 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08675688 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087694504 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097257456 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104309867 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095323653 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105078106 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11269469 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096304535 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132425189 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1038081 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109455558 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117884619 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098244993 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091289452 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095796222 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17761733 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119023635 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170022999 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099164411 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14478295 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163810172 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075329078 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0791584 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078080118 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140186929 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083574299 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129491849 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105941482 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116561152 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123309844 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14222909 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095388034 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068040856 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109077652 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13216222 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123704003 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09775768 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103033521 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163208603 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101037225 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079309416 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113595632 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114780519 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102386048 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170366546 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060777551 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104576683 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076116795 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079467623 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126235522 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294015086 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080923835 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103682826 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120112863 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114186405 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128099416 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100403127 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108971477 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126254978 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149451778 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128408323 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089358312 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111944434 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129352543 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156812314 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104382016 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096300345 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173416351 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152473615 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15916133 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087870176 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113674207 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114591584 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108764883 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13737748 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083157581 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163390205 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082071887 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135222527 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10338662 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088916507 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128675471 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108729328 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087351094 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14717309 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117772632 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082040335 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077131634 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116751746 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119371865 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105565721 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075436666 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138183249 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073666866 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131724204 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158451217 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07993314 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106902871 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095634194 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078502127 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104665414 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101090607 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086477901 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.240845473 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175235652 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088470846 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150259562 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133982554 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113521933 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136346073 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102499554 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639325377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077730983 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15219313 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116200074 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174298882 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099854019 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118507159 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110117795 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122467969 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14562586 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104863517 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179650336 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130826753 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11669961 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079593964 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101689422 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103849806 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088373922 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107436511 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114033435 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114962486 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092979855 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115592663 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123614365 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081538113 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095765835 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155851799 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116064898 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142945469 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140153265 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085128797 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117664968 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137172216 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079765637 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120208824 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150972629 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10507084 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098276811 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080002316 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099262476 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157753799 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072675924 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156804783 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116509066 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254315747 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114604772 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112381324 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131786417 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105685005 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122349474 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093633878 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110434363 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113175124 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081640242 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077020694 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106184719 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110768343 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098741148 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097432262 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098779416 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151999146 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072480988 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098892353 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1146536 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143751528 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173043505 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088852509 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082152143 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118520226 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113123286 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112962878 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120795712 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079314234 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081623999 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08049487 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077344907 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10799915 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111889385 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113894492 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111111665 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163094524 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082635444 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232693365 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095129862 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105002783 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069565214 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078220921 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096336263 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09777365 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106893772 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109319622 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159113481 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095156732 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089463104 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091106108 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074105504 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082991067 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12855813 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109552306 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116984557 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097285737 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061548554 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105627225 seconds)
  done (took 58.765202262 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109148243 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082341524 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09716101 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144707853 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122418269 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202431031 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154177739 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189074906 seconds)
  done (took 2.747801765 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068265828 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095970742 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102459357 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082508972 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06659003 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069074677 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232563401 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081247571 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066605287 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098538591 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078662459 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069203302 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.427964204 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066049625 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067514274 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061312452 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066873755 seconds)
  done (took 3.420239771 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390364083 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610220101 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.385889924 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072542063 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.505292537 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088249331 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.179293576 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128360459 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072943 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537074396 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.708618033 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123026041 seconds)
  done (took 18.432152074 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077908079 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070149172 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084229893 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083497599 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07292786 seconds)
  done (took 2.013725934 seconds)
done (took 107.291588494 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083364354 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.61107837 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052666188 seconds)
  done (took 2.319485324 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087464504 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088314808 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088955532 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085951086 seconds)
  done (took 1.984931083 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077114024 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079360178 seconds)
  done (took 1.783742373 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.235727574 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168979036 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095518918 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086359217 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081669105 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080826884 seconds)
  done (took 1.880759977 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074862283 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076796187 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07289873 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.0764747 seconds)
  done (took 1.928449221 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079988026 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053757369 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056869337 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059746467 seconds)
  done (took 1.878472607 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090619788 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081814642 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080205589 seconds)
  done (took 1.882508243 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105342501 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088946932 seconds)
  done (took 1.824438385 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086116412 seconds)
  done (took 1.71638322 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104476418 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105719231 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134221488 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11160596 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140057912 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109080458 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084753897 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087268655 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079262033 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089874989 seconds)
  done (took 2.675676938 seconds)
done (took 22.080708909 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082078592 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370583822 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362948477 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091458062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668771793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356627017 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991981244 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092711971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11522976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067472017 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084691991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648849628 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014401972 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323725567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001466473 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323063795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649335699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06808742 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06728023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067350504 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976351163 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067519479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067491826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06796449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647624507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371645921 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067819435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318829884 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067516126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06949751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354516033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068008845 seconds)
  done (took 16.211566502 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07330749 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121944496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077049487 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087193016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071236911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069765575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074116809 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072081595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126955865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070497736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0884344 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070628445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073564297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068584341 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087590934 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085446084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068721391 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068359235 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068366918 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068397977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086803584 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067477493 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06756103 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068347794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068254689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080165772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068747731 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067792234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068204416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069631887 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071119531 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068668146 seconds)
  done (took 4.090804859 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123025121 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129072478 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076497755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107373191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116755332 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071706062 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147690369 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09451128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130133026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069072029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084999228 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067768618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102104481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069625598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088703071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06818337 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069319636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068299363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068277351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068381093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087255845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06787379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068241045 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068265003 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068053591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081825231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068050977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067905415 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06828602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070302664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071318737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068192627 seconds)
  done (took 4.322980705 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075859829 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078161324 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085614881 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088114841 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072678526 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075124186 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076101612 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07319802 seconds)
  done (took 2.278367788 seconds)
done (took 28.542484036 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082639055 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071894998 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075402082 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083882046 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073508538 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078119546 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066777482 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075500017 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072387074 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073351033 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075140526 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067161702 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071778299 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06780108 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073904691 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06776428 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080052028 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072723599 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080091761 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079012805 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069938038 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072840199 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074637173 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079163971 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079080506 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078767198 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077574877 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072949425 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068635659 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070397839 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07713142 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08382995 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069511308 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079854069 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067608041 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067228453 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071122536 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067057259 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079313009 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076410915 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069456857 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07620475 seconds)
  done (took 4.746450393 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090734222 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096443944 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087332217 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064424044 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066632271 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065345655 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089371357 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060269408 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059179188 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088514725 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055660659 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059623734 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066104374 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053793874 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060316092 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056329361 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061731515 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055066623 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060241144 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059373362 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089280807 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053096046 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077270877 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063560978 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055634113 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061540831 seconds)
  done (took 3.41610621 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078507751 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090343986 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091128303 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130992591 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105857889 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079219087 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080630639 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095796809 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088586843 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066521433 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070756832 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092775842 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091357623 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074043345 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067347862 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086562667 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083781627 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068582194 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073471622 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096422298 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087556946 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.0870426 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099850662 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084321287 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067166043 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070014804 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071538483 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081919085 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073126396 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078076951 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071437893 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07143344 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069687855 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079544109 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071565949 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069794849 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092891198 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077918464 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079267546 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068419997 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071532991 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069102999 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093579361 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134366364 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066934743 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074451306 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075882895 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078080924 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068036765 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088848666 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080255628 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067794834 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071610287 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067320673 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068079763 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081853376 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.0704042 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070121306 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077463846 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070663784 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093648487 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072911332 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084478138 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06728255 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075660114 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067431364 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068837275 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066754004 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097099725 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069915748 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113143052 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068991572 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069155783 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07737958 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075651142 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074367306 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067984386 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083553648 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079185206 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071976369 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077564842 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071358671 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070152334 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092284143 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070153126 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069747441 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069658606 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074281345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070862337 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069857264 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.09283754 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067437473 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072330632 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085564395 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067279597 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068984178 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07373584 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072210869 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066935014 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079042944 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072070004 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069584731 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077868462 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067610447 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070718336 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080715132 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074137089 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066538509 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071873919 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073491454 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06821881 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069011083 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070990513 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06968473 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076794388 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074730433 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072235918 seconds)
  done (took 10.728478097 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170278903 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159990532 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070532738 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148435792 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076576681 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079125754 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151198361 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095086166 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068009828 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068947432 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068653665 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111767392 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107892892 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117426706 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079053609 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067934303 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084421761 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114877609 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152808461 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147452779 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084965162 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076802594 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070319423 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068604834 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070076706 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07879853 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086472986 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076889713 seconds)
  done (took 4.443861229 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081487865 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101301549 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074983407 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091483702 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090702673 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068577447 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070177304 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069285085 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081916476 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078526435 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067389913 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073522086 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074982216 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07176061 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068655744 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074928486 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075024241 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069364121 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071724429 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072923503 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078233924 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092338746 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071636264 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066729158 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07257831 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066927796 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063565912 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083954055 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068493007 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098283597 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068456023 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.079267409 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085813401 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070014325 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068700365 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067894478 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067442591 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068457445 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069377483 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066340336 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066776339 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057500158 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067629283 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078972139 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074928993 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055786569 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072863773 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073059808 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073367761 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065647453 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070748134 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070779103 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070707869 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075905735 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073549076 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073532827 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069228777 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074691928 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077068533 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067578976 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065295426 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065904803 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071945642 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065046122 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076636427 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072740854 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065995726 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067988958 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06952617 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075247541 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067633157 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071052395 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065275026 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069778204 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072576496 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069348039 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069077358 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066367379 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068059213 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068449372 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054952149 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068501462 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053153384 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071117877 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.0661695 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066024549 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067700672 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072999726 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080157111 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06915775 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073840406 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068901706 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067320985 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.0706763 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059959098 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070165039 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083662642 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082920903 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067883424 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065624864 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08263181 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072829576 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066803764 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05548787 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075554926 seconds)
  done (took 9.21293012 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091420224 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071004802 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085983788 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093803356 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086992177 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075179904 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077728777 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069661737 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083588811 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075012069 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077266142 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068668552 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079201152 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07825891 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07015436 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078536316 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072493925 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084923055 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083359001 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068528789 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076628153 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080409964 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090872609 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082262551 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082338428 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082516622 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091019053 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072213494 seconds)
  done (took 3.928004409 seconds)
done (took 38.124031435 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.743683543 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.912080166 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.732900191 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.107847682 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.054564804 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.834424434 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.853845313 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.729174756 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.818997896 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.766441039 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.934966198 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.828729665 seconds)
done (took 64.980380831 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.814737503 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.863841706 seconds)
    (2/2) benchmarking "String"...
    done (took 1.955105465 seconds)
  done (took 5.483862355 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.956135947 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.28424231 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.97824628 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.72264364 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.730914504 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.061926534 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.529882797 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.235491088 seconds)
  done (took 30.209432825 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.905109743 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.966028229 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.436713026 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.471473804 seconds)
  done (took 15.496592718 seconds)
done (took 62.715020471 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.743983835 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.764601581 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.743103617 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.70845356 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.782158582 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.738782796 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.958724711 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.758369291 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.727747035 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.712432918 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.728756575 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.175683522 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.736693668 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.041601479 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.723280018 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.731716033 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.742532378 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.207562747 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.880491775 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.735550378 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.733723722 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.773603431 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.727361709 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.734770768 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.784412137 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.727036881 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.169235581 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.736427823 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.554088814 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.730261893 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.777224618 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.258828643 seconds)
  done (took 202.713014734 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.727735409 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.795169142 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.888580868 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.770211197 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.259697163 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.90869021 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.848280074 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.352607198 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.73036763 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.738322721 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.93303679 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.728645835 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.942740492 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.679098108 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.754526493 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.734997181 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.866709151 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.970226877 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.762532332 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.902976548 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.733994159 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.805605369 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.769993775 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.927598425 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.772449731 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.730143346 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.747154678 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.73203994 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.922203716 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.856203448 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.762505809 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.737561877 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.930324421 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.599741726 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.727682516 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.739796704 seconds)
  done (took 168.456938669 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.109037587 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.727137756 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.726464651 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.726309014 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.72663806 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.733488673 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.726358218 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.849345008 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.852491414 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.328469177 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.47894742 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.730980261 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7786301 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.72796257 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.572358133 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.730735869 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796522376 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.741277234 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.727566831 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.742768289 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.756837628 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727567866 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.727754075 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.854010089 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.740983755 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.836360935 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.735815134 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.72920152 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.733673945 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.098819487 seconds)
    (30/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.727182261 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727021431 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735144885 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.973918804 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.729115852 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726245438 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.63149078 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.40097231 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.821862853 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.728978511 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.733348023 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.727766689 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.947251664 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.728818879 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.7292768 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.730452707 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907605532 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.727460256 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.854478801 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.728863585 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.240897035 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.728644009 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.729221903 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.50281546 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.430682573 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.733051563 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.728344211 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.731685835 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.729387808 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.728011634 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.736478686 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.539106377 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.810725271 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.733799223 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.730865505 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734359112 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.728584532 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.942040156 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.732898209 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.497377219 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.788393609 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.968075858 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.850000607 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.734106573 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79544 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.826317613 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.729977899 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.731571154 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.729999114 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.728013598 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.811261827 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.73136728 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.853667 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736680719 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.732840364 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.78084999 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.80004412 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.729044711 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623867402 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.732985602 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.731619498 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.067771324 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79996919 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.728077898 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.730731765 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729890266 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.853865648 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851723565 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.526434181 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.732326451 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.491549691 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.739080104 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.875174071 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.734365274 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.927435235 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.737003563 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820349732 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73824125 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.73508653 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.733631436 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764625222 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.733244142 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.790791289 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.733342635 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.106889379 seconds)
  done (took 398.360550666 seconds)
done (took 773.363303508 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.386412044 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.342527788 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.449067317 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.370722323 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.342833039 seconds)
  done (took 13.559598181 seconds)
done (took 15.22848421 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.820560145 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.82911918 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.75903221 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.82795579 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.755109479 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.825597454 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.807296724 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.761622092 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.791552236 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.759368872 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.795627337 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760740476 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.748734306 seconds)
  done (took 24.911029794 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.973042219 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.970395338 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807100732 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.964097897 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782531087 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.964520986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.897345982 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.884938478 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.887781517 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755100075 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.750899046 seconds)
  done (took 22.310042819 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.967479475 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.976901525 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813537124 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.971155251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.786568398 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.975666284 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.899872144 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.889103957 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893162359 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755356222 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751744518 seconds)
  done (took 22.353067604 seconds)
done (took 71.243172271 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.744618476 seconds)
  done (took 3.414815626 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.77026295 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.926681209 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.751714046 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.748883122 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.744810933 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.746727126 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.747512555 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.746659476 seconds)
  done (took 15.856944502 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.741554236 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.744208778 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.746381592 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.74469897 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.742133444 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.744853324 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.742748362 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.745709505 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.746292241 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.746256752 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.746382377 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.742386421 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.744234635 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.745230755 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.744973722 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.744025155 seconds)
  done (took 29.584535113 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.745261402 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.744329504 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.743792976 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.744179921 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.744405832 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.744042107 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.744062163 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.743985155 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.744828849 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.744489721 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.745624116 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.745455592 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.745375495 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.744478266 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.746498266 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.743606636 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.743644718 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.743897315 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.749709054 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.744038421 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.746470277 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.74266669 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.745173134 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.744801278 seconds)
  done (took 43.552932993 seconds)
done (took 94.079811598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.638539331 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.378968054 seconds)
  done (took 8.690606237 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.749473839 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.745994923 seconds)
  done (took 5.214091943 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.746940154 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.745598341 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.747583597 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.747970406 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.747856003 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.746570229 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.747649657 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.746869077 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.748479921 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.749373189 seconds)
  done (took 19.150657664 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.747935473 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.74842637 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.744513612 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.749192025 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.749097283 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.746009919 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.749985764 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.748846298 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.74908215 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.747546249 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.749588687 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.747221935 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.749014552 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.746899353 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.750129244 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.746032599 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.746161644 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.745980794 seconds)
  done (took 33.139313555 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.748462756 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.750901115 seconds)
  done (took 5.175006354 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.746706096 seconds)
    (2/7) benchmarking "second"...
    done (took 1.746770436 seconds)
    (3/7) benchmarking "month"...
    done (took 1.74543472 seconds)
    (4/7) benchmarking "year"...
    done (took 1.748154769 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.747696163 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.747324865 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.747234898 seconds)
  done (took 13.906123608 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.754207113 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.92382343 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.995765792 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.40364145 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.755695229 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.7566335 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.685374345 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.753970816 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.755080788 seconds)
  done (took 19.460189933 seconds)
done (took 106.408599391 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.608108096 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.743041098 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.075288102 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.805102322 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.795990719 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.087396708 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.779030061 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.055358164 seconds)
done (took 42.625276092 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.834537797 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.327762306 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.359479178 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.162643964 seconds)
  done (took 12.527649147 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.72938277 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.285801721 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.786893473 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.335293154 seconds)
  done (took 19.838462797 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.11161337 seconds)
    (2/2) benchmarking "read"...
    done (took 2.10022066 seconds)
  done (took 5.896799814 seconds)
done (took 46.777735743 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749523462 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.750288051 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.749942297 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.750123491 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.747992758 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.751261827 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.750680209 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.75167949 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.749771502 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.74913241 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.752462727 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.752327969 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747375228 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748066266 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753053394 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.75013212 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748902896 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.752915802 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.752738664 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.750625601 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751802963 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.75023777 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.747026073 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.750628443 seconds)
  done (took 43.685329594 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.754735174 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.753284276 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.751537491 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.754630248 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.7504039 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.754200184 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.754991713 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.751315434 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.754146557 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.753904305 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.750691342 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.748406474 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.754159028 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.749631668 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753016822 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.750740368 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.752992067 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753258785 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754629895 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.751746433 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.754361886 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752864528 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.751878397 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752226623 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.751442057 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.752267685 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.753377028 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.749380711 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.753886047 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.751336399 seconds)
  done (took 54.256302438 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.757737366 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.765138826 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.754820334 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.752972111 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.755311331 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.754756151 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.755396935 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.753953266 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.755429889 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.754494183 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.753680623 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.754334406 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.75737573 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.754163742 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.753016643 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.755842216 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.755949011 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.755182088 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.754608476 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.756087251 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.754577978 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.754168326 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.757455341 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.755788542 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.757321828 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.756643681 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.756862014 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.755075314 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.755095168 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.756770238 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.753892836 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.756557355 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.756378805 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.755179028 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.75622306 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.756235366 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.762032762 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.766255201 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.755180764 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.755181965 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.755358619 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.756906883 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.754711595 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.757690378 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.755760963 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.756237993 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.756382907 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.756454921 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.756040817 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.756159114 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.756200025 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.757121411 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.757143634 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.755935265 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.759542136 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.75801109 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.757496021 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.756840878 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.757576823 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.756576161 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.75618517 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.756659182 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.756779694 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.757513649 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.757922936 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.759184177 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.757710234 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.757448306 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.756575269 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.75794187 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.758217247 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.755794529 seconds)
  done (took 128.148729523 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.756863169 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755003519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.756089792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.755386558 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755772138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.757457661 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.756193708 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75856381 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755705866 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.758075781 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757675333 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.756545717 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756983668 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.75912888 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757183145 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.75413683 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.758947677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757035588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.758000852 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.759694274 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759186839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.756520518 seconds)
  done (took 40.341520609 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.757567296 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757771771 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.754803696 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.757631671 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.754983306 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.760584423 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.761164101 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.759006467 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759275692 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757600321 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756427089 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759585545 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.757340547 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757447794 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759229086 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.755964041 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759449883 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.757905081 seconds)
  done (took 33.329357352 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.756920952 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.75747285 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.759863331 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.75940384 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.758257117 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.759532784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75692993 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.760776784 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.761739517 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.757734312 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.760517417 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761383723 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.760321757 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758065443 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760365018 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.757273032 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.760470967 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75792687 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761887103 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75810141 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.758659655 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760927971 seconds)
  done (took 40.393425109 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760148438 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760122695 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.758195997 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.76040895 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.758568285 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.761206387 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.760838788 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.759272587 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.761864657 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.761679369 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758113144 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.762296355 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.759949459 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.759114906 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.757761503 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760262747 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.762246118 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.759760947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76295966 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.757485049 seconds)
  done (took 36.891403285 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760237588 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.762464347 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.763038324 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.763228062 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763709555 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.76378889 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.762328026 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.7615038 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763790422 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.764823048 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.762811265 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.762368225 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763699771 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.76199041 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761242169 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764270466 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763632257 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.762680495 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.764938933 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763507466 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.761943861 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763185459 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763195892 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.762216059 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.764183521 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763200548 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764109079 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.764468428 seconds)
  done (took 51.056547831 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762073238 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76450407 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.763273094 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.761242351 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.761440896 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.760496169 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.761785656 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.763636317 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.763378434 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.761730121 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.762904814 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.766267098 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.763778041 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.764830594 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.762793852 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.763999569 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764186546 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.762283931 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76166373 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76154975 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.765715338 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766210723 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.76406554 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.76279878 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762626791 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.766131119 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763106872 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.761209119 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76519409 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.76067254 seconds)
  done (took 54.587448322 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.78348224 seconds)
    (2/2) benchmarking "in"...
    done (took 1.785967928 seconds)
  done (took 5.261248827 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.763129441 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766145115 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.766158546 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.76280008 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.763755709 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.766087149 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.765692632 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765209794 seconds)
  done (took 15.811360409 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.76390322 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.765195857 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.766012111 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.76655905 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.765508362 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.766000303 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772249007 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.766872084 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.766965232 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.765299157 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.774074629 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.775236288 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.768447274 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.764981273 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.766052149 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.769431512 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.764934994 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.767138139 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.764741959 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.767439046 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766258899 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765677005 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766026364 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.76321851 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.76708902 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.776708322 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.768612792 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.769375588 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.765350916 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.770040567 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.766183971 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.763628292 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.76671513 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.766231785 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.765741881 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.768674738 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773184137 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767667652 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.772407356 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.767575154 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.770218697 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.765040869 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.768770617 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.768640541 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7694224 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.768899784 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.767263832 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.764901234 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.767647755 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.772162913 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.774280237 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.765893851 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.764469346 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773427147 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.768799546 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776279156 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.769542685 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.771548472 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.781363217 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.779717404 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.78202114 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.778884382 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77225302 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.7690422 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.779482993 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.795446018 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775887042 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.765387313 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.766359411 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.768439568 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.775778538 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781262516 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.77934681 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.769514782 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769011383 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.771121713 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770304478 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769373471 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777671438 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.772709017 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.771720964 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769420795 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.781247743 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.796030747 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.769971251 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.771208562 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.76972312 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.77097881 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.771131487 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78090255 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.770922378 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.770880679 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.768372626 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.770708292 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.770867984 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.772504732 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.768616783 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771465352 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.769023672 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.771350669 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771518435 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.775567881 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.783961335 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.772207919 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.771817072 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.776101022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.770017046 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771020102 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.777761155 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.769706663 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.772696116 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.771788298 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.780091302 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.769504938 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.77524728 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.784246226 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.775029574 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.772410092 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.772939626 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.774046945 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781777532 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.800983348 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.77344632 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.771228742 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.778342773 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.784180815 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771905142 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.774244834 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.773237525 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.769359441 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.768708021 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.774925883 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.771640964 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.772679043 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771097192 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.772736815 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.770701908 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.773023044 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.773383691 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.77276342 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.773280369 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.772526041 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.774393881 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.774001721 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.772756502 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.774074782 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.777903044 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.774578726 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.773854499 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.773696537 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.772030004 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.772611843 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.774007924 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.774011406 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.774324793 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.772599511 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.773113904 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.774697821 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772546143 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.774254078 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776386475 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.775719575 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778926827 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.776135616 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.777820597 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.774195873 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.772157626 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.775318439 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.777712355 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.773566869 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.773769519 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.772899321 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.776684843 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.783082446 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.77430793 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.774890726 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.777087758 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774310318 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.775682784 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.776619905 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.777912379 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.784868558 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.775485102 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.781229352 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.774753123 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.775236047 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.774609076 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.773246423 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.774989963 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.7775118 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.778833616 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.78696023 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788507135 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.784658511 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.777373955 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.779476214 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.777274161 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.779289197 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.779840455 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.775983597 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.775598173 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.776457336 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774907476 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.777334842 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.778338968 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.776820912 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.774003907 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.777932527 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.77674743 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.777595407 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778269264 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.777215064 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778959935 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.774998168 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778711482 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77573736 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.776128672 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.775993168 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.775507513 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.775389053 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.777328986 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.777587445 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.783751897 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.777128186 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.778734464 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.77784276 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.778798213 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.775340696 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.777806185 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.778658947 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.777410073 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78245415 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.779044504 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.777226636 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.784934348 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.777777274 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.776265065 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.779782266 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.777880368 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.774031346 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.779145152 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.789621638 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.778077031 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.778255008 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.779499278 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779136326 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.779365718 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.783603883 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.776516499 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.777081109 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.779656012 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.782569805 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.776711313 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.77917878 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.779201601 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.778786353 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781275076 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780885608 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.779603175 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.779053394 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.780321381 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.778694982 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.780728068 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78357249 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.790147233 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.785190743 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.779902364 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.782495128 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.782732384 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.783987837 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.780898984 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.779735851 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.778607868 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794934274 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.789713745 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785446416 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.782534832 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.78181959 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784778968 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.781401044 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.785048497 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781600749 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.781195151 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.781372438 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.778575246 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.778576395 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.778995684 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.781912718 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780754947 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.780990372 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.786862186 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.781501649 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.78025299 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.781778023 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.777952294 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.78270971 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.78017435 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.780365101 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.785094463 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783164082 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.779787687 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.778389854 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786386655 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779575507 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.781298489 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.782082503 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.782208439 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.781263402 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.781529805 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.781868225 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.782882622 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.792012528 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.78486607 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.792533867 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.781675758 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791058828 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.781985936 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.784164583 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.79246872 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.77913316 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.781523294 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.784438859 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.782033797 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789296717 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.784806346 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.781740931 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.788189459 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783892508 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.78183493 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.782163744 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.783533819 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783413399 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.78436872 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791086637 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.783466146 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.786422047 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787462494 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.781400546 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.784361967 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.782944495 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.782649726 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785961256 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.783341164 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.783733811 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.785493721 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.782921134 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.783122102 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.782574664 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.784400559 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.782226054 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.784613203 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788307783 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.785095392 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788576256 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.786592767 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.790886767 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.783429484 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.789974698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.785256206 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.782348939 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.784280206 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.784248891 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.785051015 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.782755955 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.785505219 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.784488756 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.784799381 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.791356586 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.783763651 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.786778859 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.786217514 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.786850814 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.784880071 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795451388 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810863257 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.786434041 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791729178 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.78274724 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.787203301 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.789555317 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.785140427 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.782393443 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.789646985 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79765254 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79572029 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.787596765 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.786500191 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785600955 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787852775 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.784920674 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.785947036 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.785798725 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.786072985 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.786195633 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.786389367 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.7890279 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.786278417 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.786983164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7874338 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.791403611 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.798141421 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.786323758 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.787682674 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786135785 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.786513292 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.785331192 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.787278763 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.785614035 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788289856 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787151129 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.789978 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794104521 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.795460577 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.787321094 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.785953585 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.78663724 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.787867162 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.787174841 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.788881817 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.785749104 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788089247 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.788519957 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.786563106 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.788225585 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.785790561 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.786512118 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.789053159 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788086343 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788435532 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.796007419 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787827476 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.784129495 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.787983273 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.790697343 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.786279309 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.789004598 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.796532415 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.791508997 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.802640141 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.799996701 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.793617635 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.788795776 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793282579 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.798917045 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.789894377 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.791714323 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.789663719 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.792787195 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.789915456 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.792578678 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791247193 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.79533592 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.790236424 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.788830651 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796857497 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.79526636 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789927294 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.790648126 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.79465629 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.79048376 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.788988703 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.790801845 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.790548611 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793436775 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.790511538 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789599169 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791479962 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.788006983 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.791037319 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795366366 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792448044 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.789111108 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.790517635 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.790892384 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790296712 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789841286 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.789095585 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.789954356 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.789276595 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.793056071 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.797775154 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.787276919 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791468885 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.791482894 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.794152526 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793256741 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792047636 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.788620671 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.789468812 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.790737749 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791047822 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.79366668 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.793013565 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.791754065 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.792147631 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.794454936 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791254027 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795386167 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.804574983 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.804123613 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.790901588 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.791190165 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.792546893 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.795077728 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.793915914 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.792238347 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794921761 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.794209629 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.793216615 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794016753 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.794504762 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.795639301 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812032176 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.793623716 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79145821 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.793313439 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.798282464 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.793543836 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.790301949 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.792863473 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.794621003 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.796719514 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.803484056 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.795338043 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798346801 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.793469343 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.795330648 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.797795917 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.799151169 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.801238358 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.794827952 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794509858 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.793180079 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.797403676 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.81323996 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794161282 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803040352 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826188832 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.793428388 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.79551861 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.793828475 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.795123464 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.793359243 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.796412774 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.79528209 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.792720387 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794762859 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.793941442 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.795255233 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.801096273 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.797385681 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.794889278 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.796150052 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.792808076 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.795510314 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.791188134 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.795126255 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.795066169 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.795410455 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.796758506 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.79463216 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.796906664 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.809097901 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.807509013 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.794754824 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.795948595 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.791346979 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.798476181 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.798938209 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809439545 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.804929554 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.795219015 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.794806315 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.797528225 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795046416 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.791918267 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.794624871 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.794489715 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796163047 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.79421187 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.806682212 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805489587 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.79952001 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.794379949 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.796386611 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.79548503 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796259857 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797672675 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795421232 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.796136917 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.796330979 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802869877 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.795962295 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.795843577 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.79831433 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.807440008 seconds)
  done (took 1064.509010475 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.795724368 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793126705 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.794830336 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.795190722 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79443201 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794499475 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793784611 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795212053 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.79481493 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.793565613 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.794408967 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793908641 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.794509835 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.7949293 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792954628 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.795369217 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793770946 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796385093 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79623567 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795458365 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.796860574 seconds)
  done (took 39.413985783 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.799163358 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.796233634 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.796126166 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.800898312 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798094287 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.799070487 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.798239875 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799143196 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.799611817 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79554795 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800062979 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799714329 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.794883066 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.79522729 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796538419 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801302161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.801179575 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794320709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.79987482 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.798148929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799263672 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.795762839 seconds)
  done (took 41.284188602 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.800048815 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.799955905 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.799064945 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.797425703 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.801979502 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.796294831 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.798661106 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.79947812 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.801347093 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.800997912 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.799076211 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.803396504 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.806751644 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.808266886 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.8011575 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.800712664 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.946009645 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.800871289 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.801231241 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.802193451 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.797317226 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.803934844 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.799991894 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.799345844 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.797972696 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.800017587 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.801988341 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.801942159 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.80285495 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.801379779 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.806866037 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.801727075 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.799918458 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.804497135 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.798227565 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.794577341 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.798450037 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.793489325 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.791802565 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.79628058 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.80401212 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.816348058 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.797085502 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.800287468 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.794321117 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.795210273 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.797433055 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.804346265 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.793142563 seconds)
  done (took 90.087704126 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.795508103 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.795636499 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.792238707 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.796139846 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.794376454 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.795464953 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.79320525 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793335132 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.792337358 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.794085021 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.794903193 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.79372812 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.793164414 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.793915981 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.795577099 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.792437894 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.792318368 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.794098903 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.78913483 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.788037403 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.788772773 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.792443236 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.791976231 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.789015931 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.793923907 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.7907802 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.789321409 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.792660165 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.791137951 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.789290811 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.79402818 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794101187 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.791317182 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.788423154 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.796545308 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.791499062 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.791958035 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.788670867 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.792356881 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.790710775 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.792506405 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.791670134 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.793661198 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.792790375 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788238997 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.791895492 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.789823952 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.788672806 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.790767827 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.792882063 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.791701337 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.792087191 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.793459688 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.788964223 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.791861643 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.793416678 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.791376254 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.790009529 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.793349846 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.790334924 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.789974261 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.793769259 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.790052218 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.792680977 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.793738138 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.790543581 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.792272617 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.793813204 seconds)
  done (took 123.594707574 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.791522301 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.791007851 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793595997 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79299226 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792740622 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.79249088 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.79500627 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.792163022 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.795564092 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792727108 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79581217 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.797321327 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.795302513 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.792877455 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.794968896 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794203145 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.794303079 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794101435 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.795644624 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794905203 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.795252184 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.79612822 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.794401536 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.796158796 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79437139 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.795203016 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.793145244 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.792986245 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794386073 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.791591573 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.795274923 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.79485597 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.796955544 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.795219604 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.794707967 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.795847789 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.796056632 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793605613 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.795797491 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.79575234 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.795570738 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795809978 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.794785302 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.79758279 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797719724 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.79537982 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.795620452 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.795763793 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.796600327 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.793809265 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.796337375 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.794767286 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794907176 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.793406566 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.796372705 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.796591376 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794913754 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79669323 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79564465 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.795595432 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797169069 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.79598136 seconds)
  done (took 113.007156622 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792730697 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.793534358 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.791525329 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.789636369 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793067058 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791032707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.794959912 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.795257195 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.792263041 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.783176412 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784427947 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781264797 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782919899 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784184438 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.78148345 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782935264 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78115401 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781393011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782834831 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781981958 seconds)
  done (took 37.463360742 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.778833648 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.783367615 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.779961787 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78052327 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.784086079 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.780436461 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.78260167 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783002335 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780583539 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78307096 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.785002308 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.782182549 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780302613 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.781504701 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.783554751 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.781284298 seconds)
  done (took 30.224299598 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.780263203 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.782452087 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.783718769 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.783160081 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.781530804 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.78008687 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.783381709 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.779914907 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.782173387 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.784635118 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.783430172 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.783658511 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.784715958 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.782845993 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.78122685 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.784023479 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.77985229 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.780964948 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.784034111 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.783548537 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.78198228 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.781778146 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.784953426 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.784078524 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.781465171 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.781653967 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.782401438 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.781082958 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.781024566 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.785050965 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.782228486 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.7828854 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.783130966 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.781178326 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.784152323 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.78162231 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.784096436 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.785359438 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.78289835 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.782937628 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.783362759 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.780888753 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.784168852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.785798563 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.779565461 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.782681285 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.78200431 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.780212614 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.780169964 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.780634608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.781820902 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.782606339 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.781546107 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.781873903 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.782001566 seconds)
  done (took 99.75093269 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782154444 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.781082844 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.778258826 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.780837493 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.782696482 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.77774651 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.780948317 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.777432766 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778229968 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.780003765 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.778491698 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.780547716 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777651879 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.779821007 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.777747561 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780824988 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.775683354 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.775609651 seconds)
  done (took 33.739133376 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.776187522 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.776787166 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.780400281 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.775186513 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.775912481 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.779565371 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775856896 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.779284441 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777499799 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.7766831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774850963 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.778897214 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778073556 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.778452926 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775575555 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775523744 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.777890178 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778385386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.77568443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777556704 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.778868844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.77902429 seconds)
  done (took 40.811017252 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.777388342 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.777346482 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.791872044 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.796077844 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.798479702 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.811532796 seconds)
  done (took 12.462706485 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776575635 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778065825 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.775349123 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777872944 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778013202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775238798 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77652701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774703958 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777570242 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774903789 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774679086 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777848873 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777459013 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774718217 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77769293 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777198337 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774642525 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775279244 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775200786 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777109278 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774902303 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778573916 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775333049 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774366696 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775146488 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774921218 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776695907 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774609523 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775143842 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776909176 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776376308 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773424605 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776598274 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774589013 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777447694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778073127 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774955403 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777039764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776821482 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775970898 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.77636083 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775982311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777297815 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774990759 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776238666 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784634116 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772826776 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772952679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773037606 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776874319 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776592694 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772936552 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776456201 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776612468 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775803924 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776862219 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775807736 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772709485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775031396 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773803663 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772260486 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775261165 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774137473 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773106535 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775617112 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772841129 seconds)
  done (took 118.912939778 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773115265 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.774691459 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.771383064 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774180943 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774220327 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773250395 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773429293 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772770049 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773036333 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773132049 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776070029 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772638763 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773426381 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772784638 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.772671759 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773994701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772804524 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773539835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776732476 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77573812 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772847097 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773263123 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773372934 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774361765 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773419897 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776856416 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773001299 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772076148 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773438093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775539169 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773126712 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774286303 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772879179 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.773529829 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774367205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773634781 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773906039 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772973189 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77415427 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776074542 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774842875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776025474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774528226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773902658 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774847762 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772607105 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774817394 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774685746 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774144301 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773192064 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772955796 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775334328 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773768201 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772563392 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772914706 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77392119 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774584152 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774822189 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773259733 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775584415 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774150259 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774282478 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776969751 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77547851 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774939714 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775264698 seconds)
  done (took 118.795007291 seconds)
done (took 2469.496703454 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.768807051 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.868598464 seconds)
  done (took 15.344757732 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.937254533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.888781435 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.773231711 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.791078051 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.774817765 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.793095609 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.776823958 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.773238537 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.775064945 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.774638756 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.774510925 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.960000947 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.775560441 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.774622289 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.77423501 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.866396254 seconds)
  done (took 50.696187328 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.776181158 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.777172438 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.789172636 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.780880716 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.775451422 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.788212537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.808500363 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.779627357 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.811673558 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.78967565 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.845093999 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.789275244 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.774997731 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.826228798 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.791945687 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.791241727 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.868790596 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.854290667 seconds)
  done (took 34.125780639 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.85436352 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.784436982 seconds)
  done (took 10.352707155 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.774854227 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.771903702 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.78781097 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.782859882 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.795533119 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.803076223 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.810580225 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.783803188 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.784624616 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.778007211 seconds)
  done (took 69.584601219 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.785549612 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.778104488 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.777511994 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.775153103 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.768473497 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.774282005 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.777599887 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.771596028 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.464817044 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.81285263 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.782722608 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.781973248 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.776409333 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.778138798 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.777718434 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.800531921 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.96599042 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.775650405 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.775149455 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.785131397 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.777595042 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.835901662 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.789320344 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.778289023 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.808276525 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.462255609 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.78542944 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.784535743 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.908980803 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.776582766 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.780975907 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.778171758 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.779879316 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.163096341 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.078690887 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.780068732 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.786157251 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.785363587 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.777821139 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.886460355 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.77809138 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.783489334 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.67662185 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.074476941 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.893291341 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.819196526 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.150833848 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.782128542 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.780863564 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.808123159 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.781856 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.780822258 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.791265022 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.285355829 seconds)
  done (took 127.687024553 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.772423098 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.036317112 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928473102 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.774575088 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063416565 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.981652345 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.777112901 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.823297491 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.777830537 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.007045829 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99543737 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.885985239 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778566693 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.775036772 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.776504784 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.772518324 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.934941707 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.85176655 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.777080099 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.771613258 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806267974 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019891871 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.911237565 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.775491379 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.794843766 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.989747522 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.911149912 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.882888345 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.14958694 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.773120663 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.839776869 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.778321101 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.776639745 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.773178534 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.930362858 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.876005743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863611912 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.778399797 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773012958 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.772704665 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.448145361 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970860797 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.875084915 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.922453471 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.025249903 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.982969382 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.564949596 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.773118012 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.510114317 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.936114238 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.008338583 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.01121152 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.903682286 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.778779077 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.291610293 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.776466878 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.774219226 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012289556 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00701405 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.88264039 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780081866 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.775176227 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.772913174 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.025158221 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777120327 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.871445963 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.780873252 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.773536757 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.872661157 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.883597262 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.007399908 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995677118 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.810752148 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.09222597 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.25316263 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02667765 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.844505115 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013007536 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.777010322 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.774316735 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864945143 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.735674575 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.976058429 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.031305212 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.034242335 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815453305 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.500356399 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.774975501 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006265526 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001660875 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08009797 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019625617 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.932540581 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.09938312 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.775493367 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.775723492 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.03554068 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.914360919 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.780426572 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.138457321 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01100011 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.34789119 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.806382161 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.120356238 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910419877 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.784435644 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.421097883 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.775844685 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.0037139 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.817362409 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.776189913 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777761187 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.998683644 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.854077752 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.774369198 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.427995678 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.842861738 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.779204653 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013708473 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.780450834 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042792797 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779224605 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018095793 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.085943607 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.811808703 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.00438516 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.019290336 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.7833198 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.023533869 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.027660892 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.901010001 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.003329785 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.413688594 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.781372051 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069851105 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.783499037 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.775831729 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.950800207 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.777238587 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.926341526 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.782741676 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11622823 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807105703 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93449315 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78275557 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.039424322 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.816622077 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82973078 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.782074512 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.910546788 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779016202 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.810836038 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.931295622 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.782219371 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.776610197 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.496385387 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.778112187 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.935735508 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.011606822 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807210163 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.855432835 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.456500481 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.776844875 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.866650543 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.808287051 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.125829328 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.779023294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.993817448 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.782339464 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302291168 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.779498452 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.020661997 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.964072211 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.781414592 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.778053695 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.685952644 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.777358093 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.777584137 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.94130647 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.117754461 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.777649904 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982044946 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.782617157 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920467797 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.783885175 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.861836533 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.132560721 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.776957717 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.778454696 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.779740036 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.77968031 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.77768385 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043324836 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.812606529 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.301548077 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.918461013 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051475691 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.10184763 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.031150217 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.826262367 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.784772376 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028402217 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.782695829 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.844177147 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.782723281 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.802979451 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015153664 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.783679989 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.991920326 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.060981183 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.703525199 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830280912 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.785408043 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.780201526 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.737898505 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.9359249 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874567658 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.782265214 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.779214519 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.90617428 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.915809489 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997576136 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.782469953 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.112520094 seconds)
  done (took 884.119061609 seconds)
done (took 1193.6163316 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.779274011 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.784670432 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.770420486 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.785471359 seconds)
  done (took 28.836044456 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.790179355 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.789708353 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.790709197 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.788353284 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.790900116 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.789634295 seconds)
  done (took 12.457015053 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.814734895 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.782599876 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.784370657 seconds)
  done (took 21.101117094 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.856307612 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.199801248 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.899247516 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.229796293 seconds)
  done (took 9.903719097 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.790448643 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.789983806 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.790443175 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.792469449 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.792473618 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.792680787 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.79104775 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.791489511 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.793057916 seconds)
  done (took 17.845661527 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.210093397 seconds)
done (took 96.069646581 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.92001526 seconds)
    (2/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.873783168 seconds)
    (3/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.348966448 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.239432774 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.08260181 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.788344337 seconds)
    (7/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.719503636 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.928873728 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.895810158 seconds)
    (10/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.984157753 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.832926643 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.81096684 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.054750781 seconds)
    (14/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.056695576 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.771115318 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.870780946 seconds)
    (17/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.794785741 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.849304524 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.808455044 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.803012986 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.772063413 seconds)
    (22/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.89441087 seconds)
    (23/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.776372243 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.933072693 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.921511663 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.025488899 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.979879111 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.170508645 seconds)
    (29/309) benchmarking ("sort", BigInt, false)...
    done (took 6.787668084 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.347988467 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.785896923 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.877049904 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.910318566 seconds)
    (34/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.077149752 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.032662785 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.787182474 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.519349299 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.096165073 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.899852915 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.987629463 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.142173164 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.788894922 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.940234225 seconds)
    (44/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.353669296 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.976946715 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.901793417 seconds)
    (47/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.252249835 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.045605876 seconds)
    (49/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.903140122 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.988388654 seconds)
    (51/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.878872712 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.896707654 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.846099912 seconds)
    (54/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.865609084 seconds)
    (55/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.892635792 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.003414698 seconds)
    (57/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.88748577 seconds)
    (58/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.956641454 seconds)
    (59/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.795344743 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.01581774 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.789630098 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.856508843 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.393440852 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.814942352 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.862808622 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.568345412 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.692801215 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.902527372 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.162817847 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.78844845 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.609303262 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.434739351 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.049898751 seconds)
    (74/309) benchmarking ("sort", Float64, false)...
    done (took 5.55701034 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.873903296 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.778706805 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.058068055 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.949304576 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.062941169 seconds)
    (80/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.06179442 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.334298349 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.890669753 seconds)
    (83/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.933017401 seconds)
    (84/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.773613745 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.802724712 seconds)
    (86/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.968185239 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.454490986 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.792701368 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.842377611 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.996120212 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.795972057 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.90252699 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.806986018 seconds)
    (94/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.356093242 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.688943753 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.123780141 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.996191313 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.081096741 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.822099854 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.874007319 seconds)
    (101/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.454512853 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.943489402 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.888491083 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.179278762 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.410089533 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.126520634 seconds)
    (107/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.884105695 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.300424523 seconds)
    (109/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.976303333 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.814798441 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.815281093 seconds)
    (112/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.776116257 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.542571881 seconds)
    (114/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.897101793 seconds)
    (115/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.803826119 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.991055619 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.816940866 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.684900016 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.790336752 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.795299923 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.16335116 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.777879917 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.162688212 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.716797019 seconds)
    (125/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.932822227 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.194261774 seconds)
    (127/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.8017071 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.23467883 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.812418821 seconds)
    (130/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.146174943 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.879211856 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.044784465 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.387924062 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.898158951 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011229317 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.811170795 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.059582137 seconds)
    (138/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.921380937 seconds)
    (139/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.934337907 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.42973988 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.922639514 seconds)
    (142/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.830865173 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.976897534 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.782305655 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.849396763 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.030964508 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.823067066 seconds)
    (148/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.85507362 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.891658747 seconds)
    (150/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.007172279 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.908158091 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.77928878 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.537849686 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.056738029 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.892178683 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.792176026 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.872527223 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.478245077 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.814077709 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.141967596 seconds)
    (161/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.925857327 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.904238332 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.167818413 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.857908929 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.25061163 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.102791545 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.861517279 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.779100065 seconds)
    (169/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.354229734 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.465597347 seconds)
    (171/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.059312511 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.122655355 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.79817105 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.335228483 seconds)
    (175/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.796088294 seconds)
    (176/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.822643579 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.794987049 seconds)
    (178/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.223144044 seconds)
    (179/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.9297832 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.868021892 seconds)
    (181/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.818097833 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.00025398 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.863563468 seconds)
    (184/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.802393448 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.814385355 seconds)
    (186/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.277829591 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.79435542 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.249729526 seconds)
    (189/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.271647461 seconds)
    (190/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.722248656 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.968447259 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.979614025 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.937267323 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.337263173 seconds)
    (195/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.381968496 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.909530678 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.19821475 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.182840825 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.79328091 seconds)
    (200/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.709154454 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.781660372 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.304963801 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.674547727 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.947850273 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.001149358 seconds)
    (206/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.874925793 seconds)
    (207/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.023742226 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.789389271 seconds)
    (209/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.858654486 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.778983571 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.269099756 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.896212012 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.81305812 seconds)
    (214/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.092839334 seconds)
    (215/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.138193437 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.849244369 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.128637221 seconds)
    (218/309) benchmarking ("sort", Float32, false)...
    done (took 5.57622582 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.843143688 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.984484457 seconds)
    (221/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.737491306 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036472488 seconds)
    (223/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.195976034 seconds)
    (224/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.822721409 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.814148737 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.794554509 seconds)
    (227/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.088837377 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.998619449 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.756233036 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.680997972 seconds)
    (231/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.715115518 seconds)
    (232/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.090603089 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.801765696 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.86565626 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.810235834 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.096971177 seconds)
    (237/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.865696942 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.479850647 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.1354785 seconds)
    (240/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.143865551 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.124806966 seconds)
    (242/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.932492533 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.482412339 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.893471371 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.877019172 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.957362499 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.799123839 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.993345075 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.801023686 seconds)
    (250/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.330262669 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.889738519 seconds)
    (252/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.027251633 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.99601674 seconds)
    (254/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.970183705 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.824347804 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.096425278 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.435478136 seconds)
    (258/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.092516291 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.82102647 seconds)
    (260/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.084346808 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.099153933 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.190940766 seconds)
    (263/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.798260144 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.62043913 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.832313252 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.795116132 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.159871553 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.198030871 seconds)
    (269/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.854511912 seconds)
    (270/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.315467287 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.421232926 seconds)
    (272/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.297847501 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.902461676 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.122082053 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 4.765205471 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.004638222 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.943938082 seconds)
    (278/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.800189842 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.632628097 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.788849298 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.913521577 seconds)
    (282/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.136292837 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.082519735 seconds)
    (284/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.29626506 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.433607972 seconds)
    (286/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.09414461 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.434347934 seconds)
    (288/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.813945892 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.879703198 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.879874401 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.917254076 seconds)
    (292/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.472586962 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.557603595 seconds)
    (294/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.795844756 seconds)
    (295/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.918552487 seconds)
    (296/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.140212593 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.801486405 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.870531191 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.121652566 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.177699041 seconds)
    (301/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.826219415 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.040073162 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.929120916 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.786860695 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.897883716 seconds)
    (306/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.82500696 seconds)
    (307/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.022063974 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.783286979 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.37431574 seconds)
  done (took 993.241749102 seconds)
done (took 995.035131382 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.857109563 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826424904 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.809971264 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.830835052 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.923070328 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.840331025 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.820436472 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.812671324 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.859269442 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.860740839 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.808886713 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.83911654 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.810946297 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.809460603 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.810484256 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824744477 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.113022443 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.832242144 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.827184755 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.820771663 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.826927933 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.810571923 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.860415534 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.839200881 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.814762493 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.811972738 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.81515216 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.830511706 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.924348901 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.815261337 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.814121019 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.822340395 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.113557109 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.830125194 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.806018649 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.831621943 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.823401851 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.822051384 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.815285872 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.844692794 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.246767022 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.814159292 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.81509339 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.812811163 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.812806367 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.81667472 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.813068365 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.818839769 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825042685 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826458773 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.244243584 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.831067098 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.815761826 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.814617754 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.822671401 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.813424011 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.820498725 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829436812 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.835054416 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.828343249 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.10584992 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.83794288 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.814083678 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.831076371 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.821203549 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.280679566 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.811887669 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.816685967 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.24341581 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.82210503 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.280018798 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.824879036 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.815829466 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.828196587 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.845573081 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.11475071 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.829289318 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.81189978 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.820829163 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.81365858 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.823781779 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827265756 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.81928908 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.815380613 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827145998 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.843656789 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.824738115 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.815016246 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.823030499 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.833718859 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.822739064 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.824531632 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.818041659 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.8103449 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.823713186 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.821464157 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.819225137 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.8192098 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.820227528 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.82523631 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.246732814 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.836967587 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.812503192 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.810705997 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.813720856 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.830813211 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.247498865 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.820491815 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.836323381 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.862440254 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.817687107 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.109693696 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.839354649 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.832631477 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.82543588 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.819227694 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.811888091 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.109765722 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.266549088 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.835098283 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.817821574 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.814793685 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833015409 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.820078553 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.81265363 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.119012249 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.839073672 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831374078 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.93735447 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.826835662 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.848943237 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.815140807 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.820342478 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.847204644 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833793999 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.848837602 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.82128054 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833212962 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.833677429 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.814399968 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.827677424 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.826519121 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.819558915 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825006593 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.813644359 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.84825581 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831420557 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830858174 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.837569182 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.938750017 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.815209858 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.112186764 seconds)
done (took 285.398169937 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.893776658 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.809882631 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.924001379 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.812982704 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.911082989 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.899218355 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.811099664 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.809163378 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.810228377 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.185598476 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.810958278 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.812960757 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.808311338 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.81039799 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.912061337 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.813491977 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.810324719 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.149149061 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.813841349 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.897312064 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.812879266 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.811042114 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.814410181 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.189423981 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.814209967 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.807614913 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.886891188 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.815215905 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.153883638 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.811457445 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.813240955 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.154146616 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.906529601 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.833669259 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.825883225 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.822836111 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.897093176 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.819392635 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.896784315 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.905115995 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.91407169 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.856060916 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.81521637 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.813552783 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.817118542 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.816407696 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.812560891 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.843765191 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.813874204 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.811706929 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.199573161 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.826465639 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.813454761 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.81388934 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.813529415 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.845748898 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.812746868 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.816678139 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.91531088 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.817254694 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.879272676 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.190369851 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.189184687 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.816977774 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.814139644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.815936125 seconds)
  done (took 180.735631417 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.884393791 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.897298764 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.881435095 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.821289426 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.868855611 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.885203153 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.82232357 seconds)
  done (took 14.803460987 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.822694264 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.816903046 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866744471 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.865858727 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.816506951 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.967445124 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817520675 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.828325633 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.814456982 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.870080586 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.817401006 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.816679956 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.824365216 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.808766719 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864785494 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.828089874 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.933193446 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.818852675 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.81827331 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.967892376 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.816117517 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.824645251 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.870591696 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.829272495 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.818340481 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.822751664 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.402015874 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.817561306 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816841011 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.818229498 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.814774002 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.85936786 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.818504107 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.818922907 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817155973 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.934781128 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.81776802 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816405831 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.818429222 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.817429575 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.820043241 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.819011086 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.818222081 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.816447799 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.819055781 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.842179937 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.819502176 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.818916401 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.820046077 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.821430404 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.869080725 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.819287974 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.817905505 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.818375534 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.874393252 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.825589892 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.820515188 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.817172596 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.820239694 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81765555 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.969818997 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.868810549 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.820056714 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.868923043 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819390833 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.820703637 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.819344872 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.819231856 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914153994 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.820747887 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.868457667 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.816665413 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.979335829 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.844910252 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821679442 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.823236112 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.824049746 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820855318 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.814906707 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.82720725 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.817852797 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.822619191 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.825288914 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818221367 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819863597 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.932391672 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.930988678 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.818405098 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.832988503 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.827575891 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.819904594 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.874122406 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.821510872 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.818447662 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.876525116 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.939908497 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.87660343 seconds)
  done (took 200.873168845 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.825025119 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.828990617 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.82273117 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.838434571 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.82167675 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.822357749 seconds)
  done (took 12.707191601 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.823465426 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.823112022 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.822478341 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.822319211 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.82256533 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.823153061 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.824430459 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822940154 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.824410767 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.823480757 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.821416549 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.823116606 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.824112743 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.822780826 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.822902288 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.823812253 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.823378541 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.823063798 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.822661085 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823239672 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.98097297 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.822881999 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.82522948 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.822839995 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.826522716 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.82364205 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830260807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.823198146 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.825425199 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.830050847 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.826450882 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.824797059 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.823395375 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.831808392 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.827790782 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.826320723 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82769978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.82512727 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823548964 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.827377587 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.825327025 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825514144 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.824427079 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.825156708 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.826201214 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.828344825 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.830534012 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.837561762 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.827849977 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.827583635 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.83265661 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.829568324 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.827990548 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.826168591 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.826658409 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831786133 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.829261636 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.825255276 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.825401722 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.82539725 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.82468263 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.825296927 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.82548589 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.829146172 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.822846171 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.827441488 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.82730606 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.827455338 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824422408 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.824747071 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.825062366 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.822765443 seconds)
  done (took 134.355403975 seconds)
done (took 545.226855897 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.940525317 seconds)
  done (took 8.689300592 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.890608435 seconds)
  done (took 8.744607099 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.33237152 seconds)
  done (took 10.085136456 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.819159395 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.836682036 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.819601704 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.82413538 seconds)
  done (took 29.062609742 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.956998533 seconds)
  done (took 8.711525782 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.830891398 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.817754043 seconds)
  done (took 15.437059546 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.841599545 seconds)
  done (took 8.595268504 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.890045382 seconds)
  done (took 8.643699348 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.829772537 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.859515067 seconds)
  done (took 15.457691774 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.804171075 seconds)
  done (took 8.556550123 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.682758022 seconds)
  done (took 11.442347914 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.821322641 seconds)
  done (took 8.58877871 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.84462617 seconds)
  done (took 8.598416533 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.860525964 seconds)
  done (took 9.612868011 seconds)
done (took 161.975143114 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.82008115 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.821459939 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.823075836 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.819066242 seconds)
  done (took 29.034423109 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.859064472 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.859690146 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.860178098 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.868796318 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.862917128 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.858658467 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.85405913 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.853716898 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.877727796 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.864408716 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.863421373 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.863491114 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.86161253 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.854518624 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.861113527 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.86134526 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.870064302 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.861362276 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.858647447 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.86524861 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.82614848 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.871093188 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.865087447 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.827607691 seconds)
  done (took 46.381036154 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.029204194 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.896882464 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.980123589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.878589568 seconds)
  done (took 9.539426368 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.881903672 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.880556161 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.893317416 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.933334899 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.954081363 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.893546542 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.855461421 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.850710807 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.834960361 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.881991625 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.956645379 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.874348884 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.978724058 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.829504661 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.015269978 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.828054243 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.827127596 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.881154878 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.931250634 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.94640363 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.82916901 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.881101723 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.883887967 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.879509929 seconds)
  done (took 47.157619935 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.829903293 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.843890071 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.837921077 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.830163926 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.832242946 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.830446174 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.837326158 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.829582927 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.849869013 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.828874334 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.825642574 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.828048399 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.827701536 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.828355671 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.826658596 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.840660932 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.84116979 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.830536153 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.833021282 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.841870805 seconds)
  done (took 38.431059173 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.831336235 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.678394485 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.173917638 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.079052005 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.823083343 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.827196558 seconds)
  done (took 31.178400306 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.839624536 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.834565963 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.829440081 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.884281229 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.965793203 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.837394504 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.829854095 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.837874967 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.870941235 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.891203087 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.844401632 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.853104151 seconds)
  done (took 24.074735353 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.831062503 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.824561573 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.825338451 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.8416359 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.840410503 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.837863819 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.837589159 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.824721983 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.841511653 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.848893042 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.84220316 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.841594909 seconds)
  done (took 43.802240174 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914382964 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.715173036 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.883092108 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549597577 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297792158 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036797386 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.337171496 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.161935536 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.829718264 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099285182 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983978926 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931684995 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.079941211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824751051 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.852727923 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.316057444 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124252033 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05859865 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853921704 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6191644 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875143495 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.252945768 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.80028491 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88717783 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04117956 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.955154607 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.08801714 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.786874336 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964549804 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866452101 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838370282 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831278496 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102210505 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214826213 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934020015 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837909006 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.483977348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.547279514 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.866066929 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.62303125 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.674662898 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.95591702 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836352205 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827471893 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.762555343 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.206816267 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196841258 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.831561638 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.539397666 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.827997442 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839546654 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917883886 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.83121873 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.644230945 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783939911 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105855414 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.825669678 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834350375 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400162386 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980659977 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254362092 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.798597553 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.020656169 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630503007 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234932743 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.98051364 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.832721457 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841813006 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772908752 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.612390701 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882643949 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973883076 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.850146424 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478842122 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13828833 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.033790278 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.185885299 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120234918 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519082395 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.798337583 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058135754 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.780523645 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763225549 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.688859414 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764038497 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106785248 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867348425 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.474732768 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872282226 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.168778322 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.841652715 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848999265 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836906278 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.055344473 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.39663428 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831181572 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.756283812 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974859631 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852143741 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165983218 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766187846 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.834750121 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086814077 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.04302956 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.95425503 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.350706513 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987401096 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833499067 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.843505531 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.644258451 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.875167646 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.108770072 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892075313 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969248385 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888663107 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.792926542 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134380454 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881748291 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.932456865 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.999134861 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957016779 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.17082465 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126241212 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897494448 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840348093 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.8322834 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.709581449 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384516298 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.099699255 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.834199969 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.235417523 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874274039 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.83451169 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767908319 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.426058609 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987332164 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.800204533 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057926869 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.672667223 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141586623 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766892088 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978967299 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.944730018 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.054945404 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.480673736 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.916235658 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089059769 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209248741 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.98845761 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877175778 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851955789 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951028805 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856056021 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.141357193 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.120621583 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.84168539 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.83756914 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.692308778 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.837067551 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83697409 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.838472235 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630949511 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119417085 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.858136676 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.844479483 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.724041167 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.857197767 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909618557 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848464502 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.847011417 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.376690312 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597242993 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.843788871 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.452535674 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059788979 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.844009467 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.640600865 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948225557 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.919019957 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117364486 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899469434 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.769562529 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.546070512 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.527789929 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834008354 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771103687 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.835579024 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845501688 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846470996 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.213665355 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115563104 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882438267 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.639675625 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.879921891 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847078278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.84074445 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83726571 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.373055609 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982846178 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.255393971 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.877343667 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973742684 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.849973288 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.77110026 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.840420985 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841837514 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.837163314 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.792731469 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889049223 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.633169314 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215127283 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095176735 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483015612 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853338175 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.672282852 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.894959825 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.856709121 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779593516 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.650161687 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.946977827 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848306617 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.848372719 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.638130852 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.542951439 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400602301 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147515161 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156901345 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278557361 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.192794321 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.136541325 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17502732 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07312748 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366718903 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896055069 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.17830203 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783274886 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922709513 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.487080143 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19514588 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851349563 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066070798 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228406553 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.690593366 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012018089 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050520556 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873881099 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.635865575 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794353048 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.044679162 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981537307 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.645478663 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042309814 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174624519 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.637405737 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.932649014 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.836907264 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.548284716 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926778676 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.553012866 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.200566989 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26289067 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.894590668 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315377523 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.849223922 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.285968157 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194532943 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.045738227 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.958936242 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781120451 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.860092377 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.855444664 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.843770407 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.831582333 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.710321254 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.091732613 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852141987 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076801159 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.004234459 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135246516 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.749549402 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.846672649 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842345115 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145629849 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.520270347 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004106791 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.172212669 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.36519984 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846649563 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775053866 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775648945 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.532811308 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.842169501 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.815447627 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08657389 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.02613813 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794986309 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.249660783 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078833095 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.09514532 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.855772635 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123109213 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118121521 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.576603772 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86977244 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.942417884 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.626720577 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.954810768 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.111622053 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.077228246 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639587018 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071467805 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.902475448 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.663277801 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.841339637 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057111209 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.11223135 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.867790516 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079058704 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.566835278 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.956411464 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159089707 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902678596 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.874840785 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995702207 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.035187343 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852065487 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92966812 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853837494 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.853076059 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.854271921 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890233347 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880314784 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9708482 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.858019391 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933359249 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.986192043 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.380224069 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.851096214 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129893131 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21335071 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174164639 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907236032 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846008689 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853362742 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78014129 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982509039 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290012378 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121246118 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.976554913 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.14505308 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870237145 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.632608942 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.116264523 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084024803 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12206631 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.741484671 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847826214 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.88132319 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.114640199 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858163869 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.058846333 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091669749 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179867799 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318431407 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.977754017 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205948666 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121899713 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.216016763 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856691968 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440152555 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.952086262 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.561795889 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.890425326 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.868583508 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115333564 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857481798 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231624597 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870660081 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.046257268 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.364346544 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651151038 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13633014 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.841985382 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912418163 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130978098 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242830516 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158596449 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920252857 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858085789 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.560541991 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985673751 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.715387086 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.117124431 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848736638 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061272618 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.557807879 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.860393616 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129753433 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158008678 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.846099495 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.713704539 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858412688 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.860114425 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.073428838 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123099562 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103510683 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859667594 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.855551955 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.666970363 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130633632 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913131876 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786666669 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.852915296 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950326228 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.101104678 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871355309 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.537969361 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.560641163 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154602471 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.770162819 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870768901 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.224451967 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.223683772 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18334045 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.388194201 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086217192 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.411043687 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.70043844 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145659976 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.855118947 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.235702864 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153050826 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.854164178 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358591391 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884694339 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.132088378 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171522522 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.856650213 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789749933 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.820441309 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074915968 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445292116 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794056731 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854933455 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.91171645 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.853331943 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.982112117 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864094998 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.722402309 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.668753738 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.594581048 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34431612 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.855582845 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.836961152 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.67979412 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358993111 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87984292 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99561271 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855491506 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.566813155 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.145055556 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104983584 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.355373001 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.855520874 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.854311472 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851950909 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780126304 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046881694 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.232652328 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17291953 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.195340565 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.884817761 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85675968 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.06694161 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064203586 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.912787743 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994796547 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.23093289 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885878011 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.624696061 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.531031659 seconds)
  done (took 1670.420525692 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.870337 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.88093168 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.896839171 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.876981469 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.892184738 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983593625 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.881217147 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.855466524 seconds)
  done (took 56.92299977 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.8532268 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.053885197 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.863844137 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.853564926 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.862036447 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.85424933 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.019374332 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.859822399 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.861603147 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.863835834 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.853414523 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.851529798 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.162049418 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.875287801 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.855051967 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.843093975 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.862543309 seconds)
  done (took 74.060425219 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.856288832 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.047771968 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.882512363 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.873228409 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.786376752 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.872898405 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.799427055 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.901107998 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.861274893 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.065476087 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.488055091 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.858984925 seconds)
  done (took 90.082610241 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.86512303 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.860499905 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.860282369 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.861139534 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.861299091 seconds)
  done (took 11.099381743 seconds)
done (took 2173.960335377 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.105873748 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.082236819 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.084721396 seconds)
  done (took 5.956879585 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.003809211 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.049841558 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.169960726 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.190326454 seconds)
  done (took 10.203895764 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.147346133 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.228061757 seconds)
  done (took 6.162085378 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.25028415 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.872469583 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.251182408 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.85290532 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.856567577 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.858018043 seconds)
  done (took 22.360328924 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.859337813 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.861851131 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.859931248 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.861471827 seconds)
  done (took 9.230592198 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.844649728 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.542339891 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.843562349 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.854618047 seconds)
  done (took 20.872811301 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.609305418 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.261488205 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.602081148 seconds)
  done (took 9.259748953 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.414202615 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.757092975 seconds)
  done (took 8.960529144 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.117570326 seconds)
  done (took 3.904814645 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.887792185 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.131576714 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.378438502 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.379561362 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.466773036 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.686355471 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.161396037 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.087785561 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.280806936 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.287307978 seconds)
  done (took 24.534588003 seconds)
done (took 136.713774045 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.228562144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.094319512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.056506463 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.198535675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.077567907 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.058919953 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.07053895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.187498275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.693331284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.693830004 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.2016052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.077556727 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.212384223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.08916478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.219935286 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.092338506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.078119209 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.242559541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.893018279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.131615392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.08068768 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.82558214 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.04450286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.839478895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.076492681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.009223733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.416662854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.093570006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.046427993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.425236191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.012067561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.288781271 seconds)
  done (took 172.545363774 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.591036968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.858443583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.859981263 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.859537483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.349017729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.86433635 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.862762299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.859708451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.965693782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.951415692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.857052571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.333787384 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.860882119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.857333878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.859410594 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.8604203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.115358977 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.672202262 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.875415087 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.880729488 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.883749933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.317926085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.88557638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.346756846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.148658766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.886542532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.840471498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.883574802 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.866665028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.823934891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.868877235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.859595408 seconds)
  done (took 207.599456267 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.859801968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.876098671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.860331713 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.859579865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.859446401 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.862029679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.861715312 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.858146897 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.535667498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.549330606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.869651649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.864842603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.869113023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.859137002 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.871880006 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.859349076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.868625059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.868222143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.865938075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.865894288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.867562658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.671592384 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.866686157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.688863879 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.866835091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.865692893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.859563215 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.868069051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.86823047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.869241574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.869458256 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.85891429 seconds)
  done (took 220.473007085 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.055368489 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.869408097 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.867192037 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.811080534 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.868370219 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.868018487 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.82482487 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.056724422 seconds)
  done (took 19.029792082 seconds)
done (took 621.44402083 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.294281745 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.123676696 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.034214605 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.897101807 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.128565698 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.916656941 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.887654947 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.950177485 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.619687231 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.948007057 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.522014947 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.899393285 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.617468281 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.905826386 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.00963733 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.943459023 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.425240649 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.512997449 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.05627449 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.929997903 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.050579502 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.817665641 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.959410192 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.650796258 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.633556914 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.855860345 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.042963865 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.432644812 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.898883514 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.051338086 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.572733989 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.256072831 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.893248445 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.88431833 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.939863857 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.921972843 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.209588076 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.892716246 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.006059674 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.627260076 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.940251947 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.50694575 seconds)
  done (took 102.461399328 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.859081596 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.858368037 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.857478797 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.857794207 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.860215803 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.858783711 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.856912297 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.859025196 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.859892872 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.857097579 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.857854001 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.858755423 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.856534394 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.859302796 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.857057648 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.858556613 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.85922872 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.860389076 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.856504842 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.857531083 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.858696047 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.857833457 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.87109321 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.860873873 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.859526824 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.859927207 seconds)
  done (took 50.139470607 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.87171482 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.030556557 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.115203364 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.885575289 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.871663613 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.873675806 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.888398268 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.87955714 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.873322463 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.871749657 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.976597196 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.878396786 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.89010409 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.115988269 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.881442474 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.870963678 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.872539244 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.872663924 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.040719152 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.886659973 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.890342704 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.876662914 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.890314019 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.88475057 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.871422474 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.871766229 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.875468382 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.324184728 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.880378319 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.977759507 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.915657716 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.890773901 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.298837424 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.1277836 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.919857967 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.878720981 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.87265938 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981487228 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.87938109 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.873437458 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.890596364 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.878994221 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.119308657 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.350034929 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.882810112 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.874798082 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.334975753 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.989211914 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.912995853 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.884912639 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.121983367 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.887277918 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.875503493 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.872919876 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.908428035 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.883912853 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.875631187 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.214169151 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.88551432 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.890339283 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.880628387 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.876307022 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.04903408 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.884267563 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.035732007 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.883636623 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.879867849 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.87503679 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.122629843 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.886102664 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.360562697 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.884494868 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.875843962 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.980058327 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.042343466 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.360679919 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.885572876 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.049803045 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31081055 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.898194002 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.88316182 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.316101045 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.902948014 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.884440509 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.876406404 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.876753492 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.875662881 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.922484435 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.890110632 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.291913371 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.372313196 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.226593221 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.89916118 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.889917096 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.874860741 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.21930892 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.882877866 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.876107923 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.115259476 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.366539402 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.888800284 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.8930717 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.356136105 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.890315201 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.893861402 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.885262437 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.128353652 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.889001397 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.921441396 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.877785681 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.884140037 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.87885946 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.89337462 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.884758683 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.878520918 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.335329834 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.99852887 seconds)
  done (took 232.607334316 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.87148419 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.871307671 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.867367572 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.872573842 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.870502573 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.877490748 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.869828359 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.871332221 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.878339985 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.868345818 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.870112781 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.87029392 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.872426998 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.872350052 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.373854391 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.89346797 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.541015202 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.888936763 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.88753549 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.885664847 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.566590821 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.896233233 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.884009518 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.886703555 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.886936967 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.887986395 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.890198046 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.919966802 seconds)
  done (took 168.297964767 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.893395231 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.069387482 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.90984285 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.928511831 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.902113003 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.892167385 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.916074987 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.916517939 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.900490987 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.891258724 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.891589415 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.954897895 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.907680875 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.032123672 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.92612841 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.927235466 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.999872505 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.901927066 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.89317239 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.892216427 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.921799113 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.890529392 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.955937402 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.022092001 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.911702352 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.012336916 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.899230397 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.896378786 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.892963127 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.011627781 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.90887961 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.954943864 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.922936089 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.915493654 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.018910271 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.010446263 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.0010111 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.923670451 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.899717708 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.893317115 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.893100696 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.883979691 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.011527554 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.912938038 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.895267196 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.002923281 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.914120887 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.898002154 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.903730134 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.894678669 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.908840382 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.913815233 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.963331073 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.026562945 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.928054933 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.923974491 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.919259 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.188421378 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.906967783 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.995311447 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.889727508 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.01362518 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.915104682 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.885560694 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.896468192 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.899531631 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.924195596 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.925931241 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.001009787 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.901677772 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.994460802 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.930448927 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.903986137 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.899446645 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.906730886 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.021146383 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.01998657 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.932321263 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.934628124 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.929469418 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.894027135 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.896268967 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.885471901 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.913849336 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.901488437 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.016509406 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.01453417 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.90433201 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.898183899 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.899237042 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.899491771 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.92112269 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.022743806 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.932501296 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.995560972 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.964211227 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.971121131 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.910460191 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.910340872 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.900964431 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.960456761 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.910342517 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.909083493 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.238328739 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.970536045 seconds)
  done (took 205.484029025 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.381874793 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.950099022 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.954266484 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.203789498 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.318492321 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.791447277 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.944000922 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.948467281 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.970845942 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.142995574 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.022292439 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.969332359 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.935659006 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.91993764 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.946628635 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.966098174 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.956743883 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.290667677 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.080308362 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.082947026 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.927855138 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.225829589 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.265730777 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.369624975 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.984777066 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.2892889 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.633595123 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.196511468 seconds)
  done (took 62.500039391 seconds)
done (took 823.281170593 seconds)
SAVING RESULT...
DONE!
