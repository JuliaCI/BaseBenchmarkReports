cset: moving following pidspec: 7114
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.63575462 seconds)
loading group "shootout"... done (took 1.25802945 seconds)
loading group "string"... done (took 0.416437025 seconds)
loading group "linalg"... done (took 7.830045445 seconds)
loading group "parallel"... done (took 0.159210377 seconds)
loading group "find"... done (took 1.390322267 seconds)
loading group "tuple"... done (took 1.952438504 seconds)
loading group "union"... done (took 12.622850437 seconds)
loading group "dates"... done (took 1.348779427 seconds)
loading group "micro"... done (took 0.202090817 seconds)
loading group "simd"... done (took 4.388821134 seconds)
loading group "io"... done (took 1.013797439 seconds)
loading group "random"... done (took 8.784050534 seconds)
loading group "problem"... done (took 1.536684977 seconds)
loading group "array"... done (took 19.460694109 seconds)
loading group "misc"... done (took 1.495803868 seconds)
loading group "scalar"... done (took 39.724642657 seconds)
loading group "sort"... done (took 3.131605569 seconds)
loading group "sparse"... done (took 11.845525411 seconds)
loading group "collection"... done (took 17.550148102 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510848069 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12283916 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126311988 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117033744 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146367762 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115807746 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121278628 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082177794 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.80403075 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.136780901 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111092884 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412379161 seconds)
done (took 5.131484685 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161388781 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091530328 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082824538 seconds)
  done (took 1.265992271 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062510341 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131124939 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063486596 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064639508 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064226118 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063880528 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064118931 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064104305 seconds)
  done (took 1.607888956 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069195094 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065013103 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062762701 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06416158 seconds)
  done (took 1.356701168 seconds)
done (took 5.563693508 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.234027197 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.097793348 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.276988559 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.438641894 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.594300156 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.08870049 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072110542 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067938168 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.123908722 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33018722 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10041718 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178259192 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086708832 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.176610843 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.999640594 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11634934 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082943387 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.119686045 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090614585 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128441819 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.383634235 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074715224 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.070776427 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067185807 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068078626 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.642843831 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658301743 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128468157 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080402127 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160136265 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113278299 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.660134786 seconds)
  done (took 10.639301491 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090124369 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.08827242 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066005484 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121140303 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090371044 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066498211 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072050042 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064725922 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085243116 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.120109087 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086937868 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.094804404 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063761152 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066061441 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071604462 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.193172776 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077201992 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077760218 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064524879 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076866112 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103001664 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075596271 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075269054 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07500444 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125682669 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.165659521 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093484959 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.0948216 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063616883 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.076358271 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119111436 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.122925551 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063501528 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062546521 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.116947625 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092121258 seconds)
  done (took 4.408814501 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.949645991 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08975613 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098116824 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.609432098 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063511255 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147523906 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.240118286 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070126162 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.307400654 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.146001682 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.137506344 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145343525 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.115416789 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06837052 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.189558397 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.114357187 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.478489258 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066517181 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065629059 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064325644 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.067150066 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066313326 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061985164 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068195255 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093241878 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086525279 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.158768122 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.912359209 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.235576988 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066110614 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163853031 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.087776774 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.357088527 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067299739 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081091911 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.409508892 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120134709 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062846587 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161405783 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.113125089 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06182378 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113340371 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075842571 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066241025 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066163912 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06639393 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06979885 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07725799 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.10074039 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064615099 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062597386 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081569027 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159650217 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062044666 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063216077 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064238034 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061627795 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146583203 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063005577 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062509205 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139816202 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062784567 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067244021 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.100600516 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066979669 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062528753 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087233902 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.09671967 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.328130275 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.02699409 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065781 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.063321453 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075823507 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064776247 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069843776 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065384876 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066648224 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065947416 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071968397 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067979521 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065812961 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105392608 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063614004 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067085177 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063738632 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068907675 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094301483 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06265862 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.471420211 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094336935 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063202758 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073535233 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102046201 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064241389 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.0684347 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064415434 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063732077 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063097452 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063353384 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066093299 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092101347 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066442514 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.217008042 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.033234515 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066316756 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06435158 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069344226 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067457406 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06942511 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063607364 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06663 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065469808 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062484436 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105911021 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063855504 seconds)
  done (took 21.279618188 seconds)
done (took 38.371558712 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.251449156 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078239563 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078819473 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079046043 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079007452 seconds)
  done (took 1.762680333 seconds)
done (took 2.947698318 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.105328504 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062142285 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098446691 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098200076 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062537723 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062601468 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096574778 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.06271264 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096422151 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098074384 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099750286 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099228866 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062879046 seconds)
  done (took 2.299118167 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067950599 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078696384 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079380896 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058912806 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068942872 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078408405 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06035187 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.082477771 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085600245 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079981215 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079443951 seconds)
  done (took 2.001094128 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066316832 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078034494 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082569754 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058974029 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069917864 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078670252 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058979697 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077609009 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082049401 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.079998053 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.079391875 seconds)
  done (took 1.982471448 seconds)
done (took 7.458798803 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063927883 seconds)
  done (took 1.218670782 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.507523323 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.222223814 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064919605 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084058192 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191998205 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.093074519 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.206664161 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068744385 seconds)
  done (took 7.772145154 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093278082 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070933789 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.066678102 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067970641 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067893602 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06759169 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.06646732 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066244172 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067183465 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067039576 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068196918 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068568097 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066885014 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066274236 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066185301 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067248915 seconds)
  done (took 2.367879039 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09531015 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095404271 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071341588 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072743827 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070208701 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069814944 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071344976 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069795112 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066712156 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068435047 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071633501 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070565008 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069864441 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061442096 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070912366 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072517693 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068414451 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071430074 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071987772 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072815712 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071729251 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06099432 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069556247 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07139533 seconds)
  done (took 3.009568587 seconds)
done (took 15.541983733 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110190993 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073821659 seconds)
  done (took 1.348640982 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066608119 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066785304 seconds)
  done (took 1.317027273 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.071987927 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.05830691 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078131055 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069919643 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060383567 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059944762 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077810692 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060129701 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059736193 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060178616 seconds)
  done (took 1.840856151 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060991535 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066821354 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06529071 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067086786 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066242384 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061308102 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063879077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061202035 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068876756 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060067249 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064930967 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080021179 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064087762 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082152809 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064396086 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064761102 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067288061 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063981186 seconds)
  done (took 2.379203307 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.05880269 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.05965623 seconds)
  done (took 1.314908619 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062814711 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059773379 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063042796 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063012925 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060825913 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059983591 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060704011 seconds)
  done (took 1.617308301 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402270886 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116027906 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331725755 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066514947 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07636529 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249142738 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061886762 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067272631 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067003095 seconds)
  done (took 2.670538202 seconds)
done (took 13.682389339 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078210716 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081802424 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087650626 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409200829 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090562746 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064927585 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110910917 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.173032423 seconds)
done (took 2.304852205 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214641353 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.349523961 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.909184298 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.068709924 seconds)
  done (took 3.522500412 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322874818 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.076351482 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076311535 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066417223 seconds)
  done (took 1.747554468 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062264551 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069404048 seconds)
  done (took 1.331424835 seconds)
done (took 8.022961911 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061765213 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090077996 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062071768 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062666832 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062549669 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062648739 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.0623334 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062170485 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062036322 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062312223 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062302185 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.061718006 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.061887897 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061898022 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062036424 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062352478 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061608631 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062320098 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062418653 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.062002645 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062541485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062281769 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062493496 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062702163 seconds)
  done (took 2.749495277 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076816942 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062844434 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065236004 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065432747 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066137248 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065292541 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065589496 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063911122 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06565381 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064160765 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065737445 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06586507 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063628323 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065897247 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063998779 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066033755 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066017647 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064088548 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064146738 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066126896 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065706117 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063947838 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065901613 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065490847 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066080302 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066490015 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06399582 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064305101 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065721923 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066038014 seconds)
  done (took 3.18201102 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061748716 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058868536 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059679481 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068140079 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05863047 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.0588012 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059025754 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0586859 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058836685 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060182379 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059036847 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058921291 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059590232 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058213349 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058494405 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059549485 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063105697 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076674257 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059090797 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058834649 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.062320446 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058865977 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058446954 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058840156 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059323508 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058970322 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058264344 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059052633 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058258233 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.05920147 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058581076 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071505511 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06355658 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059263633 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068330447 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063048951 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058654723 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06251987 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060264218 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058589312 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058558973 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0584732 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058606295 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058599339 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06764992 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058870179 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05964716 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059318335 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058753777 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.058135425 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05828508 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060967779 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063544191 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060068305 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058151971 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059752264 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058351804 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059341028 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058519634 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058390846 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058517218 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061656667 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.0603881 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059484138 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076440289 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.060368908 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067992036 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061792324 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059569895 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061977228 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059043586 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074818131 seconds)
  done (took 5.597669847 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080980449 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085176106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063991753 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063577401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059322458 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05919308 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066968376 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059166557 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063753813 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079056647 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059046803 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063655335 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063577306 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064393859 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059302986 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063445031 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067577295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059627541 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05948094 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06304316 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059436915 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066717614 seconds)
  done (took 2.65914451 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135410923 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065203897 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102058745 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074539943 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067327071 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074585225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065029393 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064495825 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064693121 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065656592 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065692836 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065098726 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067394856 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065705598 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064976864 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065009369 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064854332 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065263967 seconds)
  done (took 2.521305478 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074128446 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064903514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08720435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064967048 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064881984 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064622024 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068437852 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069058798 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064135562 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064434892 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069188279 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064113291 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064397621 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064570308 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064076446 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064397176 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063992546 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064480346 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068626468 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068478605 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068419715 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069062306 seconds)
  done (took 2.700754591 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072165653 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063047208 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076902918 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065154656 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059456199 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059239381 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064380701 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063557228 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064331905 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063279543 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064082496 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059216094 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065279726 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063650656 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065575999 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063572194 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06320397 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063657358 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063474149 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059291925 seconds)
  done (took 2.504590375 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083690145 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061984415 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061713344 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080697559 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06207948 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061718015 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080635228 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061853582 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061900098 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083436809 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062196061 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061998793 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0806786 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080337076 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061955559 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080745508 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080687851 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080539245 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062194129 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062424088 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083513784 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061983494 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08087915 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06224739 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06275315 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062334138 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062005043 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081131986 seconds)
  done (took 3.193257624 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061171889 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061141867 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062232313 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062197212 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062142618 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061865765 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062332984 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06227022 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062114272 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062799201 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061935488 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06194732 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062210237 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061552243 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061721992 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061890504 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061533176 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06272971 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062025653 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061983573 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061746379 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062123779 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.061912509 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062257701 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062695739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061844343 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062226816 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06219439 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061687866 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062105888 seconds)
  done (took 3.08867795 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070161029 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069887151 seconds)
  done (took 1.367621502 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059706646 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073592528 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059204709 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068856806 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067825676 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062464363 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068195719 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067764262 seconds)
  done (took 1.751075265 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06509388 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088894883 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060997514 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062075921 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064652444 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119008932 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075527111 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.074343534 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073540188 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063059176 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061341404 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072394612 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060137002 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072526478 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062356124 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068414315 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067346901 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071964903 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072848207 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059287303 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072126995 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061600538 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059898121 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.062011913 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060549812 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066910511 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075402471 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07200598 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068716002 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058163642 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078398804 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05940544 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060375277 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068527792 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064184701 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059693975 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094942522 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060266099 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065481766 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059241333 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070996151 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079388378 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07277509 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076748591 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061582906 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061824062 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058993746 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061857947 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063010976 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068484173 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.05925407 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066128786 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058992697 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061127987 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069495567 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059615573 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065258924 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06849716 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072014433 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069361182 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071224722 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073796771 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067585673 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068024799 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060125833 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077806476 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061022519 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071542816 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073067556 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060547351 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0725095 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058760645 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05779377 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059131737 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091949217 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061115721 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061258307 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059536977 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05968668 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.0613336 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068633897 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065036808 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066325318 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063425484 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074295319 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067697526 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.05944418 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066528762 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076614028 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062249166 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059579672 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075231272 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062326247 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058905694 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076213396 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068227653 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061117032 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059802163 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061984745 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072019734 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060460552 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057855469 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066870985 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060868786 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061631244 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063477268 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066416891 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058532201 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068194143 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063464666 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060295515 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057117877 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062438372 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05940936 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05728697 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067162428 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058373614 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072433984 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064508121 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.071672283 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071972259 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068230876 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073253082 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058262214 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057134151 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075603737 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067236287 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059897451 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074926613 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.191048416 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069696421 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060580445 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062568512 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070226182 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060193707 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062977535 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060519243 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066026698 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061598261 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06259587 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063982279 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067871591 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072391897 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061098297 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068604388 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060151143 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075210346 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069141854 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063864107 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064182688 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061132071 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07092192 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065844599 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068553168 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059367337 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060156851 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059763369 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070509092 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069174151 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061764404 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067861777 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064227242 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060434511 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060636112 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061280252 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06317757 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064408529 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06071645 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067387998 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068372315 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.076408564 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068264716 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068225812 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058794914 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059649249 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061848039 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059529586 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064187928 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068575135 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074177345 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071161343 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080070533 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.05960432 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06879186 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061288673 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075665979 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07190016 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060952568 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065459306 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058463398 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061326233 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068479327 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070587257 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.073155423 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074071467 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063853339 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063888378 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059128047 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073292601 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060134367 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067328819 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068958542 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064661195 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059599284 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061280778 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068427066 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064050789 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059866326 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074147177 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066516963 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059534307 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07286615 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060177716 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069772594 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059573228 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062931567 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064779624 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061738599 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06901039 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073906144 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058722578 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060684008 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074561484 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.06235052 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060997067 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066735715 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073610801 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064362905 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067128907 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069711292 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068573644 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063414608 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067900591 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060458081 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.067854798 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062608438 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070550336 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059118792 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076097792 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058185414 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072842831 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059027851 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.069174957 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058785756 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067442915 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059639868 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.074505856 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060210147 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059908872 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069691551 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057439024 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067325232 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058563223 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063178133 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06451961 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067728546 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06050043 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067380972 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06065342 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066863171 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063248309 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066625323 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067216301 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.199649451 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060027915 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06919819 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071884753 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06948669 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.062716867 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062439386 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060901648 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069643965 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061989005 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061354827 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067688875 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064195158 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065592692 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061634794 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062124962 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061764796 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06854561 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06926221 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077166164 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068164686 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066836198 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068474163 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059599769 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07510044 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059655797 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067555783 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058674967 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066605591 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068652331 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060510479 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078708494 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061922502 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067379589 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072721748 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068269471 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063277678 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077256823 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063110404 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067730492 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06776041 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064462915 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066124059 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.0616668 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067946566 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068751661 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070024854 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060795233 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066734381 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067951984 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061841277 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068293053 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061284055 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067198137 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061324623 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058671703 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06397103 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070778978 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064209276 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06449784 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059945719 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058447039 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060031711 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067658224 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06374123 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067817957 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074441131 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058837824 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060868427 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059390387 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066091188 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077375038 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069314784 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066970328 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064165911 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058722346 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061698779 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061752239 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060186034 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063433997 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058850336 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059629748 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070416173 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061735068 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063740237 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060000979 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061004365 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068559106 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064871757 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06055013 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066213378 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059199241 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065049919 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.05913614 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061344341 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064172538 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058936075 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06337534 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069701255 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075390392 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065854762 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067708666 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060887901 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067287404 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073850668 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067491735 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060625648 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068178071 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058566427 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076651212 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067842321 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067298487 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068444342 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059657189 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074291917 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062691834 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067784577 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073052377 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05945734 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065286124 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058285744 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072707664 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062479489 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058158258 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066225749 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065632403 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064115756 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069498267 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059311731 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065951736 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063810062 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061912843 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059899514 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060303644 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.207389757 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075317075 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060635046 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064691913 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067973052 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068813196 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065453268 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072401409 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068632074 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061647535 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062128209 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063920683 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061680475 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071434 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060348709 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063620221 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063802957 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059389004 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065590021 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075545162 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068716183 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069297881 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.0598324 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059552172 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077338177 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063253992 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063654314 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06755105 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068898579 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071960879 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069340744 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076228157 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061012036 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065515781 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072431683 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061007848 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059205993 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062999978 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061071581 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068547556 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069346059 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067059883 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062312244 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066155923 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072539636 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.0611765 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06437267 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065115193 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060880938 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069895785 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067195814 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068012374 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061068204 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.05985381 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062743239 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067991864 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066663496 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06810883 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060966544 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067488605 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073173505 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066781936 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063154847 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059257392 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063332992 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067864356 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065101089 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059223083 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063960905 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063242835 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067737232 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069058114 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063501812 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059252409 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075794963 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06769823 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068662143 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061805156 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062500385 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060307118 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059962355 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070507236 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059840567 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061843149 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064185013 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061861648 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.077054757 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067589552 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074820415 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061032879 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063615419 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.05977599 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06882263 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064175201 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060048074 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069800253 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05914502 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074446394 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071430826 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.069128437 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059907477 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.0642374 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067550933 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074251428 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069240394 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067855145 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063398677 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068692221 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061210628 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070452845 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059577648 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058190138 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068562034 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067361362 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07108096 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058511304 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068754582 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060560843 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066325833 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066490865 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060448442 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060033637 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060110687 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067209479 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06277709 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067662599 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063035923 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074562899 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059473414 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068967297 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06736707 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068933918 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070962441 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070085603 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.205466316 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060404115 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068466251 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068727763 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062181858 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064604557 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064692182 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081595036 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061793983 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062228198 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073956243 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067718517 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060158497 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067557962 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064511111 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069485743 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060911177 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069870681 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064358677 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060818992 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064060016 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064156414 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059202018 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059992837 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059795418 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069091457 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064051544 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060078472 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078736968 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062614914 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068011559 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070870082 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065831942 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061953584 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058776433 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061098475 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072279068 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074853134 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062669357 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068383757 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061850915 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069098167 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058902557 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068164415 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084881877 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067709475 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059485453 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060264334 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073152258 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073985287 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063484863 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068420331 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069958231 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061448403 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08064661 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067466444 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060660419 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070156944 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062544634 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059290294 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.05879629 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061104077 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070715195 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059852595 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062200111 seconds)
  done (took 40.977359503 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096249332 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060987212 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059518916 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059973694 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071000876 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060580068 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0594382 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060852176 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060709976 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062481793 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059249658 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059626271 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070813967 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073332086 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06999545 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063782652 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059358117 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059888992 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05916572 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060665092 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070194011 seconds)
  done (took 2.704594694 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065599812 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074532324 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071129824 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076211705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0676415 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063956905 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071552991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063985381 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072166066 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069300797 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072157037 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064288721 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069363692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069282053 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06948965 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064137307 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071766522 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067774478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064257114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071485067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064425352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070998337 seconds)
  done (took 2.840717912 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059956962 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059484312 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068011108 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059048613 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058890311 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062716541 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059076883 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062930125 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062840204 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063658319 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067413295 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060052885 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058963953 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064378217 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059024976 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059935295 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.101235405 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060247317 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060465158 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059563582 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.0651397 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067879741 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059063511 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059087525 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06333395 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062449667 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059137351 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062210318 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059824199 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063047298 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060509586 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058578896 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067273239 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066938387 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06382597 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063165292 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06083737 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060245117 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059508056 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059000936 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067728989 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060927752 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059709238 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061014558 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068139454 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059339867 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058880789 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068070928 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059733252 seconds)
  done (took 4.401514228 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069696761 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108942043 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065351322 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090651137 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073081678 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066039161 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06496623 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091295298 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060508161 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061278955 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074182449 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074065694 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062518637 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063996892 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06651401 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062401697 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063061516 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061853557 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065269533 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061944259 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065679627 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066625784 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072562065 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073222012 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06357697 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06156121 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061947678 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064182633 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073257299 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066095795 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064634237 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064778099 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073435826 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064953997 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061925225 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062168749 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074070934 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062551637 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062193854 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060657677 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061861934 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063559099 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065669033 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072973861 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061301011 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065502213 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061341266 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059130125 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071590002 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060671744 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065699118 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072340505 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061924443 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061514414 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062790764 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072518646 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062713295 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061482712 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062666641 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071873927 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0595679 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062263117 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074651482 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062229083 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066051412 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073962864 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.0670521 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063542788 seconds)
  done (took 6.026059657 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068428478 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090046785 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070418623 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071022169 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070341517 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070519411 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070578732 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070149406 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070020966 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070757302 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070329819 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109280807 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066641016 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075276475 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070206193 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070052474 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069946172 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069914615 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070251266 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070036068 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070125196 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070849438 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070378601 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070759892 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07322217 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066380338 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070173889 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070094609 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071015117 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07000072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073093772 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070458077 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070382498 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070705462 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072893936 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070010179 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060169906 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070349196 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07131245 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07032956 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065969264 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071153391 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070565768 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066678409 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070365125 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070011802 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071146308 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073682853 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078449361 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0716205 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070434407 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071501585 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070563073 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07070672 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071251771 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078792397 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071199101 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071247052 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07081135 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071228426 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070919106 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077284502 seconds)
  done (took 5.807418422 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07346888 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065621768 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077100836 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061493107 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058167507 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067488042 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059532586 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058634674 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065571417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066960875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069487985 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069408295 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07159727 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069652632 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069294556 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071813597 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068979442 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069013709 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067391352 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069194813 seconds)
  done (took 2.707013979 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070757832 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075861606 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063963436 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06760688 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064141825 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067458187 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062847746 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063813601 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064374522 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064041619 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070588385 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070630269 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065483232 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069412797 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070011373 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069270002 seconds)
  done (took 2.427105113 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06518628 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066180475 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066117199 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060463331 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063270755 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.05894795 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060678437 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059284407 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059825633 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073670058 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061044292 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072347427 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061338293 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059415122 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060019604 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066128304 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059935987 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060695913 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060678228 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065859905 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067368954 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062036934 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064403352 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0608491 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065984053 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067879195 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062422467 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064225391 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060853718 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06105236 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066088771 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067329537 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060844281 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061277221 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059710553 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.061319546 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060603859 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061363509 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066236766 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060938376 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059506423 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06528179 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060526945 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061576064 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060233593 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060922959 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059825241 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065822698 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060677931 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065629496 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060458901 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062779953 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061138796 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067499109 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063126252 seconds)
  done (took 4.807349375 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07339117 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063296978 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058251616 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058253103 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063091675 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063627691 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063330133 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064575227 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065044112 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059173032 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065151273 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063989797 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064814198 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064396975 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065112958 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067085666 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059223662 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064752835 seconds)
  done (took 2.507127291 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069533737 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063114151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068497029 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063952482 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063830659 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063692249 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059474905 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.05947237 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05947609 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064182318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064369517 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063502746 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059493554 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064507956 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064152166 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064633603 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063740557 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059605698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064082992 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060237995 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063917266 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059715021 seconds)
  done (took 2.741161139 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086143479 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083309032 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.122795921 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078169919 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086145097 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070048129 seconds)
  done (took 1.882992012 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088428297 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101968646 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064334714 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06451343 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073685538 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06810517 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068030337 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068171933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0742242 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072733131 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068090555 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073894463 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074164715 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069997728 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073850736 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077169192 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067958744 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068224182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064405794 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076982902 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067904473 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074115914 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068216815 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067500853 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067823479 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069715146 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076784557 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072350036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07104472 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073932079 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076628845 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068001457 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073945499 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072104701 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064911237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073976289 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067945663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076787727 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074197705 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070434983 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064498965 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074328656 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074268422 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0701801 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077657799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068489014 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069494539 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068689791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068275534 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079934167 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074862701 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07035232 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074851602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077571656 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077633375 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079376747 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073566306 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070273392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075404788 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073037666 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070547245 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074884727 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070306851 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072550272 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077414117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070573935 seconds)
  done (took 6.147297243 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095775818 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065038305 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068881435 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073279063 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070549684 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068402212 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068239217 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068305786 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068090453 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065285077 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103241054 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068648901 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070027171 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070675524 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068266686 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068680504 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068224602 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070205274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065760317 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079464822 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068048583 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070266143 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070301634 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070168521 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072757299 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077386619 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068348248 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068831779 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068169833 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068209287 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070312784 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068098744 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070022281 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06516482 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069923917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068038207 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068176468 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069945268 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068093515 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074529721 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06992047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077232126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068116711 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067843702 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072727923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068329521 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068353474 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064996112 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068174524 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064663205 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072029499 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071324645 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071337028 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070349699 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067813581 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06864211 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068712711 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068139047 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068793312 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077174082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07079728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068372144 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079513288 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068395692 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068298285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070461025 seconds)
  done (took 6.04322568 seconds)
done (took 124.542494511 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205681684 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182553105 seconds)
  done (took 1.73169084 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0714097 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094320154 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072594441 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130784637 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069107734 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103018413 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101645961 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.072590922 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068367278 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067961418 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068407591 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071427373 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136040941 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068409406 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068556123 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071048079 seconds)
  done (took 2.698612006 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102766141 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.177932109 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109159212 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066536572 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102534722 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073472567 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06649555 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077988574 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07159703 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071983082 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075686192 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074161084 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071713439 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073652973 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071982819 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075518472 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071835146 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075485092 seconds)
  done (took 2.877825064 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091750062 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083706052 seconds)
  done (took 1.547139167 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15143427 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10216332 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140702581 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.317080994 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.130875682 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.12518922 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128631308 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.123640675 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107477971 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121000146 seconds)
  done (took 2.812714107 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099148288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172620602 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305235909 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119523894 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075083804 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100760216 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120530025 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080854018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079352422 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078936365 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081627113 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075711489 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097004333 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075618013 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075296295 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075791819 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1007505 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074956873 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074237411 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074948185 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09991198 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068788995 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075463539 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074751837 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077217752 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076819574 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070296423 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069230415 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075060507 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074013205 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077413601 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0979776 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077504545 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100304857 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073511148 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101267907 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074452203 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072811512 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073294143 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072939998 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076198785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076297858 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077402942 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075744614 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070441158 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073722219 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070364557 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068875463 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077893933 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06942712 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076849881 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075303631 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097167852 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068056677 seconds)
  done (took 6.067404854 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105041988 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103381669 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067192298 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109763923 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10125318 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067268445 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101790345 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096615497 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107779666 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068830536 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068069395 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068367078 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076271279 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079492433 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112190814 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103695235 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068308259 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067274607 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105582399 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104689273 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067089289 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099567919 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098141157 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105496566 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067449421 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068651422 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067203271 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067550733 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074293898 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074867789 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068084148 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075833834 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08217041 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072719419 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065384327 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065564184 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065357989 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07279106 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073752945 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073755423 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072065904 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064680543 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065855368 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066015119 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067182597 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065021413 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073197858 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073620433 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07226639 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065534482 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065856503 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065470134 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065826414 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073031081 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072781888 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.076715355 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073674748 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065194424 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065462589 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068604618 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076894274 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075386778 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073693544 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066559009 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075317713 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06676105 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078443432 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079975345 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066290903 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065942908 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065917923 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065586219 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067818416 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074204744 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074688613 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068079115 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067186401 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067318306 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076754419 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074215047 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066811261 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073438797 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06657419 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067384896 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06767563 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067762034 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073840895 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076062749 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066821394 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066290138 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068029212 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066418811 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064991936 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07316151 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074325935 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074242965 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074164715 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067110785 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07401014 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073646186 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067154121 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072902726 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067188169 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067255758 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067079796 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073170966 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072727676 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075420284 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067010619 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066370067 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073260152 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076046509 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066589284 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.207142435 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077450293 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076170506 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067981525 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081768829 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068514639 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077827798 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066667617 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075628972 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06677024 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073345786 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066554125 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067579969 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067575276 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075454418 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068404274 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068020662 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067984287 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067902173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075725375 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079326059 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069364488 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075861351 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075547361 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068729822 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074972003 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06791233 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076488588 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068021767 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068274419 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067394878 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077710088 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067970733 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067424956 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067760884 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077324583 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06800677 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077349725 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074819344 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067905945 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082065326 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077624449 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074807774 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078091432 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068427689 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067919847 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068186413 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067823848 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073918054 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075906638 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068408165 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067674069 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074487324 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078060791 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06640155 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074697565 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075237547 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074855911 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065709781 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066564637 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077607598 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076913953 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072884378 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074711123 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076179975 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067051206 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072959606 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074590768 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067957868 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081717444 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06805063 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078986719 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075370092 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074080598 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074325157 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076787598 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076068515 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075681136 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076718962 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06535164 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065921249 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074063173 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066499599 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066431396 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073650194 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068027345 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067734503 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078395336 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066446335 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074595699 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065194843 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073277007 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065198545 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066465907 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078272394 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066511476 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065999097 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07228671 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066149428 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.071998267 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074441272 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07122111 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064584689 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065449794 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071664838 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071866203 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064566129 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064441482 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067142533 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072917461 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.072766974 seconds)
  done (took 17.902726622 seconds)
done (took 37.022181966 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.200047333 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156587763 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190396843 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111291335 seconds)
  done (took 2.133899538 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.092084896 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094903869 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.07489606 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062651996 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.079826082 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062786463 seconds)
  done (took 1.884901946 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267708985 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.188796477 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170431494 seconds)
  done (took 2.035106121 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215615866 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196509137 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474267371 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291085617 seconds)
  done (took 2.688662131 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131857381 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079745785 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062978886 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073862904 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.107516082 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.138771499 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.088426218 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.111355761 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074675566 seconds)
  done (took 2.342227809 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130500463 seconds)
done (took 12.660313677 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.107451561 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.160185816 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.259621247 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.198393401 seconds)
    (5/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.076851165 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071106487 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067390615 seconds)
    (8/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.224493196 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.230422712 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120777019 seconds)
    (11/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.07720656 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071635243 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074973254 seconds)
    (14/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113988259 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168166873 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078134523 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068629299 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.216413921 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.210133812 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067161579 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074135421 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092246393 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.116826829 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073316504 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06798781 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.440971621 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073245439 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063231228 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152014205 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065385915 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063884733 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 0.256228733 seconds)
    (33/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072853705 seconds)
    (34/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07192458 seconds)
    (35/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094782512 seconds)
    (36/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198385907 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.076110504 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.206964862 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180049259 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088094894 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 0.172134139 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.231775138 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.180292518 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072543552 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064490338 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063118768 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07230865 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068355156 seconds)
    (49/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.169161289 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.085248852 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.148182509 seconds)
    (52/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.172637 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076311318 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07571076 seconds)
    (55/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07272758 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114808259 seconds)
    (57/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204481591 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.066243147 seconds)
    (59/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.196178946 seconds)
    (60/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075881843 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121446705 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083167921 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.171158233 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063900467 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073345094 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148838689 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.172717263 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157737693 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.142131866 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072831285 seconds)
    (71/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071456529 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062535475 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07824247 seconds)
    (74/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064747265 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090175416 seconds)
    (76/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.243909879 seconds)
    (77/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068389919 seconds)
    (78/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065870882 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.220387231 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.250616887 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075937982 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065079521 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063945555 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161172891 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066191722 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06464496 seconds)
    (87/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.086790321 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088467795 seconds)
    (89/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074547118 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077022874 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.143790372 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065203078 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070536616 seconds)
    (94/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.200431752 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076877254 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076235963 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.148684894 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065494645 seconds)
    (99/309) benchmarking ("sort", Float32, false)...
    done (took 0.135715704 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.148242597 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088887033 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064032467 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.223522802 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172901297 seconds)
    (105/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144170215 seconds)
    (106/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158126438 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171198704 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071813351 seconds)
    (109/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065785144 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073457062 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157430759 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.092466622 seconds)
    (113/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.142075155 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074350278 seconds)
    (115/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.064656166 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083426388 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065290644 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076903685 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075007623 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076697317 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065890293 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072943387 seconds)
    (123/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.148855184 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072478361 seconds)
    (125/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06557706 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131746375 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065025037 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066317358 seconds)
    (129/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065621768 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076608714 seconds)
    (131/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.066339037 seconds)
    (132/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064240344 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132126174 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063736684 seconds)
    (135/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.208043565 seconds)
    (136/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.064545073 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063775472 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064015092 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146969164 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09022107 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064541784 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074678648 seconds)
    (143/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.071797298 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151741987 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076707703 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.063690594 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.194970111 seconds)
    (148/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.084185272 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064078885 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076317852 seconds)
    (151/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.173923747 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087171774 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120947221 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072397609 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065354859 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072607153 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092356653 seconds)
    (158/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069402555 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063681563 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116807151 seconds)
    (161/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.147922727 seconds)
    (162/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072367281 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063164353 seconds)
    (164/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.216842326 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185299125 seconds)
    (166/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.146348409 seconds)
    (167/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072392595 seconds)
    (168/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065905168 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064182798 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151314578 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072032483 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06422953 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14821245 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065110651 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088396561 seconds)
    (176/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068627199 seconds)
    (177/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066502569 seconds)
    (178/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064646348 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074399559 seconds)
    (180/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.150239245 seconds)
    (181/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.185056256 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085891979 seconds)
    (183/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063049553 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06447541 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064994196 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065003661 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.138913733 seconds)
    (188/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066329492 seconds)
    (189/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064047199 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063812212 seconds)
    (191/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.157635521 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174672736 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.243213875 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.149552385 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080793417 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068227793 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067711851 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074109254 seconds)
    (199/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.075016074 seconds)
    (200/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073932875 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088920107 seconds)
    (202/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068601118 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089215478 seconds)
    (204/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143172936 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06595513 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090144047 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07272859 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06447413 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064338878 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188057837 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065721859 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169374468 seconds)
    (213/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.065720885 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077340006 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077649809 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071928015 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086533286 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065103444 seconds)
    (219/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066211293 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066301992 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074565321 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14531685 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.155893121 seconds)
    (224/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066126739 seconds)
    (225/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.065658487 seconds)
    (226/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089690695 seconds)
    (227/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095540984 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.125126486 seconds)
    (229/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.145829577 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072669944 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065844543 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071888354 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.1734669 seconds)
    (234/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.067003675 seconds)
    (235/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.066842343 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066636 seconds)
    (237/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066136227 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064585171 seconds)
    (239/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064871546 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090241526 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066186682 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064301395 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.064452197 seconds)
    (244/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065369581 seconds)
    (245/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072782527 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088882898 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124157998 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064242988 seconds)
    (249/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063900866 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090942186 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065471891 seconds)
    (252/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07673611 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063251112 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.155776209 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063639074 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067009491 seconds)
    (257/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065180291 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125529145 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067657551 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091163353 seconds)
    (261/309) benchmarking ("sort", Float64, false)...
    done (took 0.133885231 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14503266 seconds)
    (263/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065767145 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06446367 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064268472 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064147372 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064365661 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071840571 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064643287 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078673948 seconds)
    (271/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063747718 seconds)
    (272/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073224253 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.063943735 seconds)
    (274/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064565361 seconds)
    (275/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073338647 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065156045 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076594547 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.142325651 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066681804 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065283704 seconds)
    (281/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065583305 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06460031 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110262376 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065160256 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07246914 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06599882 seconds)
    (287/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065421453 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066124906 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064709243 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076307473 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064853134 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092461761 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067239287 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066197311 seconds)
    (295/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065169494 seconds)
    (296/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.065091485 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063849733 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071852486 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071650774 seconds)
    (300/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075860124 seconds)
    (301/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092966146 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064116373 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06393229 seconds)
    (304/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065192411 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06516892 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063946289 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176848465 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124345142 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129369625 seconds)
  done (took 32.92614785 seconds)
done (took 34.358783066 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084609556 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09076612 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072985747 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.085395615 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081319443 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100510127 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073150734 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077652219 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080488512 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078530182 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078639796 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072119222 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074287279 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074435265 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072207316 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088696048 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079722573 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073213959 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074207733 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064265585 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073129878 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06509335 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064101382 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071389104 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077190629 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071902425 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074327392 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074205793 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065370767 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065531344 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070012144 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07432165 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067756574 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077552626 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073479282 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073737472 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075163587 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078008995 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064356639 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065282357 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075303011 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064952768 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073157288 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071544526 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070467464 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072019742 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073422751 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076846555 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087564802 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070118684 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075855337 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075972763 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.0763087 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070488478 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070256887 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073396218 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071255172 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088056007 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073850495 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069738294 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075137281 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074738359 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071763259 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073439236 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073313337 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076438557 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07718141 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071855088 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075570464 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072458332 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064288241 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073168241 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069297959 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064662382 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076562366 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078137613 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063574277 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068724015 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072722236 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073535358 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064263137 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068999052 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06404457 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069712309 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068802875 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071511308 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070324985 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072046613 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063948607 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073291763 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072231162 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072585995 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064283154 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077631836 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064469445 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071393605 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065323036 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065061653 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063718995 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070480149 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064232661 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069390442 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073272967 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06369586 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069672692 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078139778 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064674082 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072113063 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063718085 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06400054 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075296021 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076385073 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064937778 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070009825 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064049444 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070562778 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064257551 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06483075 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064650025 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064809448 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069546599 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064908334 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069358834 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070787768 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079487804 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064669416 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069712056 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069336957 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065083221 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070844762 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064272706 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064064529 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063025496 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077450898 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068427709 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06427711 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069979512 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068449177 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071937435 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062547414 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07230126 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069976416 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06815157 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070367867 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062454906 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.218021505 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069826528 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070708911 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065376165 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065397294 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064571451 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065299593 seconds)
done (took 12.58207044 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064035617 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.089276502 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072693545 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.081622562 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077583176 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066113362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.069270377 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082211791 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068093346 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084262402 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087895813 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086350482 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.092083146 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06439655 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065226604 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066157204 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064333807 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072818994 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.080162135 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087053952 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.095132432 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064858754 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.074068 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081055469 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075953634 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081501019 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06652201 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065853681 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067811274 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082578784 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090474883 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.065123574 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066839708 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079173327 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078838129 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072112348 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065993171 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069378407 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066122836 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065329213 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067242674 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079395208 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072105925 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.069622971 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065981653 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065912824 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065155029 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068793095 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.078194217 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068620661 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07328495 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077058816 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067306828 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06525248 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063449169 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.069386623 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065008813 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065790936 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065859301 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065455606 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06555313 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067586217 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065993674 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.0660504 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068735028 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.068135316 seconds)
  done (took 6.272875547 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081413499 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092553831 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082381976 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08259558 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065459098 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066173071 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066411657 seconds)
  done (took 2.074538796 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064139427 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076779244 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082250102 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082215567 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.074670202 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08411351 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066361371 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095936685 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06478467 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.078076345 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.111983219 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083137709 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069239438 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07704053 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065836384 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.07325271 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065852786 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073923731 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074287021 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081985933 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069520529 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094126694 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079828824 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066348211 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.086268951 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069990269 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064707036 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066069519 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067154661 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06689798 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066509559 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104893648 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069772526 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079951517 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067804301 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064989971 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071639422 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069289636 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.068327492 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07206016 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.071116343 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066933256 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064337646 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067245745 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068636798 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06974508 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064269073 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066887116 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066546659 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077938163 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06492032 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0696309 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069085521 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071156831 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071739225 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070218187 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074107876 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067234758 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077693098 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073533639 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066571204 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109186229 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073057823 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.071182034 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073909652 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070402352 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069538006 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07067756 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065641798 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067638762 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066942231 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074041903 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.065399256 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067451583 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068917412 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067638405 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069640918 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082570466 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.082885124 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078556971 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067625297 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067088191 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069526408 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.082468174 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0704867 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066768049 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06881956 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064911386 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070054649 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067316359 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074055634 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067393463 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074755511 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068339664 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069632557 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0742394 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065347694 seconds)
  done (took 8.580142439 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066347603 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065649853 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067204375 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067373482 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066693563 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067201759 seconds)
  done (took 1.973039067 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.087227576 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065079579 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079873036 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066688613 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101938572 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073362084 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073633033 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074786376 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078911901 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078164247 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072756227 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075167388 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071883047 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066838542 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070376088 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066364451 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072907031 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068684379 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077575608 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066846677 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077564339 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066493871 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065901483 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.075449221 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.066463759 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064904729 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065709285 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07791766 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081155596 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074502771 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067846821 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.069014024 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074366662 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074689861 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.073135031 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074253238 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066062065 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071733751 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068260272 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068835269 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075397062 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068102177 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068821594 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07197377 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074450642 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074089153 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071433431 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069303973 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072500175 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071652203 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071947791 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067030074 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068922515 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071836209 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07424746 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07464761 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071640343 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.07238624 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067551787 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074330843 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066199151 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068888715 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074221104 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068786428 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069772923 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071415841 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073776399 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067914563 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06839808 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.066154378 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071591493 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066458076 seconds)
  done (took 6.717425652 seconds)
done (took 27.146048436 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.560191289 seconds)
  done (took 2.076501638 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.561811146 seconds)
  done (took 2.117942462 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.679343691 seconds)
  done (took 8.231375409 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.29164135 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.321760504 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.712292219 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128604998 seconds)
  done (took 3.038500817 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.723174207 seconds)
  done (took 2.285851864 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231535337 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226559626 seconds)
  done (took 2.032875145 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.341393694 seconds)
  done (took 1.897729573 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132688072 seconds)
  done (took 2.684174816 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.220434782 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16003973 seconds)
  done (took 1.947552949 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.483723441 seconds)
  done (took 2.043221842 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.053228675 seconds)
  done (took 5.617948517 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229698979 seconds)
  done (took 1.823863955 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23212587 seconds)
  done (took 1.798804157 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.747497954 seconds)
  done (took 3.307614321 seconds)
done (took 42.470769456 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080553094 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083768987 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085449572 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081092741 seconds)
  done (took 1.869079583 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070874476 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067245056 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071834144 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072934896 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071219699 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072023725 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071741582 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068624811 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070754431 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.069141609 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068023569 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069220793 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071687746 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068971574 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.071808071 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072771437 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068916028 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068428211 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071993961 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068340983 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071539359 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068972244 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067310834 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069132716 seconds)
  done (took 3.246192983 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075610977 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070983167 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074181695 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070803219 seconds)
  done (took 1.861411934 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072932093 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083296671 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086305568 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092127846 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075484751 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074847709 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082162919 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083849207 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064887139 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085816044 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.068021184 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065851136 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066392594 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085921725 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081767793 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.062112761 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063665154 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074894739 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074121395 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076741822 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06784728 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06505261 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075353506 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07455079 seconds)
  done (took 3.373631656 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075981023 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063008473 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076327503 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089095486 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092562611 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064999712 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079294251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093255765 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126767032 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064877686 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071089104 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064675612 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106707226 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064765048 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080412988 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10739315 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110368053 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068386772 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097491967 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064668834 seconds)
  done (took 3.239749648 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074874185 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066897486 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068011021 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064463158 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077020203 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073050165 seconds)
  done (took 2.000643575 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065696291 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066691308 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066911413 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066577918 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071273163 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066489734 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065376558 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066809422 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066886889 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06632474 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065639312 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064410448 seconds)
  done (took 2.368216093 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.164696373 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.0660643 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06764272 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065934087 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068876524 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065182863 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079712589 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06805848 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.084158401 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066330979 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066344045 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068022733 seconds)
  done (took 2.500959265 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092814332 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.091581198 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.127084579 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109172261 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090688943 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.093044887 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.14675353 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.134270434 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110901288 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.069267615 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082677787 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.10409419 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100275683 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137137775 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109501604 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072330633 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.099211186 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080818807 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104061593 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111563863 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10862577 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.111713143 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088637022 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100564607 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102026427 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110003203 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069129189 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070006221 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132994067 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.09536587 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086663649 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090919782 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107242792 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.066573526 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084319672 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.09964765 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08423316 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102588783 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08747679 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095430844 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076738632 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.123154638 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097212503 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103070808 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120425626 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092950364 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104204855 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101295177 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083394786 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.115175751 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095540763 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091697319 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075747738 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.154584837 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090976906 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.104847793 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109896439 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080764006 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.086708922 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090971983 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.117573588 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.093991051 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.252856367 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101320523 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085891442 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089789709 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130143682 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082757826 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099968335 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124665231 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087217702 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073018993 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088807904 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.06728273 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09510339 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099383714 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091241947 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107671319 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080294167 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118676216 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104905944 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071080134 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109613473 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091567072 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154259735 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098517407 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102285372 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089800079 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.144623601 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086007448 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07980658 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093736838 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130858917 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088720218 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094626616 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12521169 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09069394 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082966308 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074971053 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.085182345 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094671068 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110066192 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098327044 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08949173 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082701878 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089741902 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074708671 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080694103 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097660614 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088729437 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.118950383 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104769236 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114593864 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.078601963 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108114725 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.093115225 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132719812 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.117226297 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085302729 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109029114 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135606204 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.107462843 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08406604 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100832176 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113434887 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103762923 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08800549 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13425081 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112295428 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.239064244 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089916867 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091842938 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.107146518 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154124457 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09082014 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107666807 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136778085 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.106884483 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093787129 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.083197575 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090514056 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107250658 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138655158 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.093130442 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.07080869 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095759661 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130287554 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076663475 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096416983 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.08944219 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.085365993 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082305272 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067761056 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103043291 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134631807 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.114883584 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100301004 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.093342238 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.066952133 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098063098 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096584403 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148303959 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115589844 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098155132 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092172459 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100590393 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079610104 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131143872 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.131100514 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09352869 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092469209 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125006529 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.09085747 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102891913 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109067252 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106652295 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.097889805 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.140008539 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123922053 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.11718336 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105688066 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126284345 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08108014 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108167574 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073921886 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103801515 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075744158 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101073878 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077635567 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109229148 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077758839 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09942324 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067764291 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073601644 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.102457832 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087056433 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084326641 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.128701395 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.120671399 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079254371 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089170708 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095480823 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095904704 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103334131 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.083636088 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08574526 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073741323 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.076267273 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08674734 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089946116 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.096481636 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074240895 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070775181 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130451238 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099897603 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087063125 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085823495 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.113264223 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080653775 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079622511 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098628855 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128721381 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.113283389 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075004777 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.086074133 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.066742355 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080728386 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.072219848 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10519736 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070610256 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104511033 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064109699 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.121644833 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081204946 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.093918658 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088399566 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.116098175 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082556892 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116482608 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081134091 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101146074 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090429602 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084430241 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.100585763 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.087350247 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094239783 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09885152 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082197763 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085351993 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115762431 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102642805 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109861919 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099841316 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126715304 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101103479 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071492592 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098122383 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.088599186 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14467899 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.362228562 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.087999667 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0926954 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110051702 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08694866 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146798308 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090029925 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084900585 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118296937 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.094461202 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092375125 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079195153 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.105867097 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089664308 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114222151 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.099678048 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.096254051 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109005207 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110447408 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088584458 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088812336 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128557844 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.130024083 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.103649225 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08926461 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090357931 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102433419 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096037226 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111633184 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082378969 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076593887 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.06907038 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.072749447 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.119262577 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104764579 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093672187 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093073814 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101274543 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070129311 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087301062 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090592183 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.08322546 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090978805 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114679749 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105273848 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130862414 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.103060421 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09389197 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.14045543 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130803332 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08938388 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092820895 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096686982 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074539695 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147485009 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113493394 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076085856 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.08228114 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077805732 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086775335 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.071005097 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107627647 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107145377 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077424062 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.100677708 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096336228 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.12001015 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093489908 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07777738 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081349107 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074420269 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074771736 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.256551113 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.075352883 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075549209 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125535967 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102127083 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103634122 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07877239 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073928391 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130841657 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.066728965 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131744961 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082528383 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108942899 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.080292687 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079749941 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091767144 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104799638 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10908249 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11472113 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070863325 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104544452 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153075887 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077029071 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075259088 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075149667 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113747071 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08894463 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147934826 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091094199 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089554801 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077189176 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12658305 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104597842 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083246166 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125380331 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079493327 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072301245 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083259599 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.109162571 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071963872 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075180345 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113522623 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.623508296 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091726313 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076899759 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085176842 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124763039 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082875821 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109832824 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.11971796 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107234195 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.18334201 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073245645 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092800271 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106532155 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099545871 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092428378 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080107096 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.088275055 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089314343 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.080467354 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108296566 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081802917 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088587795 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080832809 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105988 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.132194467 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085920919 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099338902 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.244906566 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088155218 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09911692 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107128133 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101516837 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.08640088 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089359062 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107811712 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083520077 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079995888 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101132248 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.077990309 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077973375 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1151097 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085805559 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093746055 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105559196 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.085827254 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11220407 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.120657456 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115556872 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099634267 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079269125 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086057555 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.088894853 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073591839 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079707619 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075931023 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071568241 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109577088 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087338306 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082108037 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10196726 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.107569664 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101304316 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109615644 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09194058 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096296102 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.10213972 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.128502199 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152690175 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099769021 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121628659 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13373296 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077657073 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076618452 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.080314399 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134485563 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.08104712 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09186068 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.233596274 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.078498615 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.081729744 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093805806 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109729802 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082631617 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08159937 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09984068 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113829521 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08544662 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08289474 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094911576 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.105355014 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131734386 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.089393734 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075791623 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112026808 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104135463 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125807863 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.073574404 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082509708 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.130498428 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087250889 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.254946992 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079721419 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122252702 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133605427 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075761506 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.091704353 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070965136 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089530262 seconds)
  done (took 50.396368072 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150863438 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.146019817 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.079302801 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.094625026 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190002689 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.206380601 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.116630229 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091848212 seconds)
  done (took 2.799070476 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064712627 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079116402 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099793844 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083147737 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0656257 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066251381 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.19851431 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082698723 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066079437 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.106058591 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.0758298 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067984443 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.363371339 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065464111 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066671368 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.074854273 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066448754 seconds)
  done (took 3.401606666 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.35389131 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613649791 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.323266683 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072883161 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.962853815 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085850969 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.146719669 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138145991 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079043653 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535859261 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36697069 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129781528 seconds)
  done (took 18.527303363 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072562064 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072751025 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.07744344 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077276346 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073857801 seconds)
  done (took 2.088431696 seconds)
done (took 99.260758621 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079631258 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.167907855 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067558274 seconds)
  done (took 1.984009426 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.079001036 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079245081 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080321678 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078220364 seconds)
  done (took 2.039713599 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07112712 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07420387 seconds)
  done (took 1.860852035 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239775939 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163411586 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092579098 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079415834 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076278192 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079160369 seconds)
  done (took 1.961363298 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068601071 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069252719 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071105043 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071078376 seconds)
  done (took 1.992034603 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064973908 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063827926 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065881295 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068361007 seconds)
  done (took 1.976782403 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08015452 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080334282 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074706965 seconds)
  done (took 1.94834972 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108771457 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095418077 seconds)
  done (took 1.916639552 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076981027 seconds)
  done (took 1.798421149 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.085495649 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.091204597 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.144913526 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109775112 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147684764 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131248115 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077495782 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077976538 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074052373 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.072986182 seconds)
  done (took 2.730357596 seconds)
done (took 22.501277253 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075466398 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363357066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357370508 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083618169 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667843136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353181952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.974128496 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087681355 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.095574539 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067526997 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085214315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647788403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961295979 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325528205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94550622 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323498948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669907358 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066145123 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064817909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065597104 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.94957186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06690215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067374158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068450255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.668382916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372914174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069242362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324747787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068279604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07039038 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355831097 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070374798 seconds)
  done (took 16.130026345 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067385093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118214739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070334662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080522282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067740295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066925918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068257811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065674989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10600811 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068624522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085351578 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06795461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073166058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070575545 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089347977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068924116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069804367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067338286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068527783 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067502238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083956397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066394727 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067223032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067437994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066647656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079010665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068846465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068301977 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066873183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0681828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069610768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067406409 seconds)
  done (took 4.080122647 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119828095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124676454 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072884481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106865137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11567261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067700455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14788582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090875965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114336003 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06880304 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086177206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06826044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104302456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070901357 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08731188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066376711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068364609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066719643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066291295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067684637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086118527 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06636337 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069541384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070105413 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070176821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0842223 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070709936 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069157161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069051999 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071722786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073271977 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070220853 seconds)
  done (took 4.386710287 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06727436 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071095221 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079148095 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080008099 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069550268 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068217196 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069900577 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066244591 seconds)
  done (took 2.30839489 seconds)
done (took 28.641879761 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075649887 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068064167 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071241109 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087210881 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073417463 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.070179826 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064442355 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07404162 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070835933 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071275093 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073233446 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066190167 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069750726 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064382223 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071856486 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066629366 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072584549 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070834498 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.071354581 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071658477 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067316998 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069524349 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072556113 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069004135 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069188996 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069509199 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073037855 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069923926 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.064633842 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066784809 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066074127 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078275512 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071136738 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070670159 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064191816 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064509047 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068134476 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067181251 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071546339 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073776775 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069331365 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075950679 seconds)
  done (took 4.660431972 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085338657 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090187222 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083396163 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07967749 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.100615084 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079532846 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087547731 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076089357 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074604308 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08690003 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071068568 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07598279 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07665869 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070207829 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077329072 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074358768 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080109374 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07379667 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078741319 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078480433 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092164986 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072969695 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079293979 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079805913 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074482281 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080513534 seconds)
  done (took 3.825788497 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069804085 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08407322 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08950956 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153425491 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109730341 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081149119 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081476274 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101408584 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099639197 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06800099 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071634711 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095745264 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095241087 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075559597 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.107989183 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085663348 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079099247 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069666848 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075224142 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101578036 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090419564 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085947864 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09986838 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086910538 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067569553 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076578126 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073975113 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082025772 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074604747 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078941128 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071469218 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070689939 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067929169 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079156539 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07156239 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065555164 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088462788 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079753306 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080837403 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.109627871 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076658547 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068881324 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096457882 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129290547 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067021268 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.070414589 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070781522 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079458124 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068562547 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095970938 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085571478 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066879873 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085337892 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068581709 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068394505 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083196115 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06887876 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069069667 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078846147 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073309128 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087264784 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072240949 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087443708 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067029326 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078116526 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068349979 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068914859 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066196013 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101715676 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074234495 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117946724 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067965315 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06540826 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080045174 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078148654 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073613614 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067058972 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08521768 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078542761 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070840386 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078402914 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070360583 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070692313 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.10106705 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065800632 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064905266 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065278508 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.069551708 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070185237 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067617025 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080882792 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066803759 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070617699 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082152114 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066994412 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06810818 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069836785 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069079808 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066528399 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078199319 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071556922 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068277446 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078920314 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068259103 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070843106 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081536444 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076304727 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066925926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068616355 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069672767 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068836268 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071855544 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070515729 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069306922 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073333638 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074475435 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073252612 seconds)
  done (took 10.939500373 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165110618 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159956974 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069941954 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154069326 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077072691 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07322351 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156419505 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.088922428 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068960393 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069838516 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068134795 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.097039945 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092527653 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106631998 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071637024 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068855084 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092213858 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.101411031 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159449767 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151271423 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092125686 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074319669 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069706841 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069331923 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070067084 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07673944 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086365442 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074501629 seconds)
  done (took 4.581555537 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074103264 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093122306 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072620849 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.079776792 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087819458 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069474095 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070861857 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069835467 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082916632 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07673662 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068871407 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073319803 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072041149 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07185691 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068717938 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075014281 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075204969 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067666112 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072388382 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073094545 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079130942 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094813039 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073090536 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068487454 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.070673793 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068404442 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07690239 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079851812 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068021093 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.082429781 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065077701 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071442796 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.0799512 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06687982 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066264153 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066615558 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066893754 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066338797 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066638799 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066899011 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066320558 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07328312 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.0678803 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075642603 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08244774 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076056159 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070328433 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071473049 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07142093 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066063329 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071613816 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.0718127 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071330453 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076689291 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072240462 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070952306 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072064697 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097979239 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074598581 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068091426 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067445416 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067069932 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.06944461 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077932955 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085690967 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069662954 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066880919 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06880443 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074007418 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082774006 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068111019 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073636087 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066037275 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068691902 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070678445 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071241104 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06995195 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067223368 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068374583 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068352827 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.068693258 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067966199 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068314721 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071170504 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066233805 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066972297 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068858234 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069669466 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076062001 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067401916 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07100294 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069662668 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067477412 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071330842 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074029264 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071799502 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083078321 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.0784641 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069301555 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06665679 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082536969 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070409549 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068289757 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075032037 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072187331 seconds)
  done (took 9.399336725 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08847058 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070704577 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088013473 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09416032 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078762743 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075242961 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082071718 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070112089 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084443116 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06833351 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078025837 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067539271 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083078354 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078750008 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070290297 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078830112 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070991785 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088567231 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082856636 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067148746 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077481839 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080498801 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080616565 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085697939 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084812579 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086240358 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080808403 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071906347 seconds)
  done (took 4.014191039 seconds)
done (took 39.154385017 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.831832284 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.998302851 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.815673284 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.037717353 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.880004331 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.029758768 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.905826164 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.8097843 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.873869744 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.838195735 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.076924014 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.24806673 seconds)
done (took 67.153475353 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.867710181 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.974085318 seconds)
    (2/2) benchmarking "String"...
    done (took 2.046000846 seconds)
  done (took 5.766656798 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.971192979 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.443608453 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.075948219 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.810890893 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.816671445 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.238147174 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.594378133 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.249769514 seconds)
  done (took 30.974781482 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.923158022 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.034455382 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.499780624 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.531965917 seconds)
  done (took 15.771431809 seconds)
done (took 64.187309905 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.833106655 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.807629132 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.881818778 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.831519314 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.803912558 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.806150751 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.808039842 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.805981297 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.816588851 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.855339234 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.802103351 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.798159041 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.800328198 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.799132754 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.292717087 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.843939076 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.804278222 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.801706823 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.816649935 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.831141833 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.806684736 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.980219807 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.290694598 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.995359178 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.407586012 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.11862002 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.172062077 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.22673974 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.800586531 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.797997495 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.839469965 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.060226405 seconds)
  done (took 205.075117859 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.804376473 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.624480818 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.68573855 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.813229606 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.056920444 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.98896638 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.901560661 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.180352192 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.807855875 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.824834527 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.945994828 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.803473755 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.985769253 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.73988989 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.836193772 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.889217907 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.961362767 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.99407601 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.839932747 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.951622169 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.823478533 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.780563422 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.721502955 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.936641481 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.827098023 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.824240117 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.809598403 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.823644834 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.984775831 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.949689685 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.848350556 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.820938306 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.979561586 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.664165032 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.819678206 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.828630668 seconds)
  done (took 169.811677976 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.98730359 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.808038662 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.801150194 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.848498021 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.924231024 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.804777799 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.459744322 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.804063019 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.174815644 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.799645714 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.80107275 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.80055497 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.801693288 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.813788267 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.876731775 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.798471211 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.815587155 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.803711561 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.827067708 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.801335145 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.801285847 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.801133285 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.801128812 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.801136508 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.801605626 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.801382739 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.443690656 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.044557288 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.803149141 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.801898615 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.87231293 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.815248276 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.832921702 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.798008426 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.893127498 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.851172205 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.914426676 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.802223443 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.01984907 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.875724786 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.802481213 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.802191258 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.866007839 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.814428508 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.802113952 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.797201143 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.808658358 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.866917884 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.04283429 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.803715239 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.924934259 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.805664661 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.282187323 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.802213394 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.802770087 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.802690722 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.802109582 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.387799888 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.805124685 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.803057814 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.803108458 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.808927765 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.808983487 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.803338295 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.803137023 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.802304785 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.184094594 seconds)
    (67/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.874402382 seconds)
    (68/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.979767965 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.485974366 seconds)
    (70/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.807868874 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.833887077 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.880344822 seconds)
    (73/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.80302623 seconds)
    (74/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.806182363 seconds)
    (75/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.803371741 seconds)
    (76/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.806032968 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.803303054 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.806806049 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.932872202 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.809127771 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.925685044 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.887962058 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.927842528 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.807072792 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.807293073 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.626061681 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.876668031 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.835290515 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.627644895 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.80805357 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.177228643 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.570368081 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.80583041 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.805436886 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.817378565 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.805530658 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.80790597 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.806415513 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.885056156 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.805496299 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.929903619 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.525452572 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.333171013 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.806528157 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.805238085 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.805938963 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.885900676 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.934926092 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.806101647 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.870326362 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.812178801 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.807454143 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.881003965 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.806862006 seconds)
  done (took 404.390574632 seconds)
done (took 783.063690277 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.384335383 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.355632107 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.446168251 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.370622132 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.350152496 seconds)
  done (took 13.641671138 seconds)
done (took 15.377590925 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.820545994 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.813721103 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.863593696 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.887861501 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.821662238 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.824064964 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.885304234 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.825875165 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.855035757 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.858989594 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.888661392 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.890194098 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.829769633 seconds)
  done (took 25.801063642 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.80951415 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.943890717 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.014373243 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.840104466 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.810438538 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.024546483 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.863593106 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.959333622 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.940243322 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.02462008 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.025097614 seconds)
  done (took 22.992249906 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.809693643 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.942268577 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.023774266 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.842864338 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.810507111 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.017042455 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.871230865 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.952382464 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.942785741 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.020300405 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.023213489 seconds)
  done (took 23.000104991 seconds)
done (took 73.529699092 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.80998177 seconds)
  done (took 3.546505376 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.819949941 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.94503084 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.806031865 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.804258653 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.810441951 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.804805644 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.803978351 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.804576218 seconds)
  done (took 16.336466793 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.805902492 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.806113975 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.805506945 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.804936665 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.806351155 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.80583922 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.80620767 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.805715768 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.806796966 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.807260866 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.806127948 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.805446398 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.806002343 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.806071918 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.807459656 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.806743642 seconds)
  done (took 30.6369035 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.809160906 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.80736219 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.806635751 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.806631139 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.805583041 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.806752777 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.808779984 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.807379158 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.807312029 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.808334384 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.807367727 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.806124544 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.807109093 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.806894701 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.806886926 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.807086218 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.807272198 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.806584581 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.810845975 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.807284774 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.808471117 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.808239493 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.807919384 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.808310981 seconds)
  done (took 45.121077979 seconds)
done (took 97.385719052 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.483670184 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.899548206 seconds)
  done (took 10.123013583 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.811619091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.811572819 seconds)
  done (took 5.36968158 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.811883157 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.812843962 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.812237797 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.812331337 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.813543863 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.812355808 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.813759179 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.812876801 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.812260027 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.813075575 seconds)
  done (took 19.870574815 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.812906826 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.813488326 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.812771162 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.813231772 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.813207155 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.812555055 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.81296287 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.812966076 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.813849316 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.814705134 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.813286424 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.812879996 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.815390207 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.812104281 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.812694604 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.814051089 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.811808235 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.812550586 seconds)
  done (took 34.381347056 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.813030796 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.81397365 seconds)
  done (took 5.371880163 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.813031648 seconds)
    (2/7) benchmarking "second"...
    done (took 1.813062379 seconds)
    (3/7) benchmarking "month"...
    done (took 1.813865791 seconds)
    (4/7) benchmarking "year"...
    done (took 1.815050571 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.814565111 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.813735498 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.813783827 seconds)
  done (took 14.441912293 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.813796422 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.956875138 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.006995813 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.658254793 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.814479975 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.816904451 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.122032367 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.816243064 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.817904205 seconds)
  done (took 20.568887552 seconds)
done (took 111.868924242 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.628954121 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.81279955 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.114815265 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.926157181 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.833929587 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.150799384 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.852170069 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.464885148 seconds)
done (took 42.531686824 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.878763369 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.815535226 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.857092495 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.858471708 seconds)
  done (took 22.277385542 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.812273119 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.127924693 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.84007452 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.741688188 seconds)
  done (took 22.286963881 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.198995371 seconds)
    (2/2) benchmarking "read"...
    done (took 2.160593223 seconds)
  done (took 6.110037091 seconds)
done (took 59.302333884 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.815572998 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.815246417 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.815044614 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.81605577 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.815344409 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.815394734 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.814889716 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.815612556 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.815525976 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.816333535 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.816034675 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.816099242 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.815110326 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816594694 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816244879 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815811665 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816438877 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.815830445 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816118824 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.815784924 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816804274 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816579636 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.815288768 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.816939453 seconds)
  done (took 45.328509147 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.816301836 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.816226119 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.818938762 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.816434626 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.816667782 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.819240806 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.81694695 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.81874607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.816693305 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.816854959 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81677985 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.817244159 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.816884292 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.818668378 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817289136 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.817387452 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.817513547 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816460007 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819823052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.816520442 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.817119809 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818082162 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.818070349 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.815849719 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.819278723 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817703904 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.817366578 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.818064307 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81738627 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.820475567 seconds)
  done (took 56.27712271 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.818680988 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.818095878 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.818563184 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.818228793 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.82051643 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.817837321 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.819185694 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.819011898 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.819116018 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.819968755 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.819091997 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.818772142 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.819595349 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.819957445 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.81889706 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.821695908 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.81871925 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.819788329 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.819690965 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.819939087 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.819606417 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.819409134 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.818715399 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.820338092 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.81830563 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.818172337 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.821439538 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.819452555 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.818926737 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.819510534 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.819274896 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.819394692 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.8194898 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.81933662 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.819350949 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.81871407 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.81919223 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.820510642 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.819688833 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.81992255 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.820724219 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.819990209 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.822640239 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.819955511 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.819764403 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.819246821 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.819531459 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.819294262 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.823254255 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.819923509 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.819522658 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.81988737 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.820067207 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.822189917 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.82020297 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.820451801 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.8227988 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.820829287 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.819099444 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.821727288 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.820076657 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.820073735 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.820339669 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.82144277 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.822812749 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.820815563 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.82037476 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.82113255 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.821912626 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.820596799 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.824280749 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.821087497 seconds)
  done (took 132.793616983 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.825203309 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822548673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.826150958 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.821170776 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82152129 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.822649515 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.822137041 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821989372 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824024351 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.821744295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822236755 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822869017 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821038363 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.823915844 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821132536 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.82156651 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.82272499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822475844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.821967086 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.825026106 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822499984 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.822213151 seconds)
  done (took 41.852366144 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821780039 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825485848 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.822664893 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.822616629 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.822126509 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.822732195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.822707202 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825547397 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822781215 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822793995 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825889249 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822999914 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.824905788 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82323361 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821986036 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.822841816 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823295755 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.823559743 seconds)
  done (took 34.574685913 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.823699284 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.823780194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.823383301 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.823802211 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.825051378 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.82366589 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824442527 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.825885194 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.824141021 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.823017233 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.827052189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823597453 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.824545976 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823595813 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82382243 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.827078853 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.823830785 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823168096 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824068805 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824160887 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.824470589 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825374904 seconds)
  done (took 41.893397207 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824096514 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.825573981 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.824420953 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.825014801 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.825559845 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.824933614 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.824191265 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.8244277 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.82390471 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.826384321 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824225549 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.824776513 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.824022824 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824788258 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.826380216 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824595222 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.824517074 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829297361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825099156 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.827578054 seconds)
  done (took 38.259990283 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827331941 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.8271081 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.827562027 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827838879 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828704967 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.826986501 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827832947 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.82655277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827723781 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.829825777 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.827475512 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.827604539 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827228562 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.829864696 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.827287753 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829988634 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828495228 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.828266814 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.827630154 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827641798 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.829517559 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828175834 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828562269 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.82749062 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828027097 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82826469 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829952757 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.828813667 seconds)
  done (took 52.945255383 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827555498 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.8277337 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.828735413 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.826663192 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.826653274 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.82729595 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.828248215 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.826833628 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827513973 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.827053348 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.827559781 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.827213292 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.827435937 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.829779854 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.826582759 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.827609081 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828188325 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.830360445 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827617397 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829917653 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.82767827 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827548438 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.828227062 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827952602 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832250438 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.828571558 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828288477 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828491156 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828652343 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828446467 seconds)
  done (took 56.602658599 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.848761549 seconds)
    (2/2) benchmarking "in"...
    done (took 1.850383726 seconds)
  done (took 5.46094107 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.829808686 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83216613 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.829689193 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.829352354 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.830611048 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.828743517 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.830103644 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831214999 seconds)
  done (took 16.404398545 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.830378123 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838792557 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.831310619 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.833081026 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.831887263 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.845130188 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.838853187 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.83757457 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.838616612 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.839485896 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.835265859 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.839643509 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.840194753 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.840574173 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.832655486 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.83698237 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836891058 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.838730205 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.837936092 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.83085372 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839946167 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833160599 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.830755965 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.83550224 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.831130949 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.840847689 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.846251524 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.837332541 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838630559 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.83152545 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.84823856 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.831836713 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.832272916 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.83776427 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.832817456 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.832223429 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.846777021 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.83439838 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.833793426 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.83417914 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.841086525 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841181435 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.841817003 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.845741809 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.833856896 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.832581953 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.832091437 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.836160624 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.838135199 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.841425144 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.840152577 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.839029364 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.835394348 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.832625515 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.839777163 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.835101714 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.83554036 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.840209311 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.847835306 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.846774776 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.843076111 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.861473556 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.848291255 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.836601228 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.834961811 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.847708988 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.85608289 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.840495033 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.840773243 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.835852771 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.848758833 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.834158705 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.836408083 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.834767892 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.853426617 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.843486069 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.836196537 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.83430684 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.83549471 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.837992383 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.840971032 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.836747583 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.839796666 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.839479316 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.848467974 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.868419902 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.837194521 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.837077515 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.845729784 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.841875344 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.842126572 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.843276195 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.841514074 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.836019604 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.842314192 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.847222202 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.837973601 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.836480146 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.841239122 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.850992539 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.835903691 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.837296985 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845147757 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.845592455 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.836354585 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.839208856 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.843042892 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.839331598 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.849994426 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.838039647 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.838477765 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.836095016 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.844574156 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.842402065 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.836868613 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844863219 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.844820648 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.852450974 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.844470146 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.845984617 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.84618368 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.845681813 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.851124552 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.862434704 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.836172283 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.845821747 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.847299108 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.85075559 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.846506293 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.837401174 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.845255802 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.837690354 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.837061434 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.84519232 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.838522329 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.838964923 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.837184447 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.840083135 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.838176638 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.840845024 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.847289893 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.844887706 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.845381629 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.839758655 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.84783034 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.840428957 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.845736065 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.851783562 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.845091902 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.839679562 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.837803737 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.846973866 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.845897913 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.844646744 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.839913002 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.838935317 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.84049569 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.845142998 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.846301645 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.840349047 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.839868718 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.847440711 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.843168619 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.841442487 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.841096036 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.845177868 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84063177 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.842061823 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.845897286 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.845555245 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.848914353 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841738107 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.850328367 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.839946763 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.839680234 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.841855506 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.840565477 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.847196449 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.849057297 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.85500154 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.848332373 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.85403126 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.840724172 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.854048304 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.84094604 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.846874839 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.846689957 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.841916766 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.843997936 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.840286441 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.840363094 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.848786941 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.866183223 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.856241089 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.847935756 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.847704946 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.851250698 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.844981688 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.851953809 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.842856301 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847382718 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.84911013 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.844008158 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.842215086 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.84210036 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.850651887 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.847090875 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.841496892 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.850338235 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.84287921 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.843584684 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.848275822 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.842281308 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.848487841 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.841795992 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.847857579 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.848159905 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.84242851 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.856388752 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.851279159 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.845531588 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.844019602 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.849628321 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.844102464 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.843735995 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.848592412 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.853649827 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.848662534 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.849244985 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858420363 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.851338666 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.851133647 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.849509628 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.844021299 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.851255626 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.844487035 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.851255453 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.851304932 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.851469192 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.843850231 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.85519563 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.843111927 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.852957963 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.84514073 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850579125 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.845566098 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.851299908 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.846712546 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.84461439 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.857423087 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.844049802 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.851163156 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.844153366 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.854065385 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.851580371 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.852201013 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.845876924 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.853207531 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.855087383 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.857465369 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.85141379 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.853961772 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.85319393 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.852034736 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.850414459 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.850852278 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863826562 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.860430528 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.846013723 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.846320482 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.846864404 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.854122012 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.846186891 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.847102467 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863385089 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.854191563 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.855532765 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.849685528 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.848761982 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.849144179 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.861213341 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853209224 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.856167026 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.853151808 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.854330145 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.854442085 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.846490019 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854465085 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.848222087 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.853342167 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.85098222 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.846379978 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.853554967 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.846453241 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.862821404 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.848403955 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.85247204 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.861795926 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.854927144 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.853245772 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.854685659 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.846764886 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.853653831 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.853775373 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.853356685 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.854850851 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.849035703 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.856078731 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.862083149 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.856284761 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.85818103 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.854468473 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.864017011 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.84985848 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.84826705 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.849048992 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.857777123 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.856563097 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.848244545 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.853920012 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.863247049 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.854814891 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.855672554 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.85576294 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.849000851 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.850854219 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.850440437 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.855523347 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.861126272 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.858696947 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.849421576 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.851363064 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.848922095 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.854887849 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.858731157 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.856387636 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.854359581 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.855810187 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.849247819 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.851938577 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.850860738 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.851315888 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.851450621 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.849150987 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.849312559 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.866674557 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.852473462 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.85693029 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.856741887 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.849858435 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.866466061 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.851368104 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.850702068 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.857413258 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.850495767 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.86009225 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.850037249 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.851688603 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.856501273 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.850948145 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.857719547 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.869389014 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.864425578 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.860202894 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.857896751 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.853147473 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.858239931 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.866146179 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.872604772 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.851774646 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.858119951 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.854924914 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.868420633 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.859519842 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.862207315 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860463614 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.860028204 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.859240264 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.856797281 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.860770167 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.868234457 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.856062183 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.853244268 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.852116408 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.862352983 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.861085956 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.851649431 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.859329794 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862380391 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.859100448 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.869417473 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.853254918 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.859529927 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.855530707 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.853774713 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.854988063 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.853154355 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.861995415 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.860825938 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.854571874 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.855149045 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.859941631 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.86327981 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.858269724 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862173446 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.867860829 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856713606 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.854542347 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.860855273 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.857086879 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.860745264 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.853847476 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.859073686 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.863293258 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.853220418 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.862882191 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.86230293 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.867593742 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.860677873 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.853510889 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.855607902 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.862877629 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.859935292 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.856317818 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.860526364 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.869219703 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.862599999 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.869719355 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.867796189 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.857043247 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.862059862 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868085666 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.863621423 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.855175525 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.859600969 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.856462779 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.864348969 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.862901544 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.861031347 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.857500085 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.862982321 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.86544013 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.855370739 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.861687044 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.856549008 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.857245578 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.864762819 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.863086216 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.866545733 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.855460561 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.85580672 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.860866636 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.861797488 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.862039043 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.863909331 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.857218299 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.856133943 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.863732944 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.863259275 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.859884774 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.855780203 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.855701142 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.86567431 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.85725204 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.856311917 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.862125476 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.862619491 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.856577948 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.865232364 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.869392868 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.85676325 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.8648904 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.864346314 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.866048265 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.859968726 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.858048745 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857842341 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.857959448 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.87453981 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.859523188 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.858885374 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.864100605 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.858135465 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.868382279 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.864445307 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.867639482 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.859137437 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.864635341 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.858516792 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.866307509 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.874022181 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.862756933 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.866356954 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.864499076 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.869511192 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.866744041 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.859862686 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.85885723 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.864523758 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.86491438 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.867493338 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865867355 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.866805859 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.860437938 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.866992178 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.860423107 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.868006268 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.859005077 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.859266986 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.867947285 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.875295238 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.876156238 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.859799292 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.865314585 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.860439558 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.868258196 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.875829493 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.863990024 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.86122835 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.862493576 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.866379312 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.867056702 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.873670312 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.873103668 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.868901826 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.862448145 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.871338668 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.884452132 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.867632311 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.875450379 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.896636766 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.868029376 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.861761996 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.867759565 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.867061492 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.861929234 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.869469349 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.862670455 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.873905655 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.862592476 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.861286768 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.875431988 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.862738849 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.862360605 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.862522289 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.868622441 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.872228246 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.862892193 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.874723016 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.86523081 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.861969464 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.868101316 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.870766721 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.862146566 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.862425525 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.860871015 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.869006597 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.8618598 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.865583465 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.879930957 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.863616123 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.869212537 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.880464665 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.878614746 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.863302426 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.86241792 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.863872931 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.872720889 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.871003653 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.862163605 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.872359989 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.869870865 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.870849066 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.869574043 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.870633854 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.869901821 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.868363736 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.863328985 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.864989922 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.88023457 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.878519344 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.869764412 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.870451501 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.87427097 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.86292491 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.878753297 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.876305981 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.866028255 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.870743859 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865588939 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.865048763 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.864211106 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.864002922 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.87236651 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.872138969 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.865851033 seconds)
  done (took 1106.294271513 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.865360119 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.864482045 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864754383 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.864972357 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863951871 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864198137 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86459607 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.864800045 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.86445769 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.864204219 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.865824417 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865273959 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.863867323 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.864712059 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.864435553 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.865535555 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865826525 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864687635 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.864269376 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864317553 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.865065064 seconds)
  done (took 40.954833388 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.864361735 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.864910792 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.865374355 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.86469227 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865112799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.86480086 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.864796312 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864643111 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.866111579 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865785735 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.866616273 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864943625 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.865828919 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.865634901 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865249929 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86553626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.865296922 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.865930294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.866541214 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.865724987 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.867152325 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.866651482 seconds)
  done (took 42.837671558 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.86769692 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.867444283 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.872057897 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.866681703 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.865843942 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.867974716 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.866533898 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.875213116 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.873659261 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.874586382 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.878388598 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.873883221 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.866538838 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.877534883 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.867530575 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.86972845 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.015225149 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.869321187 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.869661502 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.867618134 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.870702681 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.881199623 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.868045391 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.86768207 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.873466038 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.869146169 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.867738141 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.867251256 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.867620145 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.876158148 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.8745187 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.866757556 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.87315672 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.87582445 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.874444421 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.876115035 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.873359557 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.870392259 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.868117244 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.867492967 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.882576073 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.889955849 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.867831788 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.869344307 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.880182345 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.869109706 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.868716761 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.876299624 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.875691354 seconds)
  done (took 93.660137643 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.867394979 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.868588069 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.86998086 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.867694017 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.867815418 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.867607615 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.867892616 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.86892288 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.868491997 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.868337721 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.868923055 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.869659348 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.86959452 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.868797451 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.869370445 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.869319137 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.87031471 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.870757591 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.869194911 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.869064129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.869480206 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.869241294 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.868952519 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.87041756 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.869675424 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.869054416 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.870145826 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.870455442 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.870422066 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.868846493 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.869997846 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.87021562 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.86921942 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.869937811 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.869999304 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.869156821 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.870013952 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.870233708 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.870246219 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.870084097 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.869541825 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.869687774 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.869964515 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.869755628 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.870272518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.870376226 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.8702188 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.870560378 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.871255376 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.871451268 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.870421238 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.870941038 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.87060464 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.870581413 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.870670472 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.872607787 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.871596589 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.871376229 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.871311696 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.871993373 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.871566353 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.871576359 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.870893414 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.871731072 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.871363193 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.871619628 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.870801904 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.871078481 seconds)
  done (took 128.961512724 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.87396341 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.874107361 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874275237 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8748171 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.873718073 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.874602395 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.874414345 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.874469823 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.875725733 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.873950888 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.874205326 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.873117485 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.874864086 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.873019793 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.874367939 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.874188179 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.874342399 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.873922156 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.874811127 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874988669 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.875157544 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.875116024 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.875901297 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.87539616 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.875729139 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.874674404 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.874895847 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.875080673 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.874674172 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.875682267 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.875148021 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.875751481 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.875614183 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.875035664 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.875973545 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.875433952 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.875837585 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875717813 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.876212514 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.87672446 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.875614594 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.874875568 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.876303714 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.875793524 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.875861006 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.875292578 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.87539624 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.876076855 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.874237777 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.87615311 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.875913821 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.876192225 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.876538887 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.876725878 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.876669611 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.87556289 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876450462 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.87679895 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875920313 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.875036565 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.878654481 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.874423814 seconds)
  done (took 118.071442258 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.874137614 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.874728597 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.874596353 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.876022439 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.874591258 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.873855212 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.874627041 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.87453409 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.87687935 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.874504144 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.87424528 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87401595 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875561499 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87422003 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.874612923 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.876112813 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.874001652 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.87425772 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.874680071 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.87541935 seconds)
  done (took 39.300651324 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.875569325 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.87549284 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.875612923 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.877142191 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.875314428 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.874421054 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.876723706 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875517819 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875557604 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.877976297 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.875498678 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.875913296 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875937675 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.876825808 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.87785518 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.876174574 seconds)
  done (took 31.822666687 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.876886325 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.8765245 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.879894373 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.878470308 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.876078876 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.875753601 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.87593366 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.877403683 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.877856555 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.876617156 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.877503765 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.875734874 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.876535205 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.880372636 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.876256839 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.877665153 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.878192195 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.87756536 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.878981413 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.880561393 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.87790414 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.877916911 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.876551194 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.876725645 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.878322737 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.877491591 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.87716486 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.878265046 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.877695355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.879185129 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.877800237 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.877730831 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.878860521 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.877732286 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.881959086 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.878931307 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.878303072 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.877810952 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.878331346 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.878332326 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.879888864 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.878367489 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.878758053 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.878917024 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.878959808 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.880423366 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.878816734 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.879201082 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.878496698 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.879151621 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.881408452 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.880944083 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.879479287 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.879693552 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.879858939 seconds)
  done (took 105.11501745 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.880116629 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.879187429 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.879790552 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.87979165 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.879646186 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.880302556 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.878963798 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.87994239 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.880271342 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.880308885 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.882124218 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.879819915 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.879808884 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.880353717 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.880107856 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.880040449 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.881786251 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.879856999 seconds)
  done (took 35.65172989 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.880652419 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.880338088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.881000508 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.879930455 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.87986795 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.881377966 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.879899489 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.881622766 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.880912054 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.880566494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879882597 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.880262046 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.880788512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.880757331 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.880699248 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880596141 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.881267688 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.881103329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.880442072 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.881808216 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.881436071 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.881968412 seconds)
  done (took 43.187550646 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.890846777 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.887647507 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.902064991 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.907625042 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.908694473 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.920409323 seconds)
  done (took 13.227071621 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881905994 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881994045 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.884045433 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882573948 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882400238 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882799443 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882977987 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882907489 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882538702 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886336421 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883202047 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883242419 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882699825 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883131088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883279733 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882226577 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882850199 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882372195 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882842569 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88319907 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884602803 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882764354 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882912642 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883022347 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883002689 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884907906 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882640079 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883555673 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883640992 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88366341 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885223624 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884595364 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883759095 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884323129 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88407497 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884117701 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885549871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.884243251 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884021886 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88458137 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.884611329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88809478 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88441425 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884598694 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885473276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884780352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886060575 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885155885 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884118691 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885171052 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.884669346 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884939299 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886014925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884772952 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.885079064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886717326 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886106705 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891256433 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886223435 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885446883 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885745057 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885708048 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887251304 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886556184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886023321 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886872655 seconds)
  done (took 126.1846625 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886743719 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886437934 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.885791869 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887056785 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886534315 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886543532 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891250386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.886711919 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.885394683 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886335045 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886095195 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889424453 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886177089 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88690129 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886247752 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886292006 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888226069 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.886232909 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886529525 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885986232 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886309687 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887542413 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890670125 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887776181 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886949453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886975478 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887421916 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887927044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887229938 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886744017 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887507629 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887833753 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888979746 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.888041619 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88808926 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888246303 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888179516 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.889545062 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890708306 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887729672 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888291206 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888592146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887794598 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888016113 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888754881 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888548815 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.888450128 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889182024 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890171163 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889250364 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.891986123 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889838971 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890447395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890479397 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890146964 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888865155 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890017838 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889884091 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889484157 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889491693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889357855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888773164 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88903548 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889377296 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889638188 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889667261 seconds)
  done (took 126.440490635 seconds)
done (took 2575.859760991 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.92195353 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.963822166 seconds)
  done (took 15.704166598 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.050781031 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.004173585 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.889798986 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.905070959 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.888874594 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.916577382 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.911160815 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.889692873 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.890329192 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.890691493 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.89065681 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.077435838 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.947136682 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.890147063 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.892579541 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.982068442 seconds)
  done (took 52.739972864 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.894214433 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.894641983 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.905421599 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.894833692 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.894922968 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.908592872 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.925350708 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.899598678 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.930578066 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.907077723 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.964355832 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.905557425 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.895154593 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.950330643 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.907263963 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.909831639 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.989415723 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.970522896 seconds)
  done (took 36.366646276 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.971873954 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.895066779 seconds)
  done (took 10.692530359 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.922592669 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.928751046 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.904229369 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.927686664 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.912098453 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.923385511 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.929820059 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.933319296 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.908273872 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.930678064 seconds)
  done (took 71.044971723 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.898930907 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.898286958 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.898212253 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.893973517 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.891626192 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.897477201 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.894152783 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.89267163 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.57418836 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.931643889 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.902964725 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.904265491 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.895004382 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.895387435 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.893666724 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.919580638 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.007421552 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.892815333 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.89297903 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.900162053 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.895024682 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.958160965 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.913786934 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.897657231 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.926279891 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.573982641 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.907141034 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.90115187 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.001262646 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.894319511 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.895156418 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.108327903 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.899847358 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.356110546 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.222335159 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.900234197 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.906152884 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.902153733 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.895116796 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.015738144 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.897033421 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.901779171 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.828096541 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.198443124 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.98699998 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.940344915 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.23072375 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.900239951 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.896044943 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.929092538 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.899331482 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.899128029 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.912587261 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.412202973 seconds)
  done (took 134.401842361 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.903291962 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.253049761 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.067193387 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.905773838 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.190476023 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107067925 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.903553933 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94676192 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.904158584 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.132582388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.156477751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.006304988 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.903101085 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.90450966 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.901466971 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.901360943 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044977501 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.971051773 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.904459765 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.901136718 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.929485658 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.141158787 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.021864577 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.905539038 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.930397046 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.108468215 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.023555948 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.003875422 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.682835541 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.90213761 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.963978052 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.904112149 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.907971133 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.904610318 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.055861508 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.995956285 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.98332266 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.906800537 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.903840681 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.903888243 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.557571047 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102635118 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.997352894 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.02698268 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.155091381 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106761197 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.678246597 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.903422861 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.631844057 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.065117851 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.130649627 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.136203582 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.02109065 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.907204676 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.424744843 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.903503534 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.90446654 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.149076035 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.123701062 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.002674433 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.907202535 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.904151963 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.9047761 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.139686361 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.905519695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.998715395 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.907877768 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.905240309 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.000554948 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.002576485 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.132545155 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.115199478 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.933708523 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.228762413 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.404662458 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.14908568 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.96885336 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.153964628 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.907509528 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.905430734 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984069432 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.745227035 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.159709885 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.145995855 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.148330466 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.939208034 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.62277644 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.907671261 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.130400786 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.125342344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.155058155 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.152184377 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.141248496 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.232612163 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.90677364 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.907190265 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.193575957 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.026220082 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.908687762 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.248011625 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135611382 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.450673142 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.932417522 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.211230983 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03333353 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.909503984 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.531770648 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.907947655 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.128980416 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.94553586 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.907896234 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.906872278 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.125855937 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.880855258 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.906753672 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.559276212 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.967322729 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.91088677 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138570513 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.911861893 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.166909579 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.908956794 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.134818607 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.356735996 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.937872376 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.134927815 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.152982092 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.910545086 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149701724 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.143815464 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.020419875 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.127741725 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.60853618 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.909088909 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.192983529 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.911016261 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.907675684 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.077166125 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.910748641 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.051106948 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.912363916 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.190600474 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.928775569 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138904358 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.911261164 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.162683112 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.938956877 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.957793735 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.912736889 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033770257 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.910645342 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.737447455 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.063382575 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.914810119 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.910823163 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.725144297 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.90845498 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05677951 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.130849827 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931242562 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.97805514 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.569199469 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.90941757 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.988730211 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.93113099 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.296234662 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.913610936 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.160481819 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.911945717 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.909776571 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.909825128 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.143578411 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.091400832 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.912554444 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.909432942 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.806785994 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.912193069 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910571237 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.091217452 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.29384713 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.911512348 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110482098 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.915003351 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037318043 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.915233238 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.979028934 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.247778867 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910887263 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.913190926 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.911703868 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.911633283 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.910216804 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.173046306 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.935295248 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.425051004 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.046378724 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.175577265 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.219762593 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.148338161 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.951019527 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.912049821 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.16258001 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.912429654 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.971722433 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.912540123 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.930419157 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139327453 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.91327979 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.11684766 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.178569073 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.763710575 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960595745 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.915889135 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.911845139 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.913116217 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.054162694 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992947644 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.91331728 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.913726792 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027510595 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031002126 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.119733568 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.913780156 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.993352859 seconds)
  done (took 911.382078897 seconds)
done (took 1234.152943458 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.916762369 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.91352662 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.907690183 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.916210762 seconds)
  done (took 29.490157849 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.907233452 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.915411499 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.909191869 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.913508759 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.90641271 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.914444665 seconds)
  done (took 13.301269496 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.98281753 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.915101461 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.915950219 seconds)
  done (took 21.648794751 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.978250957 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.308557162 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.046199879 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.332841128 seconds)
  done (took 10.500449093 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.909846403 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.909932158 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.911507088 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.907563614 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.905423164 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.907324872 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.907746835 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.908823527 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.9090538 seconds)
  done (took 19.013565204 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.678456177 seconds)
done (took 100.469803379 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.916025195 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.030499111 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.735051396 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.152255205 seconds)
    (5/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.041682512 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.971284889 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.000746925 seconds)
    (8/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.11964131 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.142204818 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.039503938 seconds)
    (11/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.069429349 seconds)
    (12/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.03401639 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.207776143 seconds)
    (14/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.699326552 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.155891339 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.926224385 seconds)
    (17/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.967566944 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.905600868 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.943386472 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.905838805 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.593269038 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.38890337 seconds)
    (23/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.923944087 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.058584193 seconds)
    (25/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.967543422 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.202143493 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.935411563 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.986612754 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.943370609 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.905680012 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.684846147 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 6.91689512 seconds)
    (33/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.064426785 seconds)
    (34/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.920993388 seconds)
    (35/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.915985511 seconds)
    (36/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.300939661 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.009954415 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.911275101 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.456938464 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.179285026 seconds)
    (41/309) benchmarking ("sort", Int8, false)...
    done (took 4.881617724 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.289926165 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.074381424 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.059142583 seconds)
    (45/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.158206457 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.003584758 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.988504069 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.044206743 seconds)
    (49/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.374075444 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.33029386 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.131590491 seconds)
    (52/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.091777282 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.488230111 seconds)
    (54/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.04244045 seconds)
    (55/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.031358144 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.771157078 seconds)
    (57/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.036619128 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.670105234 seconds)
    (59/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.122607954 seconds)
    (60/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.931579048 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.917643828 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.204898701 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.046072281 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.077587501 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.930259327 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.935640857 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.983777535 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.984291058 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.045168064 seconds)
    (70/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.028679577 seconds)
    (71/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.096530705 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.990394229 seconds)
    (73/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.386233587 seconds)
    (74/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.522283863 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.395923271 seconds)
    (76/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.711323958 seconds)
    (77/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.990857695 seconds)
    (78/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.99057367 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.220485971 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.603618868 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.025980638 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.996939019 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.250363889 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.171706693 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.972267544 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.219505827 seconds)
    (87/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.550133104 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.770834512 seconds)
    (89/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.003609501 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.225989344 seconds)
    (91/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.988379659 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.29573187 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.934008555 seconds)
    (94/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.217580934 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.465717157 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.928869316 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.986408369 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.237135694 seconds)
    (99/309) benchmarking ("sort", Float32, false)...
    done (took 5.567807719 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.913456204 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.915420827 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.032428953 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.911186345 seconds)
    (104/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.94293232 seconds)
    (105/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.206369345 seconds)
    (106/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.117097861 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.269286084 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.932706068 seconds)
    (109/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.01105454 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.94105266 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.007265186 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.262327766 seconds)
    (113/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.991700319 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.926903224 seconds)
    (115/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.046412856 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.177664072 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.92525253 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.975832124 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.961125054 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.212597864 seconds)
    (121/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.303259754 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.938883934 seconds)
    (123/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.164658326 seconds)
    (124/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.934572264 seconds)
    (125/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.12414193 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.050768939 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.913160129 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.315736714 seconds)
    (129/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.259409079 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.923917592 seconds)
    (131/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.75338241 seconds)
    (132/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.202378751 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.045242269 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.115731553 seconds)
    (135/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.913692833 seconds)
    (136/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.400286718 seconds)
    (137/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.09818445 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.240362251 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.928136592 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.924450969 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.836847228 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.950586966 seconds)
    (143/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.314471025 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.927029706 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.174357922 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.100329116 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.099128142 seconds)
    (148/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.795110691 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.928267648 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.21142507 seconds)
    (151/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.427369297 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.783741531 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.790479247 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.055772087 seconds)
    (155/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.914992166 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.892391109 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.943149521 seconds)
    (158/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.053462223 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.167427963 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.047397778 seconds)
    (161/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.023940556 seconds)
    (162/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.020609878 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.935967559 seconds)
    (164/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.273826751 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.098387226 seconds)
    (166/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.174049306 seconds)
    (167/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.923602628 seconds)
    (168/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.227049292 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.260690407 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.929390255 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.019000754 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.087965264 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.929238214 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.022966049 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.523895858 seconds)
    (176/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.017867857 seconds)
    (177/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.979524771 seconds)
    (178/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.072303807 seconds)
    (179/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.94917551 seconds)
    (180/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.377949018 seconds)
    (181/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.288337722 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.009560762 seconds)
    (183/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.030949415 seconds)
    (184/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.926337249 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 9.690091888 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.012127616 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.048834298 seconds)
    (188/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.014943704 seconds)
    (189/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.661722973 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.262782649 seconds)
    (191/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.083944222 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.929026074 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.820076716 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.049663968 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.931494266 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.216733579 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.931013603 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.053046089 seconds)
    (199/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.941814487 seconds)
    (200/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.922105746 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.017001285 seconds)
    (202/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.917958661 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 4.818239384 seconds)
    (204/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.339758947 seconds)
    (205/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.929044848 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.713307272 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.171215067 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.300858071 seconds)
    (209/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.999611579 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.306287774 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.214448064 seconds)
    (212/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.929016247 seconds)
    (213/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.618446679 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.553923635 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.232017356 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.110411102 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.914118538 seconds)
    (218/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.227166067 seconds)
    (219/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.241707461 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.319033078 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.701180754 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.019637422 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.063952839 seconds)
    (224/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.177630385 seconds)
    (225/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.023750529 seconds)
    (226/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.940079022 seconds)
    (227/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.94752102 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.92694071 seconds)
    (229/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.41903564 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.945944213 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.075104952 seconds)
    (232/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.940489061 seconds)
    (233/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.122276168 seconds)
    (234/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.119804223 seconds)
    (235/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.390989132 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.931892661 seconds)
    (237/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.027377282 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.300050439 seconds)
    (239/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.662703043 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.581968148 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.150590763 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.171683147 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.308792291 seconds)
    (244/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.076769056 seconds)
    (245/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.951071017 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.250168329 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.815765038 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.319561893 seconds)
    (249/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.020990629 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.526864834 seconds)
    (251/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.936289643 seconds)
    (252/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.439151684 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.06688662 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.015233147 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.027235545 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.870304294 seconds)
    (257/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.701523019 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.930949805 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.531432415 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.821238667 seconds)
    (261/309) benchmarking ("sort", Float64, false)...
    done (took 5.641456336 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.933699988 seconds)
    (263/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.171607316 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.063345294 seconds)
    (265/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.034873699 seconds)
    (266/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.027192399 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.220611783 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.94647713 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.226288777 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.74372928 seconds)
    (271/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.133185602 seconds)
    (272/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.948835473 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.177343002 seconds)
    (274/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.323222354 seconds)
    (275/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.946147958 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.919032824 seconds)
    (277/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.664414651 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.344701024 seconds)
    (279/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.922209814 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.274485189 seconds)
    (281/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.205840398 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.108675974 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.049917811 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.233770613 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.951062484 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.250310583 seconds)
    (287/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.832387238 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.047611563 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.9721091 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.825919732 seconds)
    (291/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.922209049 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.946196662 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.895590585 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.10672813 seconds)
    (295/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.656777985 seconds)
    (296/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.16757649 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.067166125 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.961243602 seconds)
    (299/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.165472026 seconds)
    (300/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.577653207 seconds)
    (301/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.977447316 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.308923288 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.147749947 seconds)
    (304/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.193778676 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.2564557 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.147995035 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.937391465 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.06541983 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.026159864 seconds)
  done (took 1026.711523043 seconds)
done (took 1028.629027734 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.951816047 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.946546409 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.928759827 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.950293138 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.042943727 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.972868903 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.94279004 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.93358709 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.981527196 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.980494181 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.928315852 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.970538663 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.930891845 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.930294095 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.930559587 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.946660551 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.229294721 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.95359071 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.949664331 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.943252526 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.949275329 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.928388358 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.980037224 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.973579504 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.934289727 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.93543875 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.932847556 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.950136856 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.043193768 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.933886068 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.934817119 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.943009941 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.229230562 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.95198601 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.929434317 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.951011234 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.94339556 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.942739469 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.935869778 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.963990342 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.365838856 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.935539641 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.931961323 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.931626315 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.931091603 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.938016248 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.932824991 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.94016219 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.946884236 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.94843996 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.36004629 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.953692011 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.934669257 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.93359888 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.945987515 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.933350082 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.937494565 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.950218735 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.952312752 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.949592525 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.218421545 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.962130846 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.936437094 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.951266922 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.942956294 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.395582811 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.936235132 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.939415661 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.365276311 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.945297526 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.39581104 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.948168497 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.935965344 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.947894692 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.966551792 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.230636138 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.953599813 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.932307374 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.943001428 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.932444331 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.945322843 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.948784403 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.938593012 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.937165565 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950625162 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.977170628 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.94639503 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.934293905 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.945719667 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.953559816 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.943442296 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.946907657 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.937847112 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.932324862 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.946644639 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.939622571 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.937220411 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.937171867 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.939665979 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.948658105 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.365698018 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.95495151 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.933079208 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.932026895 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.93503535 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.949706257 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.365673717 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.942039378 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.959380364 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.985276266 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.938079382 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.222211341 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.957846527 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.951526342 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.946843509 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.937583152 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.932881814 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.22050181 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.383150661 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.952981215 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.933385386 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.931786541 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.950250985 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.935287431 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.930145223 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.230899247 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.957107634 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.949393362 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.056090788 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.94700586 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.967196128 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.932624349 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.936223988 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.978070705 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.950051062 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.966322491 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.936572835 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.950101766 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.950125413 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.92963996 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.945578602 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.94542399 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.932450856 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.940306826 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.930362974 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.977335971 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.948334086 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.946811968 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.952944979 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.055023223 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.929499688 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.218192358 seconds)
done (took 303.625857468 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.012581544 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.935604555 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.054000171 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.931540903 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.024203792 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.009639804 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.929455612 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.931814386 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.930452581 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.448079862 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.930782241 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.934531372 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.934812968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.929675926 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.004653377 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.929221483 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.928737662 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.219355199 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.933625534 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.014973023 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.935448334 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.928410423 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.928081589 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.4410158 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.934257591 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.935345187 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.013096527 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.927888971 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.224786646 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.932575974 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.935341034 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.22628962 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.012256922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.942362922 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.935324899 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.934485065 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.022020008 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.935725757 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.002097086 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.001860375 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.052460366 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.963072196 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.934995027 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.935661833 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.931925351 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.931195161 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.928790737 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.960820668 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.93392991 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.93532148 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.21816439 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.933400711 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.934360521 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.92942805 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.928340889 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.946258076 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.930882206 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.932259577 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.014955271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.933059415 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.003753162 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.438548551 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.44895237 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.930204999 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.936630174 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.930060651 seconds)
  done (took 188.873628137 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.001929596 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.010426802 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.003011665 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.941144609 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.986701927 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.004107297 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.941160218 seconds)
  done (took 15.746225252 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.942690956 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.931335682 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.985912691 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.985869454 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.933120172 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.120356562 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.951286633 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.936544031 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.966229426 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.932149145 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.587906785 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.986998004 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.938164082 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.938622523 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.949476747 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.992899556 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.939196148 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.932836678 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.047151355 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.085813169 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.936767094 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.941724874 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.963341642 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.950995526 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.931851762 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.931001551 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.934683929 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.945237554 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.931686261 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.93125803 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.930941652 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.989915377 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.932431185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.937181686 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.934629123 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.933048843 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.933554815 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.933616347 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.932844937 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.938439928 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.932083112 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.932500212 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.932768529 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.933528442 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.933463501 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.962258757 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.932522692 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.934460663 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.933123535 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.933620015 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.965502948 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.933192955 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.933037162 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.937463258 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.983886707 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.939897334 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.934952687 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.933658367 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.933909338 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.934957875 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.934065616 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.089543438 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.99153751 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.933468594 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.988618921 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.092354128 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.933875529 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.9337969 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.933543158 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.027429096 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.933163708 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.988985172 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.9339665 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.056196045 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.934574368 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.126838168 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.964035642 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.94504367 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.944457372 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.9395813 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.948473976 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.934371172 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.943541135 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.947718996 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.940072657 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.934902099 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.934888925 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.942677542 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.950001216 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.935705996 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.995652965 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.93613634 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.937272913 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.076583886 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.935287913 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.052259566 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.968916625 seconds)
  done (took 212.47437093 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.949031095 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.950170629 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.94466658 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.957531642 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.943906177 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.943496611 seconds)
  done (took 13.552591429 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.946867412 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.94159507 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.936013695 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.937026625 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.939452619 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.938384273 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.936878028 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.944924865 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.942358298 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.936465917 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.938916284 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.935825901 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.938824593 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.938690163 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.938382968 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.937318758 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.940040887 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.936814255 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.937096165 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.938989056 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.07890759 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.939203967 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.938274738 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.939302603 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.943253067 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.93695962 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.956194836 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.937482183 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.936813788 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.952225837 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.944003745 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.939859649 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.939653908 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.951232227 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.941960026 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.93970188 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941115715 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.936862497 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.937986447 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.940371072 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.937342713 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.94046569 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.940402113 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.93777619 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.947668151 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.94521847 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.942931388 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.95728375 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.938139357 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.93673411 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.937460304 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.939068226 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.941483973 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.937360807 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.941303073 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.951543594 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.941650485 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.939051112 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.940189529 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.941839974 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.943570527 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.941063099 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.949092393 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.943353383 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.946516898 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.93810498 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.941536472 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.945411928 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941561284 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.940289529 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.938813902 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.939712282 seconds)
  done (took 142.763841565 seconds)
done (took 575.282900706 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.316733854 seconds)
  done (took 9.183008457 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.047936034 seconds)
  done (took 9.026663599 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.503402601 seconds)
  done (took 10.382737215 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.978226218 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.983626982 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.95845073 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.957715872 seconds)
  done (took 29.763365256 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.244831466 seconds)
  done (took 9.121512222 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.963048268 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.949498108 seconds)
  done (took 15.863442577 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.986912609 seconds)
  done (took 8.864555068 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.32708346 seconds)
  done (took 9.217776438 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.961471679 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.955422482 seconds)
  done (took 15.81676193 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.952475726 seconds)
  done (took 8.829304287 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.650964791 seconds)
  done (took 9.623251539 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.960124177 seconds)
  done (took 8.856171125 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.962516359 seconds)
  done (took 8.840388491 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.145296167 seconds)
  done (took 10.022439944 seconds)
done (took 165.279949043 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.96150884 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.958798646 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.959483598 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.958532505 seconds)
  done (took 29.716604869 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.98903605 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.988837365 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.997252473 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.988088236 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.979150623 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.979688756 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.988477273 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.989246671 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.979540779 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.98643431 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.987400018 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.987175473 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.98686534 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.994884435 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.995476141 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.985842012 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.987434525 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.98815933 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.978597256 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.995876009 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.984910892 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.988444728 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.953160314 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.952641739 seconds)
  done (took 49.511978629 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.145825044 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.027913265 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.114714447 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.005992736 seconds)
  done (took 10.173550722 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.953004949 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.017293789 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.005172231 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.0064017 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.039282361 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.056713268 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.006740117 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.176756506 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.068614784 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.080757935 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.961152352 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.975268858 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.977904212 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.003252228 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.056442315 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.954462961 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.953290517 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.069499432 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.015650795 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.165853707 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.954071221 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.008145946 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.040153146 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.007834466 seconds)
  done (took 50.43466571 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.954732476 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.964287427 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.961980491 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.955275617 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.956000345 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.956054672 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.961980307 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.957334225 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.97734007 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.956821302 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.955663115 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.955883719 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.962446798 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.95599703 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.955685655 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.969828616 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.972243764 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.957636619 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.960087556 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.963155821 seconds)
  done (took 41.091778573 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.961009495 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.808491463 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.308032988 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.214166095 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.961180626 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.965165949 seconds)
  done (took 32.099656786 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.973860398 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.967305764 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.962436986 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.018334493 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.096215239 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.967438526 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.96348728 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.973235183 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.005741229 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.025800575 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.981182658 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.989361105 seconds)
  done (took 25.807012693 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.962145165 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.966381111 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.970156147 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.976029493 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.974364289 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.970761557 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.97072174 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.963099074 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.977838097 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.981635761 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.971451478 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.975758924 seconds)
  done (took 45.545573773 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.17052453 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.183475133 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.17465827 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.342516749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.939595068 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.856590754 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.706997965 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.686652003 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.260750985 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.939174108 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.92266676 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.861502529 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.197083138 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.967526252 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.217774877 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.886172352 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.957689293 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227733335 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.959317458 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.957382754 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.256936983 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.021115496 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.171463017 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.005047794 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.171682818 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.226983926 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.195687353 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.220529708 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.298404833 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.072411125 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.938972338 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.99668922 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.967080766 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.968935964 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.960402088 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.971592385 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228817734 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.959000245 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.010558671 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.950888249 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.883231433 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.358394677 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.080461143 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.382274853 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.0890025 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.199257356 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.963517804 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.938115657 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.009849853 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.265054715 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.068892594 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.171930158 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.884459603 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.36639939 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.089200465 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.961586941 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.966367409 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.659215149 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.199264934 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.040334413 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.347478577 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.078891521 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.962084196 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.0460805 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.958986078 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.078263151 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.155423952 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963741822 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.965967157 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.966369047 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.057289168 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.173597952 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.961749738 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96124159 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.976706126 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.96352145 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.31578513 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.308751512 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.941176069 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.519793575 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.24509546 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.919512274 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.240192904 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.997284911 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.246664754 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.173776606 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.047959225 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.204135597 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.825138133 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.965821794 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.770308382 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.042848115 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.025998005 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.963214372 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.934694885 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.306003773 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.082521948 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.961549399 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.887705164 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.973148915 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.163920802 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.286460872 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.009716369 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.961566393 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.961926121 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.964031877 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.962472821 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.978183562 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.973895034 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.880286075 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.251027629 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.078825893 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.227794395 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.95910756 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.65577688 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.237443467 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.0947134 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.561776586 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.095812155 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.854599803 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101220563 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.975215518 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.965447321 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.159185409 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.384097907 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.938230628 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.200055278 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.046745201 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.998353294 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.968457119 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.045067148 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.189269421 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.965780869 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.2155713 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.208626063 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.612218004 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.044192741 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.038488477 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.973016467 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.177501269 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.045866643 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.505354641 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.18600736 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.334147588 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.950316667 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.56124404 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.26938097 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.352525242 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.979248881 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.948704128 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.994144057 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.665347583 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.890196523 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.9691483 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.301043582 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.007616078 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.045883929 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.96833941 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.966483229 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.972742515 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.051836986 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.039743674 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.038731275 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.892304214 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.967819973 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967843979 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.965336664 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.502399694 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.66646099 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.257097782 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.966915058 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.039153972 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.968067989 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.563452681 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.969677545 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.157092019 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.029822541 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.730938828 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.005330561 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.277288553 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.384591699 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.088933898 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.966289429 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.968237306 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.665413884 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.974751672 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.666537647 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.25497313 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.969496442 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.42537353 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 7.035739413 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.053717426 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.981323119 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.967702767 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.970263741 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.96835069 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.170467605 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.477730642 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.348860224 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.31904309 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.050742282 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.242953018 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.16431141 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.252242198 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.651987093 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.487589876 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.193762254 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.968829268 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969847414 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.431463502 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.974968047 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.185413142 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.170303656 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.242563467 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.275695696 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.38253191 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.973725667 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.983051681 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.210902348 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.969196111 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.412016963 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.062071473 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.372007201 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.783669154 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.241212609 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.038409758 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.982234975 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.618962633 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106306509 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.925136383 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.098320471 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.89571711 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.718298675 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262679944 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.248738921 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.953119166 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.321772549 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.269553329 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.273257127 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.605251675 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.872740271 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.020934718 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.051139555 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.977853028 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.309317819 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.007678741 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.028199836 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.974490699 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.970086225 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.979558038 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.660451194 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.048334756 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.102587759 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.739340895 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.277605051 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.875692326 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.244389551 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.029137443 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.430097771 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.013242125 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.184746214 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.976471998 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.327487405 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.015814552 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.24903854 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.928072148 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.185381842 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.176853842 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.992278118 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.975910105 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.897454656 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.844974541 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.974279968 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.961487904 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.932194302 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.974527846 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.260388075 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.380348447 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.004702356 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.97409677 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.352915023 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.438058624 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.163208933 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.98020014 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.186285203 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.121675228 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.891393781 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.460021089 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.552934521 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.672633936 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.984381981 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.175039293 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.369389706 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.064305695 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.006814234 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.05119264 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.245682241 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.955044764 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.973446441 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.492675445 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.07183537 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.213842777 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.289470912 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.288297752 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.406634641 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.228534534 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.961759706 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.193517907 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.343547516 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.21818577 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.0307778 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.065059341 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.188063297 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.257310477 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.854249984 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.683991795 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.21665775 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.979335615 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.900373962 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.183689143 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.484747397 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.345438156 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.517094129 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.963249457 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.00087504 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.460955107 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.99117668 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.911945224 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.976476068 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.923510612 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.189586215 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.967880471 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.012501965 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.534661023 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.288983791 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.384583567 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.020918482 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.010976921 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.903696726 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.736616568 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.929577913 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.0716403 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.020621588 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.05168106 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.981607485 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.183160565 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.41814534 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.034194345 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.525935384 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.184625694 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280535308 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.256381042 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.284391242 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.939261482 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252300863 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.93507708 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.307848461 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.060792493 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.056603264 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.980072616 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.982751293 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250154413 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.363677742 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.383385987 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.010245407 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.379896255 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.085566055 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.981305212 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.984828123 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.272183898 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.210925356 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.193528309 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.058142845 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.176939027 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.05312905 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.49474046 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.985477993 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.983382884 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.122311651 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.874876317 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.7053015 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.280254249 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.726044303 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.184089774 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.502775976 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.847512776 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.972856553 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.023811507 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.980640393 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.090021638 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.985683079 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.221139719 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.260924872 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.747012962 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.986484724 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.981439015 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.880335163 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.718818178 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.218664482 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.990247139 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.027684195 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.984587162 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.101745892 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.982957555 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.252773636 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.037089484 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.982499347 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.989554923 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.196116258 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.497102749 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.998472077 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.681389763 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.183955297 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.98128808 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.46926354 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.430456878 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.045909279 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 2.021640957 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.975696483 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.22617029 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.516774137 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.978285155 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.978822549 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.209387939 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.984849847 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25544004 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25767423 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.984251447 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.200069454 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.264776098 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266486256 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.994114341 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.870514616 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.992438805 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.269299043 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.04634236 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.983486976 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.993155089 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.990184114 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.715741346 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.473618635 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.139873982 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.325792748 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.766521231 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.743838071 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.987177537 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.987157708 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.720009828 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.7065553 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.198767836 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.271083472 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.93192612 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.187639839 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.688815238 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.896061079 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.253894725 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.912739978 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.990679685 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.295594215 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.254170297 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.920402026 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.990862693 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.605384396 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.992856572 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.079598202 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.98625709 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.113681482 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.254287595 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.369991096 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.100796655 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.626415022 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.659158642 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.927687549 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.039381755 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.796547035 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.548977319 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.720413723 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010094939 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.002464516 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.912693519 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.989523587 seconds)
  done (took 1683.257586998 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.038664689 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.07134505 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.044063883 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.017443363 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.04716044 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.134675948 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.035895136 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.054446112 seconds)
  done (took 58.356244434 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.993287315 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.008753995 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.999720004 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.995372209 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.001000683 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.994910178 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.146865961 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.01886763 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.998545545 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.999150867 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.996489254 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.994410894 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.248842154 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.010288152 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.005527546 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.985643247 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.99904519 seconds)
  done (took 76.312739871 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.987558268 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.204163337 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.04266299 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.986904177 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.939512197 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.993441648 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.953370564 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.046466655 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.9938598 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.215146305 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.287099757 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.998734638 seconds)
  done (took 91.563675391 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.000499982 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.996654122 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.995378772 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.996051092 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.997134895 seconds)
  done (took 11.902298015 seconds)
done (took 2207.687663063 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.231771741 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.043440648 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.082295436 seconds)
  done (took 6.039496101 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.143658322 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.189890763 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.302492906 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.066691396 seconds)
  done (took 10.621643576 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.253595384 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.38911729 seconds)
  done (took 6.556591581 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.341525316 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.000656367 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.350268457 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.99219527 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.994099 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.995746467 seconds)
  done (took 22.901261283 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.990900261 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.990909055 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.991271819 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.991054098 seconds)
  done (took 9.879291352 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.987575802 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.720443992 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.988995282 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.99946129 seconds)
  done (took 21.612018126 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.134365459 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.103282465 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.12948083 seconds)
  done (took 8.281714728 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.148493677 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.836955849 seconds)
  done (took 6.901884675 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.135576456 seconds)
  done (took 4.051036074 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.019278938 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.261470888 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.509505206 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.98849237 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.692422839 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.077705016 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.375096613 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.258599222 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.421865789 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.4593806 seconds)
  done (took 26.979642489 seconds)
done (took 139.664624581 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.536724038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.036692993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.207568783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.408436734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.232803001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.207927745 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.218408696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.404724298 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.079056519 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.065366937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.405104877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.23375093 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.168426043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.028006568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.17495367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.027704319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.238725767 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.41048895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.060370444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.29295226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.226575681 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.030029157 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.235186492 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.052463714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.240514967 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.155607879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.579349175 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.028793279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.220887045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.593892336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.157144167 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.436851308 seconds)
  done (took 173.317461022 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.003562915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.003664421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.00381161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.005147523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.424821018 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.004242495 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.005979585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.003872204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.288979133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.260772967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.020093019 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.381959668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.005100972 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.007617142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.00670567 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.007228902 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.385830823 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.004257231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.006066007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.005444832 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.005805815 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.238112757 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.007142819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.24164471 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.394302453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.004303049 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.005210701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.009728 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.003358469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.003999917 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.004577017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.00811863 seconds)
  done (took 212.684475106 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.003529517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.005210858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.002346785 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.005072926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.005194012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.004347399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.00546849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.004245929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.768945823 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.752793521 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.004048013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.004809017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.010265761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.003892863 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.002620259 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.004266121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.002771685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.004705214 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.003657695 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.004402967 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.006315112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.723770043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.00622771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.75971212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.003403678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.004902712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.008764078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.00342471 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.005412373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.009477059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.006444997 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.002105297 seconds)
  done (took 225.065160999 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.232088869 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.994428877 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.99613414 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.04484427 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.996771658 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.995763269 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.998158749 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.247141017 seconds)
  done (took 20.430049904 seconds)
done (took 633.437375396 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.355984072 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.753829843 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.138803752 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.020169505 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.233839746 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.071468821 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.016964222 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.079511142 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.861181999 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.093708648 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.42667467 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.031369317 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.786945936 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.045505066 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.142443905 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.071115005 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.378143437 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.691032748 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.167700949 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.692067042 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.177360137 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.971098778 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.09413874 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.910679573 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.45497064 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.992040104 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.054201679 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.377151397 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.017298571 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.178642977 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.60617398 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.277741623 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.038453814 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.020529428 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.065299361 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.043378111 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.219227399 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.035047546 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.14159374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.76556808 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.659730211 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.733620935 seconds)
  done (took 105.813097434 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.005792228 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.999654787 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.000401491 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.000504915 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.009060784 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.000846245 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.000807268 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.000836912 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.000087008 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.000228019 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.000796947 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.010556263 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.001285461 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.010237715 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.002527871 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.003196058 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.00055059 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.009440371 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.00209702 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.002516294 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.000600351 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.001367129 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.997104824 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.000585665 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.000245333 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.001567454 seconds)
  done (took 53.997876352 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.994631862 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.192646653 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.245445348 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.026221365 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.003476646 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.00695606 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.030904619 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.00260443 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.004919363 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.003840049 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.12036013 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.000570535 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.015701099 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.245236543 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.021466884 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.995988878 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.994659229 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.00397374 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.203269058 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.019740429 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.034196033 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.00412885 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.033218934 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.019665131 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.005427137 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.005305746 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.006352503 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.441404992 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.016004445 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.122602144 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.080556107 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.040554791 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.333830098 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.260539552 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.0638592 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.004699727 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.996744474 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.130879583 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.012848945 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.006514564 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.035837067 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.015395093 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.250775689 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.535652703 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.020276792 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.996683281 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.437406908 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.14158924 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.046992728 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.015331695 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.257841947 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.023300958 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.997994227 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.005957126 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.041663305 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.018556707 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.005393751 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.264767521 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.021632215 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.035020929 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.006968475 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.007399338 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.215746718 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.015625269 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.195851915 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.015975782 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.012156138 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.006195292 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.249726698 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.02369212 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.547390707 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.020656572 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.999838673 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.126443385 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.201792561 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.467116157 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.021436599 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.217906121 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.34883512 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.044222349 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.018808889 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.423117421 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.048755732 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.01749486 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.999409209 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.000695591 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.999362873 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.045657454 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.034418912 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.463275545 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.546116229 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.284622917 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.049376384 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.02077036 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.008639365 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.267985697 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.010507791 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.999430713 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.242437589 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.56002475 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.022897121 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.014205621 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.522244426 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.025118413 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.03690835 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.019932962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.262188715 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.025664084 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.045959262 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.000467486 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.014457823 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.01092731 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.036896136 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.019334859 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.001226813 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.514864036 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.148211877 seconds)
  done (took 248.352428781 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.010668796 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.01059342 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.010751772 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.009012128 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.008892705 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.010499975 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.01037156 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.009111067 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.010850675 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.009280424 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.00937122 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.009298826 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.011456099 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.01527651 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.055912612 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.016277382 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.504566637 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.010853352 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.011439054 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.013255446 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.575969261 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.018289886 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.011604852 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.013234295 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.013831219 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.01366857 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.017006413 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.049263663 seconds)
  done (took 171.4001014 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.005340722 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.068205791 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.020331936 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.06003364 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.019579173 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.006696252 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.109827842 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.031897591 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.019573124 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.006685681 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.006726361 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.044935521 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.014606319 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.103183363 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.045456145 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.112807842 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.11815893 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.01506865 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.00782178 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.009799763 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.062407816 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.018084771 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.045090915 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.077074405 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.020441255 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.071251347 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.01878117 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.007962539 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.014671223 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.126544191 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.025442689 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.038968495 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.04944867 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.035947694 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.132302945 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.128913747 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.112545439 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.112311422 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.022673208 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.008064415 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.008503839 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.005919413 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.070818469 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.021542253 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.01714443 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.122078559 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.02632913 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.00953107 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.016113182 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.009222257 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.029800596 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.033645699 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.052193496 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.140757029 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.054201857 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.035416946 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.112263592 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.129175901 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.012500761 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.115460255 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.016520425 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.122638045 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.02884568 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.009967773 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.012534025 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.013238276 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.058749781 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.120246317 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.125300734 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.028309341 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.115053833 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.068253341 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.024932845 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.01153312 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.012331372 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07448137 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.130528893 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.07126052 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.083917013 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.058325641 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.018900569 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.019748023 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.01009632 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.046747509 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.018627904 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.12337324 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.13323088 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.017673071 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.011888687 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.010829724 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.011886869 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.043692987 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.083976302 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.064537595 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.115503358 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.056981129 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.058753586 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.019408327 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.025302011 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.016640552 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.053383366 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.019120419 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.023222036 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.286035654 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.051741387 seconds)
  done (took 217.441563016 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.415291823 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.055861788 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.093652639 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.31002931 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.36898852 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.874297588 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.058808904 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.061583911 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.089310218 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.188524918 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.134403461 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.101306223 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.060253866 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.042148667 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.059172015 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.091386884 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.09387552 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.3687041 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.265457798 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.572490166 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.06055693 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.364299462 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.398894501 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.444291839 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.121340864 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.45475486 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.696725836 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.153870861 seconds)
  done (took 66.939399741 seconds)
done (took 865.866055236 seconds)
SAVING RESULT...
DONE!
